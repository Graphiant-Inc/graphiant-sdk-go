/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea{}

// V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea struct for V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea
type V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea struct {
	AreaId *string `json:"areaId,omitempty"`
	Interfaces *map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueAreaInterfacesValue `json:"interfaces,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueAreaWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueAreaWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea{}
	return &this
}

// GetAreaId returns the AreaId field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) GetAreaId() string {
	if o == nil || IsNil(o.AreaId) {
		var ret string
		return ret
	}
	return *o.AreaId
}

// GetAreaIdOk returns a tuple with the AreaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) GetAreaIdOk() (*string, bool) {
	if o == nil || IsNil(o.AreaId) {
		return nil, false
	}
	return o.AreaId, true
}

// HasAreaId returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) HasAreaId() bool {
	if o != nil && !IsNil(o.AreaId) {
		return true
	}

	return false
}

// SetAreaId gets a reference to the given string and assigns it to the AreaId field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) SetAreaId(v string) {
	o.AreaId = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) GetInterfaces() map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueAreaInterfacesValue {
	if o == nil || IsNil(o.Interfaces) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueAreaInterfacesValue
		return ret
	}
	return *o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) GetInterfacesOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueAreaInterfacesValue, bool) {
	if o == nil || IsNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) HasInterfaces() bool {
	if o != nil && !IsNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueAreaInterfacesValue and assigns it to the Interfaces field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) SetInterfaces(v map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueAreaInterfacesValue) {
	o.Interfaces = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) SetType(v string) {
	o.Type = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AreaId) {
		toSerialize["areaId"] = o.AreaId
	}
	if !IsNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) Get() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) Set(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


