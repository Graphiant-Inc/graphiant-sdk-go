/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic{}

// V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic struct for V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic
type V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic struct {
	Bandwidth *int32 `json:"bandwidth,omitempty"`
	Latency *int32 `json:"latency,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamicWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamicWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic{}
	return &this
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) GetBandwidth() int32 {
	if o == nil || IsNil(o.Bandwidth) {
		var ret int32
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) GetBandwidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Bandwidth) {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) HasBandwidth() bool {
	if o != nil && !IsNil(o.Bandwidth) {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given int32 and assigns it to the Bandwidth field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) SetBandwidth(v int32) {
	o.Bandwidth = &v
}

// GetLatency returns the Latency field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) GetLatency() int32 {
	if o == nil || IsNil(o.Latency) {
		var ret int32
		return ret
	}
	return *o.Latency
}

// GetLatencyOk returns a tuple with the Latency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) GetLatencyOk() (*int32, bool) {
	if o == nil || IsNil(o.Latency) {
		return nil, false
	}
	return o.Latency, true
}

// HasLatency returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) HasLatency() bool {
	if o != nil && !IsNil(o.Latency) {
		return true
	}

	return false
}

// SetLatency gets a reference to the given int32 and assigns it to the Latency field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) SetLatency(v int32) {
	o.Latency = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bandwidth) {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if !IsNil(o.Latency) {
		toSerialize["latency"] = o.Latency
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) Get() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) Set(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


