/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy{}

// V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy struct for V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy
type V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy struct {
	NatRulesets *map[string]V1DevicesDeviceIdConfigPutRequestEdgeNatPolicyNatRulesetsValue `json:"natRulesets,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy instantiates a new V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy() *V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy {
	this := V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestEdgeNatPolicyWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestEdgeNatPolicyWithDefaults() *V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy {
	this := V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy{}
	return &this
}

// GetNatRulesets returns the NatRulesets field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) GetNatRulesets() map[string]V1DevicesDeviceIdConfigPutRequestEdgeNatPolicyNatRulesetsValue {
	if o == nil || IsNil(o.NatRulesets) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestEdgeNatPolicyNatRulesetsValue
		return ret
	}
	return *o.NatRulesets
}

// GetNatRulesetsOk returns a tuple with the NatRulesets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) GetNatRulesetsOk() (*map[string]V1DevicesDeviceIdConfigPutRequestEdgeNatPolicyNatRulesetsValue, bool) {
	if o == nil || IsNil(o.NatRulesets) {
		return nil, false
	}
	return o.NatRulesets, true
}

// HasNatRulesets returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) HasNatRulesets() bool {
	if o != nil && !IsNil(o.NatRulesets) {
		return true
	}

	return false
}

// SetNatRulesets gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestEdgeNatPolicyNatRulesetsValue and assigns it to the NatRulesets field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) SetNatRulesets(v map[string]V1DevicesDeviceIdConfigPutRequestEdgeNatPolicyNatRulesetsValue) {
	o.NatRulesets = &v
}

func (o V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NatRulesets) {
		toSerialize["natRulesets"] = o.NatRulesets
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy struct {
	value *V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) Get() *V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) Set(val *V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy(val *V1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) *NullableV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy {
	return &NullableV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeNatPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


