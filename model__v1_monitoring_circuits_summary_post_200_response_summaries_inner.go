/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1MonitoringCircuitsSummaryPost200ResponseSummariesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1MonitoringCircuitsSummaryPost200ResponseSummariesInner{}

// V1MonitoringCircuitsSummaryPost200ResponseSummariesInner struct for V1MonitoringCircuitsSummaryPost200ResponseSummariesInner
type V1MonitoringCircuitsSummaryPost200ResponseSummariesInner struct {
	AdminStatus *bool `json:"adminStatus,omitempty"`
	AverageLinkDownSpeedKbps *float32 `json:"averageLinkDownSpeedKbps,omitempty"`
	AverageLinkUpSpeedKbps *float32 `json:"averageLinkUpSpeedKbps,omitempty"`
	AvgMos *float32 `json:"avgMos,omitempty"`
	ConfigLinkDownSpeedMbps *int32 `json:"configLinkDownSpeedMbps,omitempty"`
	ConfigLinkUpSpeedMbps *int32 `json:"configLinkUpSpeedMbps,omitempty"`
	ConnectionStatus *string `json:"connectionStatus,omitempty"`
	CurrentLinkDownSpeedKbps *float32 `json:"currentLinkDownSpeedKbps,omitempty"`
	CurrentLinkUpSpeedKbps *float32 `json:"currentLinkUpSpeedKbps,omitempty"`
	Delay *int64 `json:"delay,omitempty"`
	Jitter *int64 `json:"jitter,omitempty"`
	Loss *float32 `json:"loss,omitempty"`
	Mos *float32 `json:"mos,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewV1MonitoringCircuitsSummaryPost200ResponseSummariesInner instantiates a new V1MonitoringCircuitsSummaryPost200ResponseSummariesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1MonitoringCircuitsSummaryPost200ResponseSummariesInner() *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner {
	this := V1MonitoringCircuitsSummaryPost200ResponseSummariesInner{}
	return &this
}

// NewV1MonitoringCircuitsSummaryPost200ResponseSummariesInnerWithDefaults instantiates a new V1MonitoringCircuitsSummaryPost200ResponseSummariesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1MonitoringCircuitsSummaryPost200ResponseSummariesInnerWithDefaults() *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner {
	this := V1MonitoringCircuitsSummaryPost200ResponseSummariesInner{}
	return &this
}

// GetAdminStatus returns the AdminStatus field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetAdminStatus() bool {
	if o == nil || IsNil(o.AdminStatus) {
		var ret bool
		return ret
	}
	return *o.AdminStatus
}

// GetAdminStatusOk returns a tuple with the AdminStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetAdminStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.AdminStatus) {
		return nil, false
	}
	return o.AdminStatus, true
}

// HasAdminStatus returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasAdminStatus() bool {
	if o != nil && !IsNil(o.AdminStatus) {
		return true
	}

	return false
}

// SetAdminStatus gets a reference to the given bool and assigns it to the AdminStatus field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetAdminStatus(v bool) {
	o.AdminStatus = &v
}

// GetAverageLinkDownSpeedKbps returns the AverageLinkDownSpeedKbps field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetAverageLinkDownSpeedKbps() float32 {
	if o == nil || IsNil(o.AverageLinkDownSpeedKbps) {
		var ret float32
		return ret
	}
	return *o.AverageLinkDownSpeedKbps
}

// GetAverageLinkDownSpeedKbpsOk returns a tuple with the AverageLinkDownSpeedKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetAverageLinkDownSpeedKbpsOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageLinkDownSpeedKbps) {
		return nil, false
	}
	return o.AverageLinkDownSpeedKbps, true
}

// HasAverageLinkDownSpeedKbps returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasAverageLinkDownSpeedKbps() bool {
	if o != nil && !IsNil(o.AverageLinkDownSpeedKbps) {
		return true
	}

	return false
}

// SetAverageLinkDownSpeedKbps gets a reference to the given float32 and assigns it to the AverageLinkDownSpeedKbps field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetAverageLinkDownSpeedKbps(v float32) {
	o.AverageLinkDownSpeedKbps = &v
}

// GetAverageLinkUpSpeedKbps returns the AverageLinkUpSpeedKbps field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetAverageLinkUpSpeedKbps() float32 {
	if o == nil || IsNil(o.AverageLinkUpSpeedKbps) {
		var ret float32
		return ret
	}
	return *o.AverageLinkUpSpeedKbps
}

// GetAverageLinkUpSpeedKbpsOk returns a tuple with the AverageLinkUpSpeedKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetAverageLinkUpSpeedKbpsOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageLinkUpSpeedKbps) {
		return nil, false
	}
	return o.AverageLinkUpSpeedKbps, true
}

// HasAverageLinkUpSpeedKbps returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasAverageLinkUpSpeedKbps() bool {
	if o != nil && !IsNil(o.AverageLinkUpSpeedKbps) {
		return true
	}

	return false
}

// SetAverageLinkUpSpeedKbps gets a reference to the given float32 and assigns it to the AverageLinkUpSpeedKbps field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetAverageLinkUpSpeedKbps(v float32) {
	o.AverageLinkUpSpeedKbps = &v
}

// GetAvgMos returns the AvgMos field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetAvgMos() float32 {
	if o == nil || IsNil(o.AvgMos) {
		var ret float32
		return ret
	}
	return *o.AvgMos
}

// GetAvgMosOk returns a tuple with the AvgMos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetAvgMosOk() (*float32, bool) {
	if o == nil || IsNil(o.AvgMos) {
		return nil, false
	}
	return o.AvgMos, true
}

// HasAvgMos returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasAvgMos() bool {
	if o != nil && !IsNil(o.AvgMos) {
		return true
	}

	return false
}

// SetAvgMos gets a reference to the given float32 and assigns it to the AvgMos field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetAvgMos(v float32) {
	o.AvgMos = &v
}

// GetConfigLinkDownSpeedMbps returns the ConfigLinkDownSpeedMbps field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetConfigLinkDownSpeedMbps() int32 {
	if o == nil || IsNil(o.ConfigLinkDownSpeedMbps) {
		var ret int32
		return ret
	}
	return *o.ConfigLinkDownSpeedMbps
}

// GetConfigLinkDownSpeedMbpsOk returns a tuple with the ConfigLinkDownSpeedMbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetConfigLinkDownSpeedMbpsOk() (*int32, bool) {
	if o == nil || IsNil(o.ConfigLinkDownSpeedMbps) {
		return nil, false
	}
	return o.ConfigLinkDownSpeedMbps, true
}

// HasConfigLinkDownSpeedMbps returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasConfigLinkDownSpeedMbps() bool {
	if o != nil && !IsNil(o.ConfigLinkDownSpeedMbps) {
		return true
	}

	return false
}

// SetConfigLinkDownSpeedMbps gets a reference to the given int32 and assigns it to the ConfigLinkDownSpeedMbps field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetConfigLinkDownSpeedMbps(v int32) {
	o.ConfigLinkDownSpeedMbps = &v
}

// GetConfigLinkUpSpeedMbps returns the ConfigLinkUpSpeedMbps field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetConfigLinkUpSpeedMbps() int32 {
	if o == nil || IsNil(o.ConfigLinkUpSpeedMbps) {
		var ret int32
		return ret
	}
	return *o.ConfigLinkUpSpeedMbps
}

// GetConfigLinkUpSpeedMbpsOk returns a tuple with the ConfigLinkUpSpeedMbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetConfigLinkUpSpeedMbpsOk() (*int32, bool) {
	if o == nil || IsNil(o.ConfigLinkUpSpeedMbps) {
		return nil, false
	}
	return o.ConfigLinkUpSpeedMbps, true
}

// HasConfigLinkUpSpeedMbps returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasConfigLinkUpSpeedMbps() bool {
	if o != nil && !IsNil(o.ConfigLinkUpSpeedMbps) {
		return true
	}

	return false
}

// SetConfigLinkUpSpeedMbps gets a reference to the given int32 and assigns it to the ConfigLinkUpSpeedMbps field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetConfigLinkUpSpeedMbps(v int32) {
	o.ConfigLinkUpSpeedMbps = &v
}

// GetConnectionStatus returns the ConnectionStatus field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetConnectionStatus() string {
	if o == nil || IsNil(o.ConnectionStatus) {
		var ret string
		return ret
	}
	return *o.ConnectionStatus
}

// GetConnectionStatusOk returns a tuple with the ConnectionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetConnectionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionStatus) {
		return nil, false
	}
	return o.ConnectionStatus, true
}

// HasConnectionStatus returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasConnectionStatus() bool {
	if o != nil && !IsNil(o.ConnectionStatus) {
		return true
	}

	return false
}

// SetConnectionStatus gets a reference to the given string and assigns it to the ConnectionStatus field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetConnectionStatus(v string) {
	o.ConnectionStatus = &v
}

// GetCurrentLinkDownSpeedKbps returns the CurrentLinkDownSpeedKbps field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetCurrentLinkDownSpeedKbps() float32 {
	if o == nil || IsNil(o.CurrentLinkDownSpeedKbps) {
		var ret float32
		return ret
	}
	return *o.CurrentLinkDownSpeedKbps
}

// GetCurrentLinkDownSpeedKbpsOk returns a tuple with the CurrentLinkDownSpeedKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetCurrentLinkDownSpeedKbpsOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentLinkDownSpeedKbps) {
		return nil, false
	}
	return o.CurrentLinkDownSpeedKbps, true
}

// HasCurrentLinkDownSpeedKbps returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasCurrentLinkDownSpeedKbps() bool {
	if o != nil && !IsNil(o.CurrentLinkDownSpeedKbps) {
		return true
	}

	return false
}

// SetCurrentLinkDownSpeedKbps gets a reference to the given float32 and assigns it to the CurrentLinkDownSpeedKbps field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetCurrentLinkDownSpeedKbps(v float32) {
	o.CurrentLinkDownSpeedKbps = &v
}

// GetCurrentLinkUpSpeedKbps returns the CurrentLinkUpSpeedKbps field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetCurrentLinkUpSpeedKbps() float32 {
	if o == nil || IsNil(o.CurrentLinkUpSpeedKbps) {
		var ret float32
		return ret
	}
	return *o.CurrentLinkUpSpeedKbps
}

// GetCurrentLinkUpSpeedKbpsOk returns a tuple with the CurrentLinkUpSpeedKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetCurrentLinkUpSpeedKbpsOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentLinkUpSpeedKbps) {
		return nil, false
	}
	return o.CurrentLinkUpSpeedKbps, true
}

// HasCurrentLinkUpSpeedKbps returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasCurrentLinkUpSpeedKbps() bool {
	if o != nil && !IsNil(o.CurrentLinkUpSpeedKbps) {
		return true
	}

	return false
}

// SetCurrentLinkUpSpeedKbps gets a reference to the given float32 and assigns it to the CurrentLinkUpSpeedKbps field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetCurrentLinkUpSpeedKbps(v float32) {
	o.CurrentLinkUpSpeedKbps = &v
}

// GetDelay returns the Delay field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetDelay() int64 {
	if o == nil || IsNil(o.Delay) {
		var ret int64
		return ret
	}
	return *o.Delay
}

// GetDelayOk returns a tuple with the Delay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetDelayOk() (*int64, bool) {
	if o == nil || IsNil(o.Delay) {
		return nil, false
	}
	return o.Delay, true
}

// HasDelay returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasDelay() bool {
	if o != nil && !IsNil(o.Delay) {
		return true
	}

	return false
}

// SetDelay gets a reference to the given int64 and assigns it to the Delay field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetDelay(v int64) {
	o.Delay = &v
}

// GetJitter returns the Jitter field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetJitter() int64 {
	if o == nil || IsNil(o.Jitter) {
		var ret int64
		return ret
	}
	return *o.Jitter
}

// GetJitterOk returns a tuple with the Jitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetJitterOk() (*int64, bool) {
	if o == nil || IsNil(o.Jitter) {
		return nil, false
	}
	return o.Jitter, true
}

// HasJitter returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasJitter() bool {
	if o != nil && !IsNil(o.Jitter) {
		return true
	}

	return false
}

// SetJitter gets a reference to the given int64 and assigns it to the Jitter field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetJitter(v int64) {
	o.Jitter = &v
}

// GetLoss returns the Loss field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetLoss() float32 {
	if o == nil || IsNil(o.Loss) {
		var ret float32
		return ret
	}
	return *o.Loss
}

// GetLossOk returns a tuple with the Loss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetLossOk() (*float32, bool) {
	if o == nil || IsNil(o.Loss) {
		return nil, false
	}
	return o.Loss, true
}

// HasLoss returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasLoss() bool {
	if o != nil && !IsNil(o.Loss) {
		return true
	}

	return false
}

// SetLoss gets a reference to the given float32 and assigns it to the Loss field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetLoss(v float32) {
	o.Loss = &v
}

// GetMos returns the Mos field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetMos() float32 {
	if o == nil || IsNil(o.Mos) {
		var ret float32
		return ret
	}
	return *o.Mos
}

// GetMosOk returns a tuple with the Mos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetMosOk() (*float32, bool) {
	if o == nil || IsNil(o.Mos) {
		return nil, false
	}
	return o.Mos, true
}

// HasMos returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasMos() bool {
	if o != nil && !IsNil(o.Mos) {
		return true
	}

	return false
}

// SetMos gets a reference to the given float32 and assigns it to the Mos field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetMos(v float32) {
	o.Mos = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) SetName(v string) {
	o.Name = &v
}

func (o V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminStatus) {
		toSerialize["adminStatus"] = o.AdminStatus
	}
	if !IsNil(o.AverageLinkDownSpeedKbps) {
		toSerialize["averageLinkDownSpeedKbps"] = o.AverageLinkDownSpeedKbps
	}
	if !IsNil(o.AverageLinkUpSpeedKbps) {
		toSerialize["averageLinkUpSpeedKbps"] = o.AverageLinkUpSpeedKbps
	}
	if !IsNil(o.AvgMos) {
		toSerialize["avgMos"] = o.AvgMos
	}
	if !IsNil(o.ConfigLinkDownSpeedMbps) {
		toSerialize["configLinkDownSpeedMbps"] = o.ConfigLinkDownSpeedMbps
	}
	if !IsNil(o.ConfigLinkUpSpeedMbps) {
		toSerialize["configLinkUpSpeedMbps"] = o.ConfigLinkUpSpeedMbps
	}
	if !IsNil(o.ConnectionStatus) {
		toSerialize["connectionStatus"] = o.ConnectionStatus
	}
	if !IsNil(o.CurrentLinkDownSpeedKbps) {
		toSerialize["currentLinkDownSpeedKbps"] = o.CurrentLinkDownSpeedKbps
	}
	if !IsNil(o.CurrentLinkUpSpeedKbps) {
		toSerialize["currentLinkUpSpeedKbps"] = o.CurrentLinkUpSpeedKbps
	}
	if !IsNil(o.Delay) {
		toSerialize["delay"] = o.Delay
	}
	if !IsNil(o.Jitter) {
		toSerialize["jitter"] = o.Jitter
	}
	if !IsNil(o.Loss) {
		toSerialize["loss"] = o.Loss
	}
	if !IsNil(o.Mos) {
		toSerialize["mos"] = o.Mos
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableV1MonitoringCircuitsSummaryPost200ResponseSummariesInner struct {
	value *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner
	isSet bool
}

func (v NullableV1MonitoringCircuitsSummaryPost200ResponseSummariesInner) Get() *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner {
	return v.value
}

func (v *NullableV1MonitoringCircuitsSummaryPost200ResponseSummariesInner) Set(val *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1MonitoringCircuitsSummaryPost200ResponseSummariesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1MonitoringCircuitsSummaryPost200ResponseSummariesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1MonitoringCircuitsSummaryPost200ResponseSummariesInner(val *V1MonitoringCircuitsSummaryPost200ResponseSummariesInner) *NullableV1MonitoringCircuitsSummaryPost200ResponseSummariesInner {
	return &NullableV1MonitoringCircuitsSummaryPost200ResponseSummariesInner{value: val, isSet: true}
}

func (v NullableV1MonitoringCircuitsSummaryPost200ResponseSummariesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1MonitoringCircuitsSummaryPost200ResponseSummariesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


