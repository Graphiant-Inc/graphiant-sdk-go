/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2MonitoringIkeErrorHistoryPost200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2MonitoringIkeErrorHistoryPost200ResponseDataInner{}

// V2MonitoringIkeErrorHistoryPost200ResponseDataInner struct for V2MonitoringIkeErrorHistoryPost200ResponseDataInner
type V2MonitoringIkeErrorHistoryPost200ResponseDataInner struct {
	DestinationAddress *string `json:"destinationAddress,omitempty"`
	DestinationPort *string `json:"destinationPort,omitempty"`
	ErrorType *string `json:"errorType,omitempty"`
	Message *string `json:"message,omitempty"`
	Timestamp *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"timestamp,omitempty"`
	TunnelName *string `json:"tunnelName,omitempty"`
}

// NewV2MonitoringIkeErrorHistoryPost200ResponseDataInner instantiates a new V2MonitoringIkeErrorHistoryPost200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2MonitoringIkeErrorHistoryPost200ResponseDataInner() *V2MonitoringIkeErrorHistoryPost200ResponseDataInner {
	this := V2MonitoringIkeErrorHistoryPost200ResponseDataInner{}
	return &this
}

// NewV2MonitoringIkeErrorHistoryPost200ResponseDataInnerWithDefaults instantiates a new V2MonitoringIkeErrorHistoryPost200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2MonitoringIkeErrorHistoryPost200ResponseDataInnerWithDefaults() *V2MonitoringIkeErrorHistoryPost200ResponseDataInner {
	this := V2MonitoringIkeErrorHistoryPost200ResponseDataInner{}
	return &this
}

// GetDestinationAddress returns the DestinationAddress field value if set, zero value otherwise.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetDestinationAddress() string {
	if o == nil || IsNil(o.DestinationAddress) {
		var ret string
		return ret
	}
	return *o.DestinationAddress
}

// GetDestinationAddressOk returns a tuple with the DestinationAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetDestinationAddressOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationAddress) {
		return nil, false
	}
	return o.DestinationAddress, true
}

// HasDestinationAddress returns a boolean if a field has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) HasDestinationAddress() bool {
	if o != nil && !IsNil(o.DestinationAddress) {
		return true
	}

	return false
}

// SetDestinationAddress gets a reference to the given string and assigns it to the DestinationAddress field.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) SetDestinationAddress(v string) {
	o.DestinationAddress = &v
}

// GetDestinationPort returns the DestinationPort field value if set, zero value otherwise.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetDestinationPort() string {
	if o == nil || IsNil(o.DestinationPort) {
		var ret string
		return ret
	}
	return *o.DestinationPort
}

// GetDestinationPortOk returns a tuple with the DestinationPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetDestinationPortOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationPort) {
		return nil, false
	}
	return o.DestinationPort, true
}

// HasDestinationPort returns a boolean if a field has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) HasDestinationPort() bool {
	if o != nil && !IsNil(o.DestinationPort) {
		return true
	}

	return false
}

// SetDestinationPort gets a reference to the given string and assigns it to the DestinationPort field.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) SetDestinationPort(v string) {
	o.DestinationPort = &v
}

// GetErrorType returns the ErrorType field value if set, zero value otherwise.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetErrorType() string {
	if o == nil || IsNil(o.ErrorType) {
		var ret string
		return ret
	}
	return *o.ErrorType
}

// GetErrorTypeOk returns a tuple with the ErrorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetErrorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorType) {
		return nil, false
	}
	return o.ErrorType, true
}

// HasErrorType returns a boolean if a field has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) HasErrorType() bool {
	if o != nil && !IsNil(o.ErrorType) {
		return true
	}

	return false
}

// SetErrorType gets a reference to the given string and assigns it to the ErrorType field.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) SetErrorType(v string) {
	o.ErrorType = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) SetMessage(v string) {
	o.Message = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetTimestamp() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.Timestamp) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetTimestampOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the Timestamp field.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) SetTimestamp(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.Timestamp = &v
}

// GetTunnelName returns the TunnelName field value if set, zero value otherwise.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetTunnelName() string {
	if o == nil || IsNil(o.TunnelName) {
		var ret string
		return ret
	}
	return *o.TunnelName
}

// GetTunnelNameOk returns a tuple with the TunnelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) GetTunnelNameOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelName) {
		return nil, false
	}
	return o.TunnelName, true
}

// HasTunnelName returns a boolean if a field has been set.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) HasTunnelName() bool {
	if o != nil && !IsNil(o.TunnelName) {
		return true
	}

	return false
}

// SetTunnelName gets a reference to the given string and assigns it to the TunnelName field.
func (o *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) SetTunnelName(v string) {
	o.TunnelName = &v
}

func (o V2MonitoringIkeErrorHistoryPost200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2MonitoringIkeErrorHistoryPost200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestinationAddress) {
		toSerialize["destinationAddress"] = o.DestinationAddress
	}
	if !IsNil(o.DestinationPort) {
		toSerialize["destinationPort"] = o.DestinationPort
	}
	if !IsNil(o.ErrorType) {
		toSerialize["errorType"] = o.ErrorType
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.TunnelName) {
		toSerialize["tunnelName"] = o.TunnelName
	}
	return toSerialize, nil
}

type NullableV2MonitoringIkeErrorHistoryPost200ResponseDataInner struct {
	value *V2MonitoringIkeErrorHistoryPost200ResponseDataInner
	isSet bool
}

func (v NullableV2MonitoringIkeErrorHistoryPost200ResponseDataInner) Get() *V2MonitoringIkeErrorHistoryPost200ResponseDataInner {
	return v.value
}

func (v *NullableV2MonitoringIkeErrorHistoryPost200ResponseDataInner) Set(val *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2MonitoringIkeErrorHistoryPost200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2MonitoringIkeErrorHistoryPost200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2MonitoringIkeErrorHistoryPost200ResponseDataInner(val *V2MonitoringIkeErrorHistoryPost200ResponseDataInner) *NullableV2MonitoringIkeErrorHistoryPost200ResponseDataInner {
	return &NullableV2MonitoringIkeErrorHistoryPost200ResponseDataInner{value: val, isSet: true}
}

func (v NullableV2MonitoringIkeErrorHistoryPost200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2MonitoringIkeErrorHistoryPost200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


