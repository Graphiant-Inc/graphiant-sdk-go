/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor{}

// V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor struct for V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor
type V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor struct {
	AddressFamilies *map[string]V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpAddressFamiliesValue `json:"addressFamilies,omitempty"`
	AllowAsIn *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborAllowAsIn `json:"allowAsIn,omitempty"`
	AsOverride *bool `json:"asOverride,omitempty"`
	Bfd *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborBfd `json:"bfd,omitempty"`
	DefaultOriginate *string `json:"defaultOriginate,omitempty"`
	EbgpMultihopTtl *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborEbgpMultihopTtl `json:"ebgpMultihopTtl,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	HoldTimer *int32 `json:"holdTimer,omitempty"`
	HoldTimerValue *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue `json:"holdTimerValue,omitempty"`
	KeepaliveTimer *int32 `json:"keepaliveTimer,omitempty"`
	KeepaliveTimerValue *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue `json:"keepaliveTimerValue,omitempty"`
	LocalAddress *string `json:"localAddress,omitempty"`
	LocalInterface *V1GlobalConfigPatchRequestRoutingPoliciesValuePolicyStatementsValueStatementMatchesValueMatchSourceInterface `json:"localInterface,omitempty"`
	MaxPrefixValue *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborMaxPrefixValue `json:"maxPrefixValue,omitempty"`
	Md5Password *V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpMd5Password `json:"md5Password,omitempty"`
	PeerAsn *int32 `json:"peerAsn,omitempty"`
	RemoteAddress *string `json:"remoteAddress,omitempty"`
	RemovePrivateAs *bool `json:"removePrivateAs,omitempty"`
	SendCommunity *bool `json:"sendCommunity,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor{}
	return &this
}

// GetAddressFamilies returns the AddressFamilies field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetAddressFamilies() map[string]V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpAddressFamiliesValue {
	if o == nil || IsNil(o.AddressFamilies) {
		var ret map[string]V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpAddressFamiliesValue
		return ret
	}
	return *o.AddressFamilies
}

// GetAddressFamiliesOk returns a tuple with the AddressFamilies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetAddressFamiliesOk() (*map[string]V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpAddressFamiliesValue, bool) {
	if o == nil || IsNil(o.AddressFamilies) {
		return nil, false
	}
	return o.AddressFamilies, true
}

// HasAddressFamilies returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasAddressFamilies() bool {
	if o != nil && !IsNil(o.AddressFamilies) {
		return true
	}

	return false
}

// SetAddressFamilies gets a reference to the given map[string]V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpAddressFamiliesValue and assigns it to the AddressFamilies field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetAddressFamilies(v map[string]V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpAddressFamiliesValue) {
	o.AddressFamilies = &v
}

// GetAllowAsIn returns the AllowAsIn field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetAllowAsIn() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborAllowAsIn {
	if o == nil || IsNil(o.AllowAsIn) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborAllowAsIn
		return ret
	}
	return *o.AllowAsIn
}

// GetAllowAsInOk returns a tuple with the AllowAsIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetAllowAsInOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborAllowAsIn, bool) {
	if o == nil || IsNil(o.AllowAsIn) {
		return nil, false
	}
	return o.AllowAsIn, true
}

// HasAllowAsIn returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasAllowAsIn() bool {
	if o != nil && !IsNil(o.AllowAsIn) {
		return true
	}

	return false
}

// SetAllowAsIn gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborAllowAsIn and assigns it to the AllowAsIn field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetAllowAsIn(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborAllowAsIn) {
	o.AllowAsIn = &v
}

// GetAsOverride returns the AsOverride field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetAsOverride() bool {
	if o == nil || IsNil(o.AsOverride) {
		var ret bool
		return ret
	}
	return *o.AsOverride
}

// GetAsOverrideOk returns a tuple with the AsOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetAsOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.AsOverride) {
		return nil, false
	}
	return o.AsOverride, true
}

// HasAsOverride returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasAsOverride() bool {
	if o != nil && !IsNil(o.AsOverride) {
		return true
	}

	return false
}

// SetAsOverride gets a reference to the given bool and assigns it to the AsOverride field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetAsOverride(v bool) {
	o.AsOverride = &v
}

// GetBfd returns the Bfd field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetBfd() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborBfd {
	if o == nil || IsNil(o.Bfd) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborBfd
		return ret
	}
	return *o.Bfd
}

// GetBfdOk returns a tuple with the Bfd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetBfdOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborBfd, bool) {
	if o == nil || IsNil(o.Bfd) {
		return nil, false
	}
	return o.Bfd, true
}

// HasBfd returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasBfd() bool {
	if o != nil && !IsNil(o.Bfd) {
		return true
	}

	return false
}

// SetBfd gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborBfd and assigns it to the Bfd field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetBfd(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborBfd) {
	o.Bfd = &v
}

// GetDefaultOriginate returns the DefaultOriginate field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetDefaultOriginate() string {
	if o == nil || IsNil(o.DefaultOriginate) {
		var ret string
		return ret
	}
	return *o.DefaultOriginate
}

// GetDefaultOriginateOk returns a tuple with the DefaultOriginate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetDefaultOriginateOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultOriginate) {
		return nil, false
	}
	return o.DefaultOriginate, true
}

// HasDefaultOriginate returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasDefaultOriginate() bool {
	if o != nil && !IsNil(o.DefaultOriginate) {
		return true
	}

	return false
}

// SetDefaultOriginate gets a reference to the given string and assigns it to the DefaultOriginate field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetDefaultOriginate(v string) {
	o.DefaultOriginate = &v
}

// GetEbgpMultihopTtl returns the EbgpMultihopTtl field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetEbgpMultihopTtl() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborEbgpMultihopTtl {
	if o == nil || IsNil(o.EbgpMultihopTtl) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborEbgpMultihopTtl
		return ret
	}
	return *o.EbgpMultihopTtl
}

// GetEbgpMultihopTtlOk returns a tuple with the EbgpMultihopTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetEbgpMultihopTtlOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborEbgpMultihopTtl, bool) {
	if o == nil || IsNil(o.EbgpMultihopTtl) {
		return nil, false
	}
	return o.EbgpMultihopTtl, true
}

// HasEbgpMultihopTtl returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasEbgpMultihopTtl() bool {
	if o != nil && !IsNil(o.EbgpMultihopTtl) {
		return true
	}

	return false
}

// SetEbgpMultihopTtl gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborEbgpMultihopTtl and assigns it to the EbgpMultihopTtl field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetEbgpMultihopTtl(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborEbgpMultihopTtl) {
	o.EbgpMultihopTtl = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetHoldTimer returns the HoldTimer field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetHoldTimer() int32 {
	if o == nil || IsNil(o.HoldTimer) {
		var ret int32
		return ret
	}
	return *o.HoldTimer
}

// GetHoldTimerOk returns a tuple with the HoldTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetHoldTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.HoldTimer) {
		return nil, false
	}
	return o.HoldTimer, true
}

// HasHoldTimer returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasHoldTimer() bool {
	if o != nil && !IsNil(o.HoldTimer) {
		return true
	}

	return false
}

// SetHoldTimer gets a reference to the given int32 and assigns it to the HoldTimer field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetHoldTimer(v int32) {
	o.HoldTimer = &v
}

// GetHoldTimerValue returns the HoldTimerValue field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetHoldTimerValue() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue {
	if o == nil || IsNil(o.HoldTimerValue) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue
		return ret
	}
	return *o.HoldTimerValue
}

// GetHoldTimerValueOk returns a tuple with the HoldTimerValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetHoldTimerValueOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue, bool) {
	if o == nil || IsNil(o.HoldTimerValue) {
		return nil, false
	}
	return o.HoldTimerValue, true
}

// HasHoldTimerValue returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasHoldTimerValue() bool {
	if o != nil && !IsNil(o.HoldTimerValue) {
		return true
	}

	return false
}

// SetHoldTimerValue gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue and assigns it to the HoldTimerValue field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetHoldTimerValue(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue) {
	o.HoldTimerValue = &v
}

// GetKeepaliveTimer returns the KeepaliveTimer field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetKeepaliveTimer() int32 {
	if o == nil || IsNil(o.KeepaliveTimer) {
		var ret int32
		return ret
	}
	return *o.KeepaliveTimer
}

// GetKeepaliveTimerOk returns a tuple with the KeepaliveTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetKeepaliveTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.KeepaliveTimer) {
		return nil, false
	}
	return o.KeepaliveTimer, true
}

// HasKeepaliveTimer returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasKeepaliveTimer() bool {
	if o != nil && !IsNil(o.KeepaliveTimer) {
		return true
	}

	return false
}

// SetKeepaliveTimer gets a reference to the given int32 and assigns it to the KeepaliveTimer field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetKeepaliveTimer(v int32) {
	o.KeepaliveTimer = &v
}

// GetKeepaliveTimerValue returns the KeepaliveTimerValue field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetKeepaliveTimerValue() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue {
	if o == nil || IsNil(o.KeepaliveTimerValue) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue
		return ret
	}
	return *o.KeepaliveTimerValue
}

// GetKeepaliveTimerValueOk returns a tuple with the KeepaliveTimerValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetKeepaliveTimerValueOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue, bool) {
	if o == nil || IsNil(o.KeepaliveTimerValue) {
		return nil, false
	}
	return o.KeepaliveTimerValue, true
}

// HasKeepaliveTimerValue returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasKeepaliveTimerValue() bool {
	if o != nil && !IsNil(o.KeepaliveTimerValue) {
		return true
	}

	return false
}

// SetKeepaliveTimerValue gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue and assigns it to the KeepaliveTimerValue field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetKeepaliveTimerValue(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborHoldTimerValue) {
	o.KeepaliveTimerValue = &v
}

// GetLocalAddress returns the LocalAddress field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetLocalAddress() string {
	if o == nil || IsNil(o.LocalAddress) {
		var ret string
		return ret
	}
	return *o.LocalAddress
}

// GetLocalAddressOk returns a tuple with the LocalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetLocalAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LocalAddress) {
		return nil, false
	}
	return o.LocalAddress, true
}

// HasLocalAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasLocalAddress() bool {
	if o != nil && !IsNil(o.LocalAddress) {
		return true
	}

	return false
}

// SetLocalAddress gets a reference to the given string and assigns it to the LocalAddress field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetLocalAddress(v string) {
	o.LocalAddress = &v
}

// GetLocalInterface returns the LocalInterface field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetLocalInterface() V1GlobalConfigPatchRequestRoutingPoliciesValuePolicyStatementsValueStatementMatchesValueMatchSourceInterface {
	if o == nil || IsNil(o.LocalInterface) {
		var ret V1GlobalConfigPatchRequestRoutingPoliciesValuePolicyStatementsValueStatementMatchesValueMatchSourceInterface
		return ret
	}
	return *o.LocalInterface
}

// GetLocalInterfaceOk returns a tuple with the LocalInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetLocalInterfaceOk() (*V1GlobalConfigPatchRequestRoutingPoliciesValuePolicyStatementsValueStatementMatchesValueMatchSourceInterface, bool) {
	if o == nil || IsNil(o.LocalInterface) {
		return nil, false
	}
	return o.LocalInterface, true
}

// HasLocalInterface returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasLocalInterface() bool {
	if o != nil && !IsNil(o.LocalInterface) {
		return true
	}

	return false
}

// SetLocalInterface gets a reference to the given V1GlobalConfigPatchRequestRoutingPoliciesValuePolicyStatementsValueStatementMatchesValueMatchSourceInterface and assigns it to the LocalInterface field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetLocalInterface(v V1GlobalConfigPatchRequestRoutingPoliciesValuePolicyStatementsValueStatementMatchesValueMatchSourceInterface) {
	o.LocalInterface = &v
}

// GetMaxPrefixValue returns the MaxPrefixValue field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetMaxPrefixValue() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborMaxPrefixValue {
	if o == nil || IsNil(o.MaxPrefixValue) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborMaxPrefixValue
		return ret
	}
	return *o.MaxPrefixValue
}

// GetMaxPrefixValueOk returns a tuple with the MaxPrefixValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetMaxPrefixValueOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborMaxPrefixValue, bool) {
	if o == nil || IsNil(o.MaxPrefixValue) {
		return nil, false
	}
	return o.MaxPrefixValue, true
}

// HasMaxPrefixValue returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasMaxPrefixValue() bool {
	if o != nil && !IsNil(o.MaxPrefixValue) {
		return true
	}

	return false
}

// SetMaxPrefixValue gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborMaxPrefixValue and assigns it to the MaxPrefixValue field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetMaxPrefixValue(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighborMaxPrefixValue) {
	o.MaxPrefixValue = &v
}

// GetMd5Password returns the Md5Password field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetMd5Password() V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpMd5Password {
	if o == nil || IsNil(o.Md5Password) {
		var ret V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpMd5Password
		return ret
	}
	return *o.Md5Password
}

// GetMd5PasswordOk returns a tuple with the Md5Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetMd5PasswordOk() (*V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpMd5Password, bool) {
	if o == nil || IsNil(o.Md5Password) {
		return nil, false
	}
	return o.Md5Password, true
}

// HasMd5Password returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasMd5Password() bool {
	if o != nil && !IsNil(o.Md5Password) {
		return true
	}

	return false
}

// SetMd5Password gets a reference to the given V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpMd5Password and assigns it to the Md5Password field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetMd5Password(v V1GatewaysPutRequestDetailsIpsecGatewayRoutingBgpMd5Password) {
	o.Md5Password = &v
}

// GetPeerAsn returns the PeerAsn field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetPeerAsn() int32 {
	if o == nil || IsNil(o.PeerAsn) {
		var ret int32
		return ret
	}
	return *o.PeerAsn
}

// GetPeerAsnOk returns a tuple with the PeerAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetPeerAsnOk() (*int32, bool) {
	if o == nil || IsNil(o.PeerAsn) {
		return nil, false
	}
	return o.PeerAsn, true
}

// HasPeerAsn returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasPeerAsn() bool {
	if o != nil && !IsNil(o.PeerAsn) {
		return true
	}

	return false
}

// SetPeerAsn gets a reference to the given int32 and assigns it to the PeerAsn field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetPeerAsn(v int32) {
	o.PeerAsn = &v
}

// GetRemoteAddress returns the RemoteAddress field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetRemoteAddress() string {
	if o == nil || IsNil(o.RemoteAddress) {
		var ret string
		return ret
	}
	return *o.RemoteAddress
}

// GetRemoteAddressOk returns a tuple with the RemoteAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetRemoteAddressOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteAddress) {
		return nil, false
	}
	return o.RemoteAddress, true
}

// HasRemoteAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasRemoteAddress() bool {
	if o != nil && !IsNil(o.RemoteAddress) {
		return true
	}

	return false
}

// SetRemoteAddress gets a reference to the given string and assigns it to the RemoteAddress field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetRemoteAddress(v string) {
	o.RemoteAddress = &v
}

// GetRemovePrivateAs returns the RemovePrivateAs field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetRemovePrivateAs() bool {
	if o == nil || IsNil(o.RemovePrivateAs) {
		var ret bool
		return ret
	}
	return *o.RemovePrivateAs
}

// GetRemovePrivateAsOk returns a tuple with the RemovePrivateAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetRemovePrivateAsOk() (*bool, bool) {
	if o == nil || IsNil(o.RemovePrivateAs) {
		return nil, false
	}
	return o.RemovePrivateAs, true
}

// HasRemovePrivateAs returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasRemovePrivateAs() bool {
	if o != nil && !IsNil(o.RemovePrivateAs) {
		return true
	}

	return false
}

// SetRemovePrivateAs gets a reference to the given bool and assigns it to the RemovePrivateAs field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetRemovePrivateAs(v bool) {
	o.RemovePrivateAs = &v
}

// GetSendCommunity returns the SendCommunity field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetSendCommunity() bool {
	if o == nil || IsNil(o.SendCommunity) {
		var ret bool
		return ret
	}
	return *o.SendCommunity
}

// GetSendCommunityOk returns a tuple with the SendCommunity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) GetSendCommunityOk() (*bool, bool) {
	if o == nil || IsNil(o.SendCommunity) {
		return nil, false
	}
	return o.SendCommunity, true
}

// HasSendCommunity returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) HasSendCommunity() bool {
	if o != nil && !IsNil(o.SendCommunity) {
		return true
	}

	return false
}

// SetSendCommunity gets a reference to the given bool and assigns it to the SendCommunity field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) SetSendCommunity(v bool) {
	o.SendCommunity = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressFamilies) {
		toSerialize["addressFamilies"] = o.AddressFamilies
	}
	if !IsNil(o.AllowAsIn) {
		toSerialize["allowAsIn"] = o.AllowAsIn
	}
	if !IsNil(o.AsOverride) {
		toSerialize["asOverride"] = o.AsOverride
	}
	if !IsNil(o.Bfd) {
		toSerialize["bfd"] = o.Bfd
	}
	if !IsNil(o.DefaultOriginate) {
		toSerialize["defaultOriginate"] = o.DefaultOriginate
	}
	if !IsNil(o.EbgpMultihopTtl) {
		toSerialize["ebgpMultihopTtl"] = o.EbgpMultihopTtl
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.HoldTimer) {
		toSerialize["holdTimer"] = o.HoldTimer
	}
	if !IsNil(o.HoldTimerValue) {
		toSerialize["holdTimerValue"] = o.HoldTimerValue
	}
	if !IsNil(o.KeepaliveTimer) {
		toSerialize["keepaliveTimer"] = o.KeepaliveTimer
	}
	if !IsNil(o.KeepaliveTimerValue) {
		toSerialize["keepaliveTimerValue"] = o.KeepaliveTimerValue
	}
	if !IsNil(o.LocalAddress) {
		toSerialize["localAddress"] = o.LocalAddress
	}
	if !IsNil(o.LocalInterface) {
		toSerialize["localInterface"] = o.LocalInterface
	}
	if !IsNil(o.MaxPrefixValue) {
		toSerialize["maxPrefixValue"] = o.MaxPrefixValue
	}
	if !IsNil(o.Md5Password) {
		toSerialize["md5Password"] = o.Md5Password
	}
	if !IsNil(o.PeerAsn) {
		toSerialize["peerAsn"] = o.PeerAsn
	}
	if !IsNil(o.RemoteAddress) {
		toSerialize["remoteAddress"] = o.RemoteAddress
	}
	if !IsNil(o.RemovePrivateAs) {
		toSerialize["removePrivateAs"] = o.RemovePrivateAs
	}
	if !IsNil(o.SendCommunity) {
		toSerialize["sendCommunity"] = o.SendCommunity
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) Get() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) Set(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValueNeighbor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


