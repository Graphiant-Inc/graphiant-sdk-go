/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AssistantGetConversationsPost200ResponseConversationListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AssistantGetConversationsPost200ResponseConversationListInner{}

// V2AssistantGetConversationsPost200ResponseConversationListInner struct for V2AssistantGetConversationsPost200ResponseConversationListInner
type V2AssistantGetConversationsPost200ResponseConversationListInner struct {
	ConversationHeader *string `json:"conversationHeader,omitempty"`
	ConversationId *string `json:"conversationId,omitempty"`
	ConversationRecentTimestamp *int64 `json:"conversationRecentTimestamp,omitempty"`
}

// NewV2AssistantGetConversationsPost200ResponseConversationListInner instantiates a new V2AssistantGetConversationsPost200ResponseConversationListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssistantGetConversationsPost200ResponseConversationListInner() *V2AssistantGetConversationsPost200ResponseConversationListInner {
	this := V2AssistantGetConversationsPost200ResponseConversationListInner{}
	return &this
}

// NewV2AssistantGetConversationsPost200ResponseConversationListInnerWithDefaults instantiates a new V2AssistantGetConversationsPost200ResponseConversationListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssistantGetConversationsPost200ResponseConversationListInnerWithDefaults() *V2AssistantGetConversationsPost200ResponseConversationListInner {
	this := V2AssistantGetConversationsPost200ResponseConversationListInner{}
	return &this
}

// GetConversationHeader returns the ConversationHeader field value if set, zero value otherwise.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) GetConversationHeader() string {
	if o == nil || IsNil(o.ConversationHeader) {
		var ret string
		return ret
	}
	return *o.ConversationHeader
}

// GetConversationHeaderOk returns a tuple with the ConversationHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) GetConversationHeaderOk() (*string, bool) {
	if o == nil || IsNil(o.ConversationHeader) {
		return nil, false
	}
	return o.ConversationHeader, true
}

// HasConversationHeader returns a boolean if a field has been set.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) HasConversationHeader() bool {
	if o != nil && !IsNil(o.ConversationHeader) {
		return true
	}

	return false
}

// SetConversationHeader gets a reference to the given string and assigns it to the ConversationHeader field.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) SetConversationHeader(v string) {
	o.ConversationHeader = &v
}

// GetConversationId returns the ConversationId field value if set, zero value otherwise.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) GetConversationId() string {
	if o == nil || IsNil(o.ConversationId) {
		var ret string
		return ret
	}
	return *o.ConversationId
}

// GetConversationIdOk returns a tuple with the ConversationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) GetConversationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConversationId) {
		return nil, false
	}
	return o.ConversationId, true
}

// HasConversationId returns a boolean if a field has been set.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) HasConversationId() bool {
	if o != nil && !IsNil(o.ConversationId) {
		return true
	}

	return false
}

// SetConversationId gets a reference to the given string and assigns it to the ConversationId field.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) SetConversationId(v string) {
	o.ConversationId = &v
}

// GetConversationRecentTimestamp returns the ConversationRecentTimestamp field value if set, zero value otherwise.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) GetConversationRecentTimestamp() int64 {
	if o == nil || IsNil(o.ConversationRecentTimestamp) {
		var ret int64
		return ret
	}
	return *o.ConversationRecentTimestamp
}

// GetConversationRecentTimestampOk returns a tuple with the ConversationRecentTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) GetConversationRecentTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.ConversationRecentTimestamp) {
		return nil, false
	}
	return o.ConversationRecentTimestamp, true
}

// HasConversationRecentTimestamp returns a boolean if a field has been set.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) HasConversationRecentTimestamp() bool {
	if o != nil && !IsNil(o.ConversationRecentTimestamp) {
		return true
	}

	return false
}

// SetConversationRecentTimestamp gets a reference to the given int64 and assigns it to the ConversationRecentTimestamp field.
func (o *V2AssistantGetConversationsPost200ResponseConversationListInner) SetConversationRecentTimestamp(v int64) {
	o.ConversationRecentTimestamp = &v
}

func (o V2AssistantGetConversationsPost200ResponseConversationListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AssistantGetConversationsPost200ResponseConversationListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConversationHeader) {
		toSerialize["conversationHeader"] = o.ConversationHeader
	}
	if !IsNil(o.ConversationId) {
		toSerialize["conversationId"] = o.ConversationId
	}
	if !IsNil(o.ConversationRecentTimestamp) {
		toSerialize["conversationRecentTimestamp"] = o.ConversationRecentTimestamp
	}
	return toSerialize, nil
}

type NullableV2AssistantGetConversationsPost200ResponseConversationListInner struct {
	value *V2AssistantGetConversationsPost200ResponseConversationListInner
	isSet bool
}

func (v NullableV2AssistantGetConversationsPost200ResponseConversationListInner) Get() *V2AssistantGetConversationsPost200ResponseConversationListInner {
	return v.value
}

func (v *NullableV2AssistantGetConversationsPost200ResponseConversationListInner) Set(val *V2AssistantGetConversationsPost200ResponseConversationListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssistantGetConversationsPost200ResponseConversationListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssistantGetConversationsPost200ResponseConversationListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssistantGetConversationsPost200ResponseConversationListInner(val *V2AssistantGetConversationsPost200ResponseConversationListInner) *NullableV2AssistantGetConversationsPost200ResponseConversationListInner {
	return &NullableV2AssistantGetConversationsPost200ResponseConversationListInner{value: val, isSet: true}
}

func (v NullableV2AssistantGetConversationsPost200ResponseConversationListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssistantGetConversationsPost200ResponseConversationListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


