/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DiagnosticPacketcaptureStartPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DiagnosticPacketcaptureStartPostRequest{}

// V1DiagnosticPacketcaptureStartPostRequest struct for V1DiagnosticPacketcaptureStartPostRequest
type V1DiagnosticPacketcaptureStartPostRequest struct {
	DeviceId *int64 `json:"deviceId,omitempty"`
	Duration *int32 `json:"duration,omitempty"`
	Filter *V1DiagnosticPacketcaptureStartPostRequestFilter `json:"filter,omitempty"`
	MaxPacketCounter *int32 `json:"maxPacketCounter,omitempty"`
	Target *V1DiagnosticPacketcaptureStartPostRequestTarget `json:"target,omitempty"`
}

// NewV1DiagnosticPacketcaptureStartPostRequest instantiates a new V1DiagnosticPacketcaptureStartPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DiagnosticPacketcaptureStartPostRequest() *V1DiagnosticPacketcaptureStartPostRequest {
	this := V1DiagnosticPacketcaptureStartPostRequest{}
	return &this
}

// NewV1DiagnosticPacketcaptureStartPostRequestWithDefaults instantiates a new V1DiagnosticPacketcaptureStartPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DiagnosticPacketcaptureStartPostRequestWithDefaults() *V1DiagnosticPacketcaptureStartPostRequest {
	this := V1DiagnosticPacketcaptureStartPostRequest{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcaptureStartPostRequest) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequest) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequest) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1DiagnosticPacketcaptureStartPostRequest) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcaptureStartPostRequest) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequest) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequest) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *V1DiagnosticPacketcaptureStartPostRequest) SetDuration(v int32) {
	o.Duration = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcaptureStartPostRequest) GetFilter() V1DiagnosticPacketcaptureStartPostRequestFilter {
	if o == nil || IsNil(o.Filter) {
		var ret V1DiagnosticPacketcaptureStartPostRequestFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequest) GetFilterOk() (*V1DiagnosticPacketcaptureStartPostRequestFilter, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequest) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given V1DiagnosticPacketcaptureStartPostRequestFilter and assigns it to the Filter field.
func (o *V1DiagnosticPacketcaptureStartPostRequest) SetFilter(v V1DiagnosticPacketcaptureStartPostRequestFilter) {
	o.Filter = &v
}

// GetMaxPacketCounter returns the MaxPacketCounter field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcaptureStartPostRequest) GetMaxPacketCounter() int32 {
	if o == nil || IsNil(o.MaxPacketCounter) {
		var ret int32
		return ret
	}
	return *o.MaxPacketCounter
}

// GetMaxPacketCounterOk returns a tuple with the MaxPacketCounter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequest) GetMaxPacketCounterOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxPacketCounter) {
		return nil, false
	}
	return o.MaxPacketCounter, true
}

// HasMaxPacketCounter returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequest) HasMaxPacketCounter() bool {
	if o != nil && !IsNil(o.MaxPacketCounter) {
		return true
	}

	return false
}

// SetMaxPacketCounter gets a reference to the given int32 and assigns it to the MaxPacketCounter field.
func (o *V1DiagnosticPacketcaptureStartPostRequest) SetMaxPacketCounter(v int32) {
	o.MaxPacketCounter = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcaptureStartPostRequest) GetTarget() V1DiagnosticPacketcaptureStartPostRequestTarget {
	if o == nil || IsNil(o.Target) {
		var ret V1DiagnosticPacketcaptureStartPostRequestTarget
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequest) GetTargetOk() (*V1DiagnosticPacketcaptureStartPostRequestTarget, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequest) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given V1DiagnosticPacketcaptureStartPostRequestTarget and assigns it to the Target field.
func (o *V1DiagnosticPacketcaptureStartPostRequest) SetTarget(v V1DiagnosticPacketcaptureStartPostRequestTarget) {
	o.Target = &v
}

func (o V1DiagnosticPacketcaptureStartPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DiagnosticPacketcaptureStartPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.MaxPacketCounter) {
		toSerialize["maxPacketCounter"] = o.MaxPacketCounter
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	return toSerialize, nil
}

type NullableV1DiagnosticPacketcaptureStartPostRequest struct {
	value *V1DiagnosticPacketcaptureStartPostRequest
	isSet bool
}

func (v NullableV1DiagnosticPacketcaptureStartPostRequest) Get() *V1DiagnosticPacketcaptureStartPostRequest {
	return v.value
}

func (v *NullableV1DiagnosticPacketcaptureStartPostRequest) Set(val *V1DiagnosticPacketcaptureStartPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DiagnosticPacketcaptureStartPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DiagnosticPacketcaptureStartPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DiagnosticPacketcaptureStartPostRequest(val *V1DiagnosticPacketcaptureStartPostRequest) *NullableV1DiagnosticPacketcaptureStartPostRequest {
	return &NullableV1DiagnosticPacketcaptureStartPostRequest{value: val, isSet: true}
}

func (v NullableV1DiagnosticPacketcaptureStartPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DiagnosticPacketcaptureStartPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


