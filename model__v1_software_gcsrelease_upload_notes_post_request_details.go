/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1SoftwareGcsreleaseUploadNotesPostRequestDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SoftwareGcsreleaseUploadNotesPostRequestDetails{}

// V1SoftwareGcsreleaseUploadNotesPostRequestDetails struct for V1SoftwareGcsreleaseUploadNotesPostRequestDetails
type V1SoftwareGcsreleaseUploadNotesPostRequestDetails struct {
	Category []V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner `json:"category,omitempty"`
	Major *bool `json:"major,omitempty"`
	ReleaseTs *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"releaseTs,omitempty"`
}

// NewV1SoftwareGcsreleaseUploadNotesPostRequestDetails instantiates a new V1SoftwareGcsreleaseUploadNotesPostRequestDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SoftwareGcsreleaseUploadNotesPostRequestDetails() *V1SoftwareGcsreleaseUploadNotesPostRequestDetails {
	this := V1SoftwareGcsreleaseUploadNotesPostRequestDetails{}
	return &this
}

// NewV1SoftwareGcsreleaseUploadNotesPostRequestDetailsWithDefaults instantiates a new V1SoftwareGcsreleaseUploadNotesPostRequestDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SoftwareGcsreleaseUploadNotesPostRequestDetailsWithDefaults() *V1SoftwareGcsreleaseUploadNotesPostRequestDetails {
	this := V1SoftwareGcsreleaseUploadNotesPostRequestDetails{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) GetCategory() []V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner {
	if o == nil || IsNil(o.Category) {
		var ret []V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner
		return ret
	}
	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) GetCategoryOk() ([]V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given []V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner and assigns it to the Category field.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) SetCategory(v []V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) {
	o.Category = v
}

// GetMajor returns the Major field value if set, zero value otherwise.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) GetMajor() bool {
	if o == nil || IsNil(o.Major) {
		var ret bool
		return ret
	}
	return *o.Major
}

// GetMajorOk returns a tuple with the Major field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) GetMajorOk() (*bool, bool) {
	if o == nil || IsNil(o.Major) {
		return nil, false
	}
	return o.Major, true
}

// HasMajor returns a boolean if a field has been set.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) HasMajor() bool {
	if o != nil && !IsNil(o.Major) {
		return true
	}

	return false
}

// SetMajor gets a reference to the given bool and assigns it to the Major field.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) SetMajor(v bool) {
	o.Major = &v
}

// GetReleaseTs returns the ReleaseTs field value if set, zero value otherwise.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) GetReleaseTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.ReleaseTs) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.ReleaseTs
}

// GetReleaseTsOk returns a tuple with the ReleaseTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) GetReleaseTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.ReleaseTs) {
		return nil, false
	}
	return o.ReleaseTs, true
}

// HasReleaseTs returns a boolean if a field has been set.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) HasReleaseTs() bool {
	if o != nil && !IsNil(o.ReleaseTs) {
		return true
	}

	return false
}

// SetReleaseTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the ReleaseTs field.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) SetReleaseTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.ReleaseTs = &v
}

func (o V1SoftwareGcsreleaseUploadNotesPostRequestDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SoftwareGcsreleaseUploadNotesPostRequestDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Major) {
		toSerialize["major"] = o.Major
	}
	if !IsNil(o.ReleaseTs) {
		toSerialize["releaseTs"] = o.ReleaseTs
	}
	return toSerialize, nil
}

type NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetails struct {
	value *V1SoftwareGcsreleaseUploadNotesPostRequestDetails
	isSet bool
}

func (v NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetails) Get() *V1SoftwareGcsreleaseUploadNotesPostRequestDetails {
	return v.value
}

func (v *NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetails) Set(val *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SoftwareGcsreleaseUploadNotesPostRequestDetails(val *V1SoftwareGcsreleaseUploadNotesPostRequestDetails) *NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetails {
	return &NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetails{value: val, isSet: true}
}

func (v NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


