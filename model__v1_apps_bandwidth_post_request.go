/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1AppsBandwidthPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AppsBandwidthPostRequest{}

// V1AppsBandwidthPostRequest struct for V1AppsBandwidthPostRequest
type V1AppsBandwidthPostRequest struct {
	AppId *int32 `json:"appId,omitempty"`
	DeviceId *int64 `json:"deviceId,omitempty"`
	DlCircuitName *string `json:"dlCircuitName,omitempty"`
	IsDia *bool `json:"isDia,omitempty"`
	SlaClass *string `json:"slaClass,omitempty"`
	TimeWindow *V2NotificationlistPostRequestTimeWindow `json:"timeWindow,omitempty"`
	UlCircuitName *string `json:"ulCircuitName,omitempty"`
}

// NewV1AppsBandwidthPostRequest instantiates a new V1AppsBandwidthPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AppsBandwidthPostRequest() *V1AppsBandwidthPostRequest {
	this := V1AppsBandwidthPostRequest{}
	return &this
}

// NewV1AppsBandwidthPostRequestWithDefaults instantiates a new V1AppsBandwidthPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AppsBandwidthPostRequestWithDefaults() *V1AppsBandwidthPostRequest {
	this := V1AppsBandwidthPostRequest{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *V1AppsBandwidthPostRequest) GetAppId() int32 {
	if o == nil || IsNil(o.AppId) {
		var ret int32
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsBandwidthPostRequest) GetAppIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *V1AppsBandwidthPostRequest) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int32 and assigns it to the AppId field.
func (o *V1AppsBandwidthPostRequest) SetAppId(v int32) {
	o.AppId = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1AppsBandwidthPostRequest) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsBandwidthPostRequest) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1AppsBandwidthPostRequest) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1AppsBandwidthPostRequest) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetDlCircuitName returns the DlCircuitName field value if set, zero value otherwise.
func (o *V1AppsBandwidthPostRequest) GetDlCircuitName() string {
	if o == nil || IsNil(o.DlCircuitName) {
		var ret string
		return ret
	}
	return *o.DlCircuitName
}

// GetDlCircuitNameOk returns a tuple with the DlCircuitName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsBandwidthPostRequest) GetDlCircuitNameOk() (*string, bool) {
	if o == nil || IsNil(o.DlCircuitName) {
		return nil, false
	}
	return o.DlCircuitName, true
}

// HasDlCircuitName returns a boolean if a field has been set.
func (o *V1AppsBandwidthPostRequest) HasDlCircuitName() bool {
	if o != nil && !IsNil(o.DlCircuitName) {
		return true
	}

	return false
}

// SetDlCircuitName gets a reference to the given string and assigns it to the DlCircuitName field.
func (o *V1AppsBandwidthPostRequest) SetDlCircuitName(v string) {
	o.DlCircuitName = &v
}

// GetIsDia returns the IsDia field value if set, zero value otherwise.
func (o *V1AppsBandwidthPostRequest) GetIsDia() bool {
	if o == nil || IsNil(o.IsDia) {
		var ret bool
		return ret
	}
	return *o.IsDia
}

// GetIsDiaOk returns a tuple with the IsDia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsBandwidthPostRequest) GetIsDiaOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDia) {
		return nil, false
	}
	return o.IsDia, true
}

// HasIsDia returns a boolean if a field has been set.
func (o *V1AppsBandwidthPostRequest) HasIsDia() bool {
	if o != nil && !IsNil(o.IsDia) {
		return true
	}

	return false
}

// SetIsDia gets a reference to the given bool and assigns it to the IsDia field.
func (o *V1AppsBandwidthPostRequest) SetIsDia(v bool) {
	o.IsDia = &v
}

// GetSlaClass returns the SlaClass field value if set, zero value otherwise.
func (o *V1AppsBandwidthPostRequest) GetSlaClass() string {
	if o == nil || IsNil(o.SlaClass) {
		var ret string
		return ret
	}
	return *o.SlaClass
}

// GetSlaClassOk returns a tuple with the SlaClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsBandwidthPostRequest) GetSlaClassOk() (*string, bool) {
	if o == nil || IsNil(o.SlaClass) {
		return nil, false
	}
	return o.SlaClass, true
}

// HasSlaClass returns a boolean if a field has been set.
func (o *V1AppsBandwidthPostRequest) HasSlaClass() bool {
	if o != nil && !IsNil(o.SlaClass) {
		return true
	}

	return false
}

// SetSlaClass gets a reference to the given string and assigns it to the SlaClass field.
func (o *V1AppsBandwidthPostRequest) SetSlaClass(v string) {
	o.SlaClass = &v
}

// GetTimeWindow returns the TimeWindow field value if set, zero value otherwise.
func (o *V1AppsBandwidthPostRequest) GetTimeWindow() V2NotificationlistPostRequestTimeWindow {
	if o == nil || IsNil(o.TimeWindow) {
		var ret V2NotificationlistPostRequestTimeWindow
		return ret
	}
	return *o.TimeWindow
}

// GetTimeWindowOk returns a tuple with the TimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsBandwidthPostRequest) GetTimeWindowOk() (*V2NotificationlistPostRequestTimeWindow, bool) {
	if o == nil || IsNil(o.TimeWindow) {
		return nil, false
	}
	return o.TimeWindow, true
}

// HasTimeWindow returns a boolean if a field has been set.
func (o *V1AppsBandwidthPostRequest) HasTimeWindow() bool {
	if o != nil && !IsNil(o.TimeWindow) {
		return true
	}

	return false
}

// SetTimeWindow gets a reference to the given V2NotificationlistPostRequestTimeWindow and assigns it to the TimeWindow field.
func (o *V1AppsBandwidthPostRequest) SetTimeWindow(v V2NotificationlistPostRequestTimeWindow) {
	o.TimeWindow = &v
}

// GetUlCircuitName returns the UlCircuitName field value if set, zero value otherwise.
func (o *V1AppsBandwidthPostRequest) GetUlCircuitName() string {
	if o == nil || IsNil(o.UlCircuitName) {
		var ret string
		return ret
	}
	return *o.UlCircuitName
}

// GetUlCircuitNameOk returns a tuple with the UlCircuitName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsBandwidthPostRequest) GetUlCircuitNameOk() (*string, bool) {
	if o == nil || IsNil(o.UlCircuitName) {
		return nil, false
	}
	return o.UlCircuitName, true
}

// HasUlCircuitName returns a boolean if a field has been set.
func (o *V1AppsBandwidthPostRequest) HasUlCircuitName() bool {
	if o != nil && !IsNil(o.UlCircuitName) {
		return true
	}

	return false
}

// SetUlCircuitName gets a reference to the given string and assigns it to the UlCircuitName field.
func (o *V1AppsBandwidthPostRequest) SetUlCircuitName(v string) {
	o.UlCircuitName = &v
}

func (o V1AppsBandwidthPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AppsBandwidthPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.DlCircuitName) {
		toSerialize["dlCircuitName"] = o.DlCircuitName
	}
	if !IsNil(o.IsDia) {
		toSerialize["isDia"] = o.IsDia
	}
	if !IsNil(o.SlaClass) {
		toSerialize["slaClass"] = o.SlaClass
	}
	if !IsNil(o.TimeWindow) {
		toSerialize["timeWindow"] = o.TimeWindow
	}
	if !IsNil(o.UlCircuitName) {
		toSerialize["ulCircuitName"] = o.UlCircuitName
	}
	return toSerialize, nil
}

type NullableV1AppsBandwidthPostRequest struct {
	value *V1AppsBandwidthPostRequest
	isSet bool
}

func (v NullableV1AppsBandwidthPostRequest) Get() *V1AppsBandwidthPostRequest {
	return v.value
}

func (v *NullableV1AppsBandwidthPostRequest) Set(val *V1AppsBandwidthPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AppsBandwidthPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AppsBandwidthPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AppsBandwidthPostRequest(val *V1AppsBandwidthPostRequest) *NullableV1AppsBandwidthPostRequest {
	return &NullableV1AppsBandwidthPostRequest{value: val, isSet: true}
}

func (v NullableV1AppsBandwidthPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AppsBandwidthPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


