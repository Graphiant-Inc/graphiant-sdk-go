/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2NotificationlistPost200ResponseNotificationListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2NotificationlistPost200ResponseNotificationListInner{}

// V2NotificationlistPost200ResponseNotificationListInner struct for V2NotificationlistPost200ResponseNotificationListInner
type V2NotificationlistPost200ResponseNotificationListInner struct {
	AlertType *string `json:"alertType,omitempty"`
	MuteCount *int64 `json:"muteCount,omitempty"`
	Name *string `json:"name,omitempty"`
	NotificationBody *V2NotificationCreatePostRequestNotificationBody `json:"notificationBody,omitempty"`
	NotificationId *string `json:"notificationId,omitempty"`
	RuleId *string `json:"ruleId,omitempty"`
	TimesTriggered *int64 `json:"timesTriggered,omitempty"`
}

// NewV2NotificationlistPost200ResponseNotificationListInner instantiates a new V2NotificationlistPost200ResponseNotificationListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2NotificationlistPost200ResponseNotificationListInner() *V2NotificationlistPost200ResponseNotificationListInner {
	this := V2NotificationlistPost200ResponseNotificationListInner{}
	return &this
}

// NewV2NotificationlistPost200ResponseNotificationListInnerWithDefaults instantiates a new V2NotificationlistPost200ResponseNotificationListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2NotificationlistPost200ResponseNotificationListInnerWithDefaults() *V2NotificationlistPost200ResponseNotificationListInner {
	this := V2NotificationlistPost200ResponseNotificationListInner{}
	return &this
}

// GetAlertType returns the AlertType field value if set, zero value otherwise.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetAlertType() string {
	if o == nil || IsNil(o.AlertType) {
		var ret string
		return ret
	}
	return *o.AlertType
}

// GetAlertTypeOk returns a tuple with the AlertType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetAlertTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AlertType) {
		return nil, false
	}
	return o.AlertType, true
}

// HasAlertType returns a boolean if a field has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) HasAlertType() bool {
	if o != nil && !IsNil(o.AlertType) {
		return true
	}

	return false
}

// SetAlertType gets a reference to the given string and assigns it to the AlertType field.
func (o *V2NotificationlistPost200ResponseNotificationListInner) SetAlertType(v string) {
	o.AlertType = &v
}

// GetMuteCount returns the MuteCount field value if set, zero value otherwise.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetMuteCount() int64 {
	if o == nil || IsNil(o.MuteCount) {
		var ret int64
		return ret
	}
	return *o.MuteCount
}

// GetMuteCountOk returns a tuple with the MuteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetMuteCountOk() (*int64, bool) {
	if o == nil || IsNil(o.MuteCount) {
		return nil, false
	}
	return o.MuteCount, true
}

// HasMuteCount returns a boolean if a field has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) HasMuteCount() bool {
	if o != nil && !IsNil(o.MuteCount) {
		return true
	}

	return false
}

// SetMuteCount gets a reference to the given int64 and assigns it to the MuteCount field.
func (o *V2NotificationlistPost200ResponseNotificationListInner) SetMuteCount(v int64) {
	o.MuteCount = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2NotificationlistPost200ResponseNotificationListInner) SetName(v string) {
	o.Name = &v
}

// GetNotificationBody returns the NotificationBody field value if set, zero value otherwise.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetNotificationBody() V2NotificationCreatePostRequestNotificationBody {
	if o == nil || IsNil(o.NotificationBody) {
		var ret V2NotificationCreatePostRequestNotificationBody
		return ret
	}
	return *o.NotificationBody
}

// GetNotificationBodyOk returns a tuple with the NotificationBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetNotificationBodyOk() (*V2NotificationCreatePostRequestNotificationBody, bool) {
	if o == nil || IsNil(o.NotificationBody) {
		return nil, false
	}
	return o.NotificationBody, true
}

// HasNotificationBody returns a boolean if a field has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) HasNotificationBody() bool {
	if o != nil && !IsNil(o.NotificationBody) {
		return true
	}

	return false
}

// SetNotificationBody gets a reference to the given V2NotificationCreatePostRequestNotificationBody and assigns it to the NotificationBody field.
func (o *V2NotificationlistPost200ResponseNotificationListInner) SetNotificationBody(v V2NotificationCreatePostRequestNotificationBody) {
	o.NotificationBody = &v
}

// GetNotificationId returns the NotificationId field value if set, zero value otherwise.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetNotificationId() string {
	if o == nil || IsNil(o.NotificationId) {
		var ret string
		return ret
	}
	return *o.NotificationId
}

// GetNotificationIdOk returns a tuple with the NotificationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetNotificationIdOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationId) {
		return nil, false
	}
	return o.NotificationId, true
}

// HasNotificationId returns a boolean if a field has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) HasNotificationId() bool {
	if o != nil && !IsNil(o.NotificationId) {
		return true
	}

	return false
}

// SetNotificationId gets a reference to the given string and assigns it to the NotificationId field.
func (o *V2NotificationlistPost200ResponseNotificationListInner) SetNotificationId(v string) {
	o.NotificationId = &v
}

// GetRuleId returns the RuleId field value if set, zero value otherwise.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetRuleId() string {
	if o == nil || IsNil(o.RuleId) {
		var ret string
		return ret
	}
	return *o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RuleId) {
		return nil, false
	}
	return o.RuleId, true
}

// HasRuleId returns a boolean if a field has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) HasRuleId() bool {
	if o != nil && !IsNil(o.RuleId) {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given string and assigns it to the RuleId field.
func (o *V2NotificationlistPost200ResponseNotificationListInner) SetRuleId(v string) {
	o.RuleId = &v
}

// GetTimesTriggered returns the TimesTriggered field value if set, zero value otherwise.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetTimesTriggered() int64 {
	if o == nil || IsNil(o.TimesTriggered) {
		var ret int64
		return ret
	}
	return *o.TimesTriggered
}

// GetTimesTriggeredOk returns a tuple with the TimesTriggered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) GetTimesTriggeredOk() (*int64, bool) {
	if o == nil || IsNil(o.TimesTriggered) {
		return nil, false
	}
	return o.TimesTriggered, true
}

// HasTimesTriggered returns a boolean if a field has been set.
func (o *V2NotificationlistPost200ResponseNotificationListInner) HasTimesTriggered() bool {
	if o != nil && !IsNil(o.TimesTriggered) {
		return true
	}

	return false
}

// SetTimesTriggered gets a reference to the given int64 and assigns it to the TimesTriggered field.
func (o *V2NotificationlistPost200ResponseNotificationListInner) SetTimesTriggered(v int64) {
	o.TimesTriggered = &v
}

func (o V2NotificationlistPost200ResponseNotificationListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2NotificationlistPost200ResponseNotificationListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertType) {
		toSerialize["alertType"] = o.AlertType
	}
	if !IsNil(o.MuteCount) {
		toSerialize["muteCount"] = o.MuteCount
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NotificationBody) {
		toSerialize["notificationBody"] = o.NotificationBody
	}
	if !IsNil(o.NotificationId) {
		toSerialize["notificationId"] = o.NotificationId
	}
	if !IsNil(o.RuleId) {
		toSerialize["ruleId"] = o.RuleId
	}
	if !IsNil(o.TimesTriggered) {
		toSerialize["timesTriggered"] = o.TimesTriggered
	}
	return toSerialize, nil
}

type NullableV2NotificationlistPost200ResponseNotificationListInner struct {
	value *V2NotificationlistPost200ResponseNotificationListInner
	isSet bool
}

func (v NullableV2NotificationlistPost200ResponseNotificationListInner) Get() *V2NotificationlistPost200ResponseNotificationListInner {
	return v.value
}

func (v *NullableV2NotificationlistPost200ResponseNotificationListInner) Set(val *V2NotificationlistPost200ResponseNotificationListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2NotificationlistPost200ResponseNotificationListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2NotificationlistPost200ResponseNotificationListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2NotificationlistPost200ResponseNotificationListInner(val *V2NotificationlistPost200ResponseNotificationListInner) *NullableV2NotificationlistPost200ResponseNotificationListInner {
	return &NullableV2NotificationlistPost200ResponseNotificationListInner{value: val, isSet: true}
}

func (v NullableV2NotificationlistPost200ResponseNotificationListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2NotificationlistPost200ResponseNotificationListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


