/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GroupsIdPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GroupsIdPatchRequest{}

// V1GroupsIdPatchRequest struct for V1GroupsIdPatchRequest
type V1GroupsIdPatchRequest struct {
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	GroupType *string `json:"groupType,omitempty"`
	Permissions *V1GroupsGet200ResponseGroupsInnerPermissions `json:"permissions,omitempty"`
	TimeWindowEnd *int64 `json:"timeWindowEnd,omitempty"`
	TimeWindowStart *int64 `json:"timeWindowStart,omitempty"`
}

// NewV1GroupsIdPatchRequest instantiates a new V1GroupsIdPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GroupsIdPatchRequest() *V1GroupsIdPatchRequest {
	this := V1GroupsIdPatchRequest{}
	return &this
}

// NewV1GroupsIdPatchRequestWithDefaults instantiates a new V1GroupsIdPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GroupsIdPatchRequestWithDefaults() *V1GroupsIdPatchRequest {
	this := V1GroupsIdPatchRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1GroupsIdPatchRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsIdPatchRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1GroupsIdPatchRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1GroupsIdPatchRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *V1GroupsIdPatchRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsIdPatchRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *V1GroupsIdPatchRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *V1GroupsIdPatchRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetGroupType returns the GroupType field value if set, zero value otherwise.
func (o *V1GroupsIdPatchRequest) GetGroupType() string {
	if o == nil || IsNil(o.GroupType) {
		var ret string
		return ret
	}
	return *o.GroupType
}

// GetGroupTypeOk returns a tuple with the GroupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsIdPatchRequest) GetGroupTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GroupType) {
		return nil, false
	}
	return o.GroupType, true
}

// HasGroupType returns a boolean if a field has been set.
func (o *V1GroupsIdPatchRequest) HasGroupType() bool {
	if o != nil && !IsNil(o.GroupType) {
		return true
	}

	return false
}

// SetGroupType gets a reference to the given string and assigns it to the GroupType field.
func (o *V1GroupsIdPatchRequest) SetGroupType(v string) {
	o.GroupType = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *V1GroupsIdPatchRequest) GetPermissions() V1GroupsGet200ResponseGroupsInnerPermissions {
	if o == nil || IsNil(o.Permissions) {
		var ret V1GroupsGet200ResponseGroupsInnerPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsIdPatchRequest) GetPermissionsOk() (*V1GroupsGet200ResponseGroupsInnerPermissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *V1GroupsIdPatchRequest) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given V1GroupsGet200ResponseGroupsInnerPermissions and assigns it to the Permissions field.
func (o *V1GroupsIdPatchRequest) SetPermissions(v V1GroupsGet200ResponseGroupsInnerPermissions) {
	o.Permissions = &v
}

// GetTimeWindowEnd returns the TimeWindowEnd field value if set, zero value otherwise.
func (o *V1GroupsIdPatchRequest) GetTimeWindowEnd() int64 {
	if o == nil || IsNil(o.TimeWindowEnd) {
		var ret int64
		return ret
	}
	return *o.TimeWindowEnd
}

// GetTimeWindowEndOk returns a tuple with the TimeWindowEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsIdPatchRequest) GetTimeWindowEndOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeWindowEnd) {
		return nil, false
	}
	return o.TimeWindowEnd, true
}

// HasTimeWindowEnd returns a boolean if a field has been set.
func (o *V1GroupsIdPatchRequest) HasTimeWindowEnd() bool {
	if o != nil && !IsNil(o.TimeWindowEnd) {
		return true
	}

	return false
}

// SetTimeWindowEnd gets a reference to the given int64 and assigns it to the TimeWindowEnd field.
func (o *V1GroupsIdPatchRequest) SetTimeWindowEnd(v int64) {
	o.TimeWindowEnd = &v
}

// GetTimeWindowStart returns the TimeWindowStart field value if set, zero value otherwise.
func (o *V1GroupsIdPatchRequest) GetTimeWindowStart() int64 {
	if o == nil || IsNil(o.TimeWindowStart) {
		var ret int64
		return ret
	}
	return *o.TimeWindowStart
}

// GetTimeWindowStartOk returns a tuple with the TimeWindowStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsIdPatchRequest) GetTimeWindowStartOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeWindowStart) {
		return nil, false
	}
	return o.TimeWindowStart, true
}

// HasTimeWindowStart returns a boolean if a field has been set.
func (o *V1GroupsIdPatchRequest) HasTimeWindowStart() bool {
	if o != nil && !IsNil(o.TimeWindowStart) {
		return true
	}

	return false
}

// SetTimeWindowStart gets a reference to the given int64 and assigns it to the TimeWindowStart field.
func (o *V1GroupsIdPatchRequest) SetTimeWindowStart(v int64) {
	o.TimeWindowStart = &v
}

func (o V1GroupsIdPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GroupsIdPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.GroupType) {
		toSerialize["groupType"] = o.GroupType
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.TimeWindowEnd) {
		toSerialize["timeWindowEnd"] = o.TimeWindowEnd
	}
	if !IsNil(o.TimeWindowStart) {
		toSerialize["timeWindowStart"] = o.TimeWindowStart
	}
	return toSerialize, nil
}

type NullableV1GroupsIdPatchRequest struct {
	value *V1GroupsIdPatchRequest
	isSet bool
}

func (v NullableV1GroupsIdPatchRequest) Get() *V1GroupsIdPatchRequest {
	return v.value
}

func (v *NullableV1GroupsIdPatchRequest) Set(val *V1GroupsIdPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GroupsIdPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GroupsIdPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GroupsIdPatchRequest(val *V1GroupsIdPatchRequest) *NullableV1GroupsIdPatchRequest {
	return &NullableV1GroupsIdPatchRequest{value: val, isSet: true}
}

func (v NullableV1GroupsIdPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GroupsIdPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


