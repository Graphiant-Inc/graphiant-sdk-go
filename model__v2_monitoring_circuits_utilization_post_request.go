/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2MonitoringCircuitsUtilizationPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2MonitoringCircuitsUtilizationPostRequest{}

// V2MonitoringCircuitsUtilizationPostRequest struct for V2MonitoringCircuitsUtilizationPostRequest
type V2MonitoringCircuitsUtilizationPostRequest struct {
	DeviceId *int64 `json:"deviceId,omitempty"`
	Selectors []V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner `json:"selectors,omitempty"`
	TimeWindow *V2NotificationlistPostRequestTimeWindow `json:"timeWindow,omitempty"`
}

// NewV2MonitoringCircuitsUtilizationPostRequest instantiates a new V2MonitoringCircuitsUtilizationPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2MonitoringCircuitsUtilizationPostRequest() *V2MonitoringCircuitsUtilizationPostRequest {
	this := V2MonitoringCircuitsUtilizationPostRequest{}
	return &this
}

// NewV2MonitoringCircuitsUtilizationPostRequestWithDefaults instantiates a new V2MonitoringCircuitsUtilizationPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2MonitoringCircuitsUtilizationPostRequestWithDefaults() *V2MonitoringCircuitsUtilizationPostRequest {
	this := V2MonitoringCircuitsUtilizationPostRequest{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsUtilizationPostRequest) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsUtilizationPostRequest) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsUtilizationPostRequest) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V2MonitoringCircuitsUtilizationPostRequest) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetSelectors returns the Selectors field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsUtilizationPostRequest) GetSelectors() []V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner {
	if o == nil || IsNil(o.Selectors) {
		var ret []V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner
		return ret
	}
	return o.Selectors
}

// GetSelectorsOk returns a tuple with the Selectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsUtilizationPostRequest) GetSelectorsOk() ([]V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner, bool) {
	if o == nil || IsNil(o.Selectors) {
		return nil, false
	}
	return o.Selectors, true
}

// HasSelectors returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsUtilizationPostRequest) HasSelectors() bool {
	if o != nil && !IsNil(o.Selectors) {
		return true
	}

	return false
}

// SetSelectors gets a reference to the given []V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner and assigns it to the Selectors field.
func (o *V2MonitoringCircuitsUtilizationPostRequest) SetSelectors(v []V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner) {
	o.Selectors = v
}

// GetTimeWindow returns the TimeWindow field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsUtilizationPostRequest) GetTimeWindow() V2NotificationlistPostRequestTimeWindow {
	if o == nil || IsNil(o.TimeWindow) {
		var ret V2NotificationlistPostRequestTimeWindow
		return ret
	}
	return *o.TimeWindow
}

// GetTimeWindowOk returns a tuple with the TimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsUtilizationPostRequest) GetTimeWindowOk() (*V2NotificationlistPostRequestTimeWindow, bool) {
	if o == nil || IsNil(o.TimeWindow) {
		return nil, false
	}
	return o.TimeWindow, true
}

// HasTimeWindow returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsUtilizationPostRequest) HasTimeWindow() bool {
	if o != nil && !IsNil(o.TimeWindow) {
		return true
	}

	return false
}

// SetTimeWindow gets a reference to the given V2NotificationlistPostRequestTimeWindow and assigns it to the TimeWindow field.
func (o *V2MonitoringCircuitsUtilizationPostRequest) SetTimeWindow(v V2NotificationlistPostRequestTimeWindow) {
	o.TimeWindow = &v
}

func (o V2MonitoringCircuitsUtilizationPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2MonitoringCircuitsUtilizationPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.Selectors) {
		toSerialize["selectors"] = o.Selectors
	}
	if !IsNil(o.TimeWindow) {
		toSerialize["timeWindow"] = o.TimeWindow
	}
	return toSerialize, nil
}

type NullableV2MonitoringCircuitsUtilizationPostRequest struct {
	value *V2MonitoringCircuitsUtilizationPostRequest
	isSet bool
}

func (v NullableV2MonitoringCircuitsUtilizationPostRequest) Get() *V2MonitoringCircuitsUtilizationPostRequest {
	return v.value
}

func (v *NullableV2MonitoringCircuitsUtilizationPostRequest) Set(val *V2MonitoringCircuitsUtilizationPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2MonitoringCircuitsUtilizationPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2MonitoringCircuitsUtilizationPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2MonitoringCircuitsUtilizationPostRequest(val *V2MonitoringCircuitsUtilizationPostRequest) *NullableV2MonitoringCircuitsUtilizationPostRequest {
	return &NullableV2MonitoringCircuitsUtilizationPostRequest{value: val, isSet: true}
}

func (v NullableV2MonitoringCircuitsUtilizationPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2MonitoringCircuitsUtilizationPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


