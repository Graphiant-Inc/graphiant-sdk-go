/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1EventDeviceGet200ResponseEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1EventDeviceGet200ResponseEventsInner{}

// V1EventDeviceGet200ResponseEventsInner struct for V1EventDeviceGet200ResponseEventsInner
type V1EventDeviceGet200ResponseEventsInner struct {
	Actions []string `json:"actions,omitempty"`
	DeviceId *int64 `json:"deviceId,omitempty"`
	EnterpriseId *int64 `json:"enterpriseId,omitempty"`
	EventData *string `json:"eventData,omitempty"`
	EventId *int64 `json:"eventId,omitempty"`
	EventTime *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"eventTime,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewV1EventDeviceGet200ResponseEventsInner instantiates a new V1EventDeviceGet200ResponseEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1EventDeviceGet200ResponseEventsInner() *V1EventDeviceGet200ResponseEventsInner {
	this := V1EventDeviceGet200ResponseEventsInner{}
	return &this
}

// NewV1EventDeviceGet200ResponseEventsInnerWithDefaults instantiates a new V1EventDeviceGet200ResponseEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EventDeviceGet200ResponseEventsInnerWithDefaults() *V1EventDeviceGet200ResponseEventsInner {
	this := V1EventDeviceGet200ResponseEventsInner{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *V1EventDeviceGet200ResponseEventsInner) GetActions() []string {
	if o == nil || IsNil(o.Actions) {
		var ret []string
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) GetActionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *V1EventDeviceGet200ResponseEventsInner) SetActions(v []string) {
	o.Actions = v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1EventDeviceGet200ResponseEventsInner) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1EventDeviceGet200ResponseEventsInner) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *V1EventDeviceGet200ResponseEventsInner) GetEnterpriseId() int64 {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret int64
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) GetEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given int64 and assigns it to the EnterpriseId field.
func (o *V1EventDeviceGet200ResponseEventsInner) SetEnterpriseId(v int64) {
	o.EnterpriseId = &v
}

// GetEventData returns the EventData field value if set, zero value otherwise.
func (o *V1EventDeviceGet200ResponseEventsInner) GetEventData() string {
	if o == nil || IsNil(o.EventData) {
		var ret string
		return ret
	}
	return *o.EventData
}

// GetEventDataOk returns a tuple with the EventData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) GetEventDataOk() (*string, bool) {
	if o == nil || IsNil(o.EventData) {
		return nil, false
	}
	return o.EventData, true
}

// HasEventData returns a boolean if a field has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) HasEventData() bool {
	if o != nil && !IsNil(o.EventData) {
		return true
	}

	return false
}

// SetEventData gets a reference to the given string and assigns it to the EventData field.
func (o *V1EventDeviceGet200ResponseEventsInner) SetEventData(v string) {
	o.EventData = &v
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *V1EventDeviceGet200ResponseEventsInner) GetEventId() int64 {
	if o == nil || IsNil(o.EventId) {
		var ret int64
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) GetEventIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EventId) {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) HasEventId() bool {
	if o != nil && !IsNil(o.EventId) {
		return true
	}

	return false
}

// SetEventId gets a reference to the given int64 and assigns it to the EventId field.
func (o *V1EventDeviceGet200ResponseEventsInner) SetEventId(v int64) {
	o.EventId = &v
}

// GetEventTime returns the EventTime field value if set, zero value otherwise.
func (o *V1EventDeviceGet200ResponseEventsInner) GetEventTime() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.EventTime) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.EventTime
}

// GetEventTimeOk returns a tuple with the EventTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) GetEventTimeOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.EventTime) {
		return nil, false
	}
	return o.EventTime, true
}

// HasEventTime returns a boolean if a field has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) HasEventTime() bool {
	if o != nil && !IsNil(o.EventTime) {
		return true
	}

	return false
}

// SetEventTime gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the EventTime field.
func (o *V1EventDeviceGet200ResponseEventsInner) SetEventTime(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.EventTime = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *V1EventDeviceGet200ResponseEventsInner) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *V1EventDeviceGet200ResponseEventsInner) SetHostname(v string) {
	o.Hostname = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *V1EventDeviceGet200ResponseEventsInner) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *V1EventDeviceGet200ResponseEventsInner) SetSeverity(v string) {
	o.Severity = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1EventDeviceGet200ResponseEventsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1EventDeviceGet200ResponseEventsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V1EventDeviceGet200ResponseEventsInner) SetType(v string) {
	o.Type = &v
}

func (o V1EventDeviceGet200ResponseEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1EventDeviceGet200ResponseEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterpriseId"] = o.EnterpriseId
	}
	if !IsNil(o.EventData) {
		toSerialize["eventData"] = o.EventData
	}
	if !IsNil(o.EventId) {
		toSerialize["eventId"] = o.EventId
	}
	if !IsNil(o.EventTime) {
		toSerialize["eventTime"] = o.EventTime
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV1EventDeviceGet200ResponseEventsInner struct {
	value *V1EventDeviceGet200ResponseEventsInner
	isSet bool
}

func (v NullableV1EventDeviceGet200ResponseEventsInner) Get() *V1EventDeviceGet200ResponseEventsInner {
	return v.value
}

func (v *NullableV1EventDeviceGet200ResponseEventsInner) Set(val *V1EventDeviceGet200ResponseEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1EventDeviceGet200ResponseEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1EventDeviceGet200ResponseEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1EventDeviceGet200ResponseEventsInner(val *V1EventDeviceGet200ResponseEventsInner) *NullableV1EventDeviceGet200ResponseEventsInner {
	return &NullableV1EventDeviceGet200ResponseEventsInner{value: val, isSet: true}
}

func (v NullableV1EventDeviceGet200ResponseEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1EventDeviceGet200ResponseEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


