/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DeviceSnapshotGet200ResponseFirstSnapshotData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeviceSnapshotGet200ResponseFirstSnapshotData{}

// V1DeviceSnapshotGet200ResponseFirstSnapshotData struct for V1DeviceSnapshotGet200ResponseFirstSnapshotData
type V1DeviceSnapshotGet200ResponseFirstSnapshotData struct {
	OSPFInstalledRouteCount *int32 `json:"OSPFInstalledRouteCount,omitempty"`
	T2SessionCount *int32 `json:"T2SessionCount,omitempty"`
	TWAMPSessionCount *int32 `json:"TWAMPSessionCount,omitempty"`
	BfdSessionCount *int32 `json:"bfdSessionCount,omitempty"`
	BgpNeighborIpList []string `json:"bgpNeighborIpList,omitempty"`
	BgpSessionCount *int32 `json:"bgpSessionCount,omitempty"`
	DeviceRole *string `json:"deviceRole,omitempty"`
	FailedServicesCount *int32 `json:"failedServicesCount,omitempty"`
	GraphnosVersion *string `json:"graphnosVersion,omitempty"`
	InstalledLabels *int32 `json:"installedLabels,omitempty"`
	IpsecSessionCount *int32 `json:"ipsecSessionCount,omitempty"`
	OngoingAlerts *int32 `json:"ongoingAlerts,omitempty"`
	OspfNeighborIpList []string `json:"ospfNeighborIpList,omitempty"`
	OspfSessionCount *int32 `json:"ospfSessionCount,omitempty"`
}

// NewV1DeviceSnapshotGet200ResponseFirstSnapshotData instantiates a new V1DeviceSnapshotGet200ResponseFirstSnapshotData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeviceSnapshotGet200ResponseFirstSnapshotData() *V1DeviceSnapshotGet200ResponseFirstSnapshotData {
	this := V1DeviceSnapshotGet200ResponseFirstSnapshotData{}
	return &this
}

// NewV1DeviceSnapshotGet200ResponseFirstSnapshotDataWithDefaults instantiates a new V1DeviceSnapshotGet200ResponseFirstSnapshotData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeviceSnapshotGet200ResponseFirstSnapshotDataWithDefaults() *V1DeviceSnapshotGet200ResponseFirstSnapshotData {
	this := V1DeviceSnapshotGet200ResponseFirstSnapshotData{}
	return &this
}

// GetOSPFInstalledRouteCount returns the OSPFInstalledRouteCount field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetOSPFInstalledRouteCount() int32 {
	if o == nil || IsNil(o.OSPFInstalledRouteCount) {
		var ret int32
		return ret
	}
	return *o.OSPFInstalledRouteCount
}

// GetOSPFInstalledRouteCountOk returns a tuple with the OSPFInstalledRouteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetOSPFInstalledRouteCountOk() (*int32, bool) {
	if o == nil || IsNil(o.OSPFInstalledRouteCount) {
		return nil, false
	}
	return o.OSPFInstalledRouteCount, true
}

// HasOSPFInstalledRouteCount returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasOSPFInstalledRouteCount() bool {
	if o != nil && !IsNil(o.OSPFInstalledRouteCount) {
		return true
	}

	return false
}

// SetOSPFInstalledRouteCount gets a reference to the given int32 and assigns it to the OSPFInstalledRouteCount field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetOSPFInstalledRouteCount(v int32) {
	o.OSPFInstalledRouteCount = &v
}

// GetT2SessionCount returns the T2SessionCount field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetT2SessionCount() int32 {
	if o == nil || IsNil(o.T2SessionCount) {
		var ret int32
		return ret
	}
	return *o.T2SessionCount
}

// GetT2SessionCountOk returns a tuple with the T2SessionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetT2SessionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.T2SessionCount) {
		return nil, false
	}
	return o.T2SessionCount, true
}

// HasT2SessionCount returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasT2SessionCount() bool {
	if o != nil && !IsNil(o.T2SessionCount) {
		return true
	}

	return false
}

// SetT2SessionCount gets a reference to the given int32 and assigns it to the T2SessionCount field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetT2SessionCount(v int32) {
	o.T2SessionCount = &v
}

// GetTWAMPSessionCount returns the TWAMPSessionCount field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetTWAMPSessionCount() int32 {
	if o == nil || IsNil(o.TWAMPSessionCount) {
		var ret int32
		return ret
	}
	return *o.TWAMPSessionCount
}

// GetTWAMPSessionCountOk returns a tuple with the TWAMPSessionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetTWAMPSessionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TWAMPSessionCount) {
		return nil, false
	}
	return o.TWAMPSessionCount, true
}

// HasTWAMPSessionCount returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasTWAMPSessionCount() bool {
	if o != nil && !IsNil(o.TWAMPSessionCount) {
		return true
	}

	return false
}

// SetTWAMPSessionCount gets a reference to the given int32 and assigns it to the TWAMPSessionCount field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetTWAMPSessionCount(v int32) {
	o.TWAMPSessionCount = &v
}

// GetBfdSessionCount returns the BfdSessionCount field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetBfdSessionCount() int32 {
	if o == nil || IsNil(o.BfdSessionCount) {
		var ret int32
		return ret
	}
	return *o.BfdSessionCount
}

// GetBfdSessionCountOk returns a tuple with the BfdSessionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetBfdSessionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.BfdSessionCount) {
		return nil, false
	}
	return o.BfdSessionCount, true
}

// HasBfdSessionCount returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasBfdSessionCount() bool {
	if o != nil && !IsNil(o.BfdSessionCount) {
		return true
	}

	return false
}

// SetBfdSessionCount gets a reference to the given int32 and assigns it to the BfdSessionCount field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetBfdSessionCount(v int32) {
	o.BfdSessionCount = &v
}

// GetBgpNeighborIpList returns the BgpNeighborIpList field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetBgpNeighborIpList() []string {
	if o == nil || IsNil(o.BgpNeighborIpList) {
		var ret []string
		return ret
	}
	return o.BgpNeighborIpList
}

// GetBgpNeighborIpListOk returns a tuple with the BgpNeighborIpList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetBgpNeighborIpListOk() ([]string, bool) {
	if o == nil || IsNil(o.BgpNeighborIpList) {
		return nil, false
	}
	return o.BgpNeighborIpList, true
}

// HasBgpNeighborIpList returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasBgpNeighborIpList() bool {
	if o != nil && !IsNil(o.BgpNeighborIpList) {
		return true
	}

	return false
}

// SetBgpNeighborIpList gets a reference to the given []string and assigns it to the BgpNeighborIpList field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetBgpNeighborIpList(v []string) {
	o.BgpNeighborIpList = v
}

// GetBgpSessionCount returns the BgpSessionCount field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetBgpSessionCount() int32 {
	if o == nil || IsNil(o.BgpSessionCount) {
		var ret int32
		return ret
	}
	return *o.BgpSessionCount
}

// GetBgpSessionCountOk returns a tuple with the BgpSessionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetBgpSessionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.BgpSessionCount) {
		return nil, false
	}
	return o.BgpSessionCount, true
}

// HasBgpSessionCount returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasBgpSessionCount() bool {
	if o != nil && !IsNil(o.BgpSessionCount) {
		return true
	}

	return false
}

// SetBgpSessionCount gets a reference to the given int32 and assigns it to the BgpSessionCount field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetBgpSessionCount(v int32) {
	o.BgpSessionCount = &v
}

// GetDeviceRole returns the DeviceRole field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetDeviceRole() string {
	if o == nil || IsNil(o.DeviceRole) {
		var ret string
		return ret
	}
	return *o.DeviceRole
}

// GetDeviceRoleOk returns a tuple with the DeviceRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetDeviceRoleOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceRole) {
		return nil, false
	}
	return o.DeviceRole, true
}

// HasDeviceRole returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasDeviceRole() bool {
	if o != nil && !IsNil(o.DeviceRole) {
		return true
	}

	return false
}

// SetDeviceRole gets a reference to the given string and assigns it to the DeviceRole field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetDeviceRole(v string) {
	o.DeviceRole = &v
}

// GetFailedServicesCount returns the FailedServicesCount field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetFailedServicesCount() int32 {
	if o == nil || IsNil(o.FailedServicesCount) {
		var ret int32
		return ret
	}
	return *o.FailedServicesCount
}

// GetFailedServicesCountOk returns a tuple with the FailedServicesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetFailedServicesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.FailedServicesCount) {
		return nil, false
	}
	return o.FailedServicesCount, true
}

// HasFailedServicesCount returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasFailedServicesCount() bool {
	if o != nil && !IsNil(o.FailedServicesCount) {
		return true
	}

	return false
}

// SetFailedServicesCount gets a reference to the given int32 and assigns it to the FailedServicesCount field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetFailedServicesCount(v int32) {
	o.FailedServicesCount = &v
}

// GetGraphnosVersion returns the GraphnosVersion field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetGraphnosVersion() string {
	if o == nil || IsNil(o.GraphnosVersion) {
		var ret string
		return ret
	}
	return *o.GraphnosVersion
}

// GetGraphnosVersionOk returns a tuple with the GraphnosVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetGraphnosVersionOk() (*string, bool) {
	if o == nil || IsNil(o.GraphnosVersion) {
		return nil, false
	}
	return o.GraphnosVersion, true
}

// HasGraphnosVersion returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasGraphnosVersion() bool {
	if o != nil && !IsNil(o.GraphnosVersion) {
		return true
	}

	return false
}

// SetGraphnosVersion gets a reference to the given string and assigns it to the GraphnosVersion field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetGraphnosVersion(v string) {
	o.GraphnosVersion = &v
}

// GetInstalledLabels returns the InstalledLabels field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetInstalledLabels() int32 {
	if o == nil || IsNil(o.InstalledLabels) {
		var ret int32
		return ret
	}
	return *o.InstalledLabels
}

// GetInstalledLabelsOk returns a tuple with the InstalledLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetInstalledLabelsOk() (*int32, bool) {
	if o == nil || IsNil(o.InstalledLabels) {
		return nil, false
	}
	return o.InstalledLabels, true
}

// HasInstalledLabels returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasInstalledLabels() bool {
	if o != nil && !IsNil(o.InstalledLabels) {
		return true
	}

	return false
}

// SetInstalledLabels gets a reference to the given int32 and assigns it to the InstalledLabels field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetInstalledLabels(v int32) {
	o.InstalledLabels = &v
}

// GetIpsecSessionCount returns the IpsecSessionCount field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetIpsecSessionCount() int32 {
	if o == nil || IsNil(o.IpsecSessionCount) {
		var ret int32
		return ret
	}
	return *o.IpsecSessionCount
}

// GetIpsecSessionCountOk returns a tuple with the IpsecSessionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetIpsecSessionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.IpsecSessionCount) {
		return nil, false
	}
	return o.IpsecSessionCount, true
}

// HasIpsecSessionCount returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasIpsecSessionCount() bool {
	if o != nil && !IsNil(o.IpsecSessionCount) {
		return true
	}

	return false
}

// SetIpsecSessionCount gets a reference to the given int32 and assigns it to the IpsecSessionCount field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetIpsecSessionCount(v int32) {
	o.IpsecSessionCount = &v
}

// GetOngoingAlerts returns the OngoingAlerts field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetOngoingAlerts() int32 {
	if o == nil || IsNil(o.OngoingAlerts) {
		var ret int32
		return ret
	}
	return *o.OngoingAlerts
}

// GetOngoingAlertsOk returns a tuple with the OngoingAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetOngoingAlertsOk() (*int32, bool) {
	if o == nil || IsNil(o.OngoingAlerts) {
		return nil, false
	}
	return o.OngoingAlerts, true
}

// HasOngoingAlerts returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasOngoingAlerts() bool {
	if o != nil && !IsNil(o.OngoingAlerts) {
		return true
	}

	return false
}

// SetOngoingAlerts gets a reference to the given int32 and assigns it to the OngoingAlerts field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetOngoingAlerts(v int32) {
	o.OngoingAlerts = &v
}

// GetOspfNeighborIpList returns the OspfNeighborIpList field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetOspfNeighborIpList() []string {
	if o == nil || IsNil(o.OspfNeighborIpList) {
		var ret []string
		return ret
	}
	return o.OspfNeighborIpList
}

// GetOspfNeighborIpListOk returns a tuple with the OspfNeighborIpList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetOspfNeighborIpListOk() ([]string, bool) {
	if o == nil || IsNil(o.OspfNeighborIpList) {
		return nil, false
	}
	return o.OspfNeighborIpList, true
}

// HasOspfNeighborIpList returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasOspfNeighborIpList() bool {
	if o != nil && !IsNil(o.OspfNeighborIpList) {
		return true
	}

	return false
}

// SetOspfNeighborIpList gets a reference to the given []string and assigns it to the OspfNeighborIpList field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetOspfNeighborIpList(v []string) {
	o.OspfNeighborIpList = v
}

// GetOspfSessionCount returns the OspfSessionCount field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetOspfSessionCount() int32 {
	if o == nil || IsNil(o.OspfSessionCount) {
		var ret int32
		return ret
	}
	return *o.OspfSessionCount
}

// GetOspfSessionCountOk returns a tuple with the OspfSessionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) GetOspfSessionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.OspfSessionCount) {
		return nil, false
	}
	return o.OspfSessionCount, true
}

// HasOspfSessionCount returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) HasOspfSessionCount() bool {
	if o != nil && !IsNil(o.OspfSessionCount) {
		return true
	}

	return false
}

// SetOspfSessionCount gets a reference to the given int32 and assigns it to the OspfSessionCount field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotData) SetOspfSessionCount(v int32) {
	o.OspfSessionCount = &v
}

func (o V1DeviceSnapshotGet200ResponseFirstSnapshotData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeviceSnapshotGet200ResponseFirstSnapshotData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OSPFInstalledRouteCount) {
		toSerialize["OSPFInstalledRouteCount"] = o.OSPFInstalledRouteCount
	}
	if !IsNil(o.T2SessionCount) {
		toSerialize["T2SessionCount"] = o.T2SessionCount
	}
	if !IsNil(o.TWAMPSessionCount) {
		toSerialize["TWAMPSessionCount"] = o.TWAMPSessionCount
	}
	if !IsNil(o.BfdSessionCount) {
		toSerialize["bfdSessionCount"] = o.BfdSessionCount
	}
	if !IsNil(o.BgpNeighborIpList) {
		toSerialize["bgpNeighborIpList"] = o.BgpNeighborIpList
	}
	if !IsNil(o.BgpSessionCount) {
		toSerialize["bgpSessionCount"] = o.BgpSessionCount
	}
	if !IsNil(o.DeviceRole) {
		toSerialize["deviceRole"] = o.DeviceRole
	}
	if !IsNil(o.FailedServicesCount) {
		toSerialize["failedServicesCount"] = o.FailedServicesCount
	}
	if !IsNil(o.GraphnosVersion) {
		toSerialize["graphnosVersion"] = o.GraphnosVersion
	}
	if !IsNil(o.InstalledLabels) {
		toSerialize["installedLabels"] = o.InstalledLabels
	}
	if !IsNil(o.IpsecSessionCount) {
		toSerialize["ipsecSessionCount"] = o.IpsecSessionCount
	}
	if !IsNil(o.OngoingAlerts) {
		toSerialize["ongoingAlerts"] = o.OngoingAlerts
	}
	if !IsNil(o.OspfNeighborIpList) {
		toSerialize["ospfNeighborIpList"] = o.OspfNeighborIpList
	}
	if !IsNil(o.OspfSessionCount) {
		toSerialize["ospfSessionCount"] = o.OspfSessionCount
	}
	return toSerialize, nil
}

type NullableV1DeviceSnapshotGet200ResponseFirstSnapshotData struct {
	value *V1DeviceSnapshotGet200ResponseFirstSnapshotData
	isSet bool
}

func (v NullableV1DeviceSnapshotGet200ResponseFirstSnapshotData) Get() *V1DeviceSnapshotGet200ResponseFirstSnapshotData {
	return v.value
}

func (v *NullableV1DeviceSnapshotGet200ResponseFirstSnapshotData) Set(val *V1DeviceSnapshotGet200ResponseFirstSnapshotData) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeviceSnapshotGet200ResponseFirstSnapshotData) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeviceSnapshotGet200ResponseFirstSnapshotData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeviceSnapshotGet200ResponseFirstSnapshotData(val *V1DeviceSnapshotGet200ResponseFirstSnapshotData) *NullableV1DeviceSnapshotGet200ResponseFirstSnapshotData {
	return &NullableV1DeviceSnapshotGet200ResponseFirstSnapshotData{value: val, isSet: true}
}

func (v NullableV1DeviceSnapshotGet200ResponseFirstSnapshotData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeviceSnapshotGet200ResponseFirstSnapshotData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


