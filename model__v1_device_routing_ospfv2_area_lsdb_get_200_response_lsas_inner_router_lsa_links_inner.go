/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner{}

// V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner struct for V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner
type V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner struct {
	LinkData *string `json:"linkData,omitempty"`
	LinkId *string `json:"linkId,omitempty"`
	LinkType *string `json:"linkType,omitempty"`
	Metric *int32 `json:"metric,omitempty"`
	TosMetric *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerAsexternalLsaTosMetric `json:"tosMetric,omitempty"`
}

// NewV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner instantiates a new V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner() *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner {
	this := V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner{}
	return &this
}

// NewV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInnerWithDefaults instantiates a new V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInnerWithDefaults() *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner {
	this := V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner{}
	return &this
}

// GetLinkData returns the LinkData field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) GetLinkData() string {
	if o == nil || IsNil(o.LinkData) {
		var ret string
		return ret
	}
	return *o.LinkData
}

// GetLinkDataOk returns a tuple with the LinkData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) GetLinkDataOk() (*string, bool) {
	if o == nil || IsNil(o.LinkData) {
		return nil, false
	}
	return o.LinkData, true
}

// HasLinkData returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) HasLinkData() bool {
	if o != nil && !IsNil(o.LinkData) {
		return true
	}

	return false
}

// SetLinkData gets a reference to the given string and assigns it to the LinkData field.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) SetLinkData(v string) {
	o.LinkData = &v
}

// GetLinkId returns the LinkId field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) GetLinkId() string {
	if o == nil || IsNil(o.LinkId) {
		var ret string
		return ret
	}
	return *o.LinkId
}

// GetLinkIdOk returns a tuple with the LinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) GetLinkIdOk() (*string, bool) {
	if o == nil || IsNil(o.LinkId) {
		return nil, false
	}
	return o.LinkId, true
}

// HasLinkId returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) HasLinkId() bool {
	if o != nil && !IsNil(o.LinkId) {
		return true
	}

	return false
}

// SetLinkId gets a reference to the given string and assigns it to the LinkId field.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) SetLinkId(v string) {
	o.LinkId = &v
}

// GetLinkType returns the LinkType field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) GetLinkType() string {
	if o == nil || IsNil(o.LinkType) {
		var ret string
		return ret
	}
	return *o.LinkType
}

// GetLinkTypeOk returns a tuple with the LinkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) GetLinkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LinkType) {
		return nil, false
	}
	return o.LinkType, true
}

// HasLinkType returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) HasLinkType() bool {
	if o != nil && !IsNil(o.LinkType) {
		return true
	}

	return false
}

// SetLinkType gets a reference to the given string and assigns it to the LinkType field.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) SetLinkType(v string) {
	o.LinkType = &v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) GetMetric() int32 {
	if o == nil || IsNil(o.Metric) {
		var ret int32
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) GetMetricOk() (*int32, bool) {
	if o == nil || IsNil(o.Metric) {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) HasMetric() bool {
	if o != nil && !IsNil(o.Metric) {
		return true
	}

	return false
}

// SetMetric gets a reference to the given int32 and assigns it to the Metric field.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) SetMetric(v int32) {
	o.Metric = &v
}

// GetTosMetric returns the TosMetric field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) GetTosMetric() V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerAsexternalLsaTosMetric {
	if o == nil || IsNil(o.TosMetric) {
		var ret V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerAsexternalLsaTosMetric
		return ret
	}
	return *o.TosMetric
}

// GetTosMetricOk returns a tuple with the TosMetric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) GetTosMetricOk() (*V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerAsexternalLsaTosMetric, bool) {
	if o == nil || IsNil(o.TosMetric) {
		return nil, false
	}
	return o.TosMetric, true
}

// HasTosMetric returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) HasTosMetric() bool {
	if o != nil && !IsNil(o.TosMetric) {
		return true
	}

	return false
}

// SetTosMetric gets a reference to the given V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerAsexternalLsaTosMetric and assigns it to the TosMetric field.
func (o *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) SetTosMetric(v V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerAsexternalLsaTosMetric) {
	o.TosMetric = &v
}

func (o V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LinkData) {
		toSerialize["linkData"] = o.LinkData
	}
	if !IsNil(o.LinkId) {
		toSerialize["linkId"] = o.LinkId
	}
	if !IsNil(o.LinkType) {
		toSerialize["linkType"] = o.LinkType
	}
	if !IsNil(o.Metric) {
		toSerialize["metric"] = o.Metric
	}
	if !IsNil(o.TosMetric) {
		toSerialize["tosMetric"] = o.TosMetric
	}
	return toSerialize, nil
}

type NullableV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner struct {
	value *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner
	isSet bool
}

func (v NullableV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) Get() *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner {
	return v.value
}

func (v *NullableV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) Set(val *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner(val *V1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) *NullableV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner {
	return &NullableV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner{value: val, isSet: true}
}

func (v NullableV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeviceRoutingOspfv2AreaLsdbGet200ResponseLsasInnerRouterLsaLinksInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


