/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1EnterpriseAllocationGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1EnterpriseAllocationGet200Response{}

// V1EnterpriseAllocationGet200Response struct for V1EnterpriseAllocationGet200Response
type V1EnterpriseAllocationGet200Response struct {
	ConsumptionSummary *V1EnterpriseAllocationGet200ResponseConsumptionSummary `json:"consumptionSummary,omitempty"`
	ConversionHolders *map[string]V1EnterpriseAllocationGet200ResponseConversionHoldersValue `json:"conversionHolders,omitempty"`
	RegionalAllocations []V1EnterpriseAllocationGet200ResponseRegionalAllocationsInner `json:"regionalAllocations,omitempty"`
}

// NewV1EnterpriseAllocationGet200Response instantiates a new V1EnterpriseAllocationGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1EnterpriseAllocationGet200Response() *V1EnterpriseAllocationGet200Response {
	this := V1EnterpriseAllocationGet200Response{}
	return &this
}

// NewV1EnterpriseAllocationGet200ResponseWithDefaults instantiates a new V1EnterpriseAllocationGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EnterpriseAllocationGet200ResponseWithDefaults() *V1EnterpriseAllocationGet200Response {
	this := V1EnterpriseAllocationGet200Response{}
	return &this
}

// GetConsumptionSummary returns the ConsumptionSummary field value if set, zero value otherwise.
func (o *V1EnterpriseAllocationGet200Response) GetConsumptionSummary() V1EnterpriseAllocationGet200ResponseConsumptionSummary {
	if o == nil || IsNil(o.ConsumptionSummary) {
		var ret V1EnterpriseAllocationGet200ResponseConsumptionSummary
		return ret
	}
	return *o.ConsumptionSummary
}

// GetConsumptionSummaryOk returns a tuple with the ConsumptionSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseAllocationGet200Response) GetConsumptionSummaryOk() (*V1EnterpriseAllocationGet200ResponseConsumptionSummary, bool) {
	if o == nil || IsNil(o.ConsumptionSummary) {
		return nil, false
	}
	return o.ConsumptionSummary, true
}

// HasConsumptionSummary returns a boolean if a field has been set.
func (o *V1EnterpriseAllocationGet200Response) HasConsumptionSummary() bool {
	if o != nil && !IsNil(o.ConsumptionSummary) {
		return true
	}

	return false
}

// SetConsumptionSummary gets a reference to the given V1EnterpriseAllocationGet200ResponseConsumptionSummary and assigns it to the ConsumptionSummary field.
func (o *V1EnterpriseAllocationGet200Response) SetConsumptionSummary(v V1EnterpriseAllocationGet200ResponseConsumptionSummary) {
	o.ConsumptionSummary = &v
}

// GetConversionHolders returns the ConversionHolders field value if set, zero value otherwise.
func (o *V1EnterpriseAllocationGet200Response) GetConversionHolders() map[string]V1EnterpriseAllocationGet200ResponseConversionHoldersValue {
	if o == nil || IsNil(o.ConversionHolders) {
		var ret map[string]V1EnterpriseAllocationGet200ResponseConversionHoldersValue
		return ret
	}
	return *o.ConversionHolders
}

// GetConversionHoldersOk returns a tuple with the ConversionHolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseAllocationGet200Response) GetConversionHoldersOk() (*map[string]V1EnterpriseAllocationGet200ResponseConversionHoldersValue, bool) {
	if o == nil || IsNil(o.ConversionHolders) {
		return nil, false
	}
	return o.ConversionHolders, true
}

// HasConversionHolders returns a boolean if a field has been set.
func (o *V1EnterpriseAllocationGet200Response) HasConversionHolders() bool {
	if o != nil && !IsNil(o.ConversionHolders) {
		return true
	}

	return false
}

// SetConversionHolders gets a reference to the given map[string]V1EnterpriseAllocationGet200ResponseConversionHoldersValue and assigns it to the ConversionHolders field.
func (o *V1EnterpriseAllocationGet200Response) SetConversionHolders(v map[string]V1EnterpriseAllocationGet200ResponseConversionHoldersValue) {
	o.ConversionHolders = &v
}

// GetRegionalAllocations returns the RegionalAllocations field value if set, zero value otherwise.
func (o *V1EnterpriseAllocationGet200Response) GetRegionalAllocations() []V1EnterpriseAllocationGet200ResponseRegionalAllocationsInner {
	if o == nil || IsNil(o.RegionalAllocations) {
		var ret []V1EnterpriseAllocationGet200ResponseRegionalAllocationsInner
		return ret
	}
	return o.RegionalAllocations
}

// GetRegionalAllocationsOk returns a tuple with the RegionalAllocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseAllocationGet200Response) GetRegionalAllocationsOk() ([]V1EnterpriseAllocationGet200ResponseRegionalAllocationsInner, bool) {
	if o == nil || IsNil(o.RegionalAllocations) {
		return nil, false
	}
	return o.RegionalAllocations, true
}

// HasRegionalAllocations returns a boolean if a field has been set.
func (o *V1EnterpriseAllocationGet200Response) HasRegionalAllocations() bool {
	if o != nil && !IsNil(o.RegionalAllocations) {
		return true
	}

	return false
}

// SetRegionalAllocations gets a reference to the given []V1EnterpriseAllocationGet200ResponseRegionalAllocationsInner and assigns it to the RegionalAllocations field.
func (o *V1EnterpriseAllocationGet200Response) SetRegionalAllocations(v []V1EnterpriseAllocationGet200ResponseRegionalAllocationsInner) {
	o.RegionalAllocations = v
}

func (o V1EnterpriseAllocationGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1EnterpriseAllocationGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConsumptionSummary) {
		toSerialize["consumptionSummary"] = o.ConsumptionSummary
	}
	if !IsNil(o.ConversionHolders) {
		toSerialize["conversionHolders"] = o.ConversionHolders
	}
	if !IsNil(o.RegionalAllocations) {
		toSerialize["regionalAllocations"] = o.RegionalAllocations
	}
	return toSerialize, nil
}

type NullableV1EnterpriseAllocationGet200Response struct {
	value *V1EnterpriseAllocationGet200Response
	isSet bool
}

func (v NullableV1EnterpriseAllocationGet200Response) Get() *V1EnterpriseAllocationGet200Response {
	return v.value
}

func (v *NullableV1EnterpriseAllocationGet200Response) Set(val *V1EnterpriseAllocationGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1EnterpriseAllocationGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1EnterpriseAllocationGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1EnterpriseAllocationGet200Response(val *V1EnterpriseAllocationGet200Response) *NullableV1EnterpriseAllocationGet200Response {
	return &NullableV1EnterpriseAllocationGet200Response{value: val, isSet: true}
}

func (v NullableV1EnterpriseAllocationGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1EnterpriseAllocationGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


