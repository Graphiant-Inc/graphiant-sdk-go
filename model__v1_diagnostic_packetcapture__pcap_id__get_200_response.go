/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DiagnosticPacketcapturePcapIdGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DiagnosticPacketcapturePcapIdGet200Response{}

// V1DiagnosticPacketcapturePcapIdGet200Response struct for V1DiagnosticPacketcapturePcapIdGet200Response
type V1DiagnosticPacketcapturePcapIdGet200Response struct {
	FailureReason *string `json:"failureReason,omitempty"`
	FileName *string `json:"fileName,omitempty"`
	Status *string `json:"status,omitempty"`
	UploadProgress *int32 `json:"uploadProgress,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewV1DiagnosticPacketcapturePcapIdGet200Response instantiates a new V1DiagnosticPacketcapturePcapIdGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DiagnosticPacketcapturePcapIdGet200Response() *V1DiagnosticPacketcapturePcapIdGet200Response {
	this := V1DiagnosticPacketcapturePcapIdGet200Response{}
	return &this
}

// NewV1DiagnosticPacketcapturePcapIdGet200ResponseWithDefaults instantiates a new V1DiagnosticPacketcapturePcapIdGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DiagnosticPacketcapturePcapIdGet200ResponseWithDefaults() *V1DiagnosticPacketcapturePcapIdGet200Response {
	this := V1DiagnosticPacketcapturePcapIdGet200Response{}
	return &this
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) GetFailureReason() string {
	if o == nil || IsNil(o.FailureReason) {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) GetFailureReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailureReason) {
		return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) HasFailureReason() bool {
	if o != nil && !IsNil(o.FailureReason) {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) SetFailureReason(v string) {
	o.FailureReason = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) SetFileName(v string) {
	o.FileName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) SetStatus(v string) {
	o.Status = &v
}

// GetUploadProgress returns the UploadProgress field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) GetUploadProgress() int32 {
	if o == nil || IsNil(o.UploadProgress) {
		var ret int32
		return ret
	}
	return *o.UploadProgress
}

// GetUploadProgressOk returns a tuple with the UploadProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) GetUploadProgressOk() (*int32, bool) {
	if o == nil || IsNil(o.UploadProgress) {
		return nil, false
	}
	return o.UploadProgress, true
}

// HasUploadProgress returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) HasUploadProgress() bool {
	if o != nil && !IsNil(o.UploadProgress) {
		return true
	}

	return false
}

// SetUploadProgress gets a reference to the given int32 and assigns it to the UploadProgress field.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) SetUploadProgress(v int32) {
	o.UploadProgress = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *V1DiagnosticPacketcapturePcapIdGet200Response) SetUrl(v string) {
	o.Url = &v
}

func (o V1DiagnosticPacketcapturePcapIdGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DiagnosticPacketcapturePcapIdGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FailureReason) {
		toSerialize["failureReason"] = o.FailureReason
	}
	if !IsNil(o.FileName) {
		toSerialize["fileName"] = o.FileName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UploadProgress) {
		toSerialize["uploadProgress"] = o.UploadProgress
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableV1DiagnosticPacketcapturePcapIdGet200Response struct {
	value *V1DiagnosticPacketcapturePcapIdGet200Response
	isSet bool
}

func (v NullableV1DiagnosticPacketcapturePcapIdGet200Response) Get() *V1DiagnosticPacketcapturePcapIdGet200Response {
	return v.value
}

func (v *NullableV1DiagnosticPacketcapturePcapIdGet200Response) Set(val *V1DiagnosticPacketcapturePcapIdGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DiagnosticPacketcapturePcapIdGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DiagnosticPacketcapturePcapIdGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DiagnosticPacketcapturePcapIdGet200Response(val *V1DiagnosticPacketcapturePcapIdGet200Response) *NullableV1DiagnosticPacketcapturePcapIdGet200Response {
	return &NullableV1DiagnosticPacketcapturePcapIdGet200Response{value: val, isSet: true}
}

func (v NullableV1DiagnosticPacketcapturePcapIdGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DiagnosticPacketcapturePcapIdGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


