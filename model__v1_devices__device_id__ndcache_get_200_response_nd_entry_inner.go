/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner{}

// V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner struct for V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner
type V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner struct {
	InterfaceName *string `json:"interfaceName,omitempty"`
	Ipv6Address *string `json:"ipv6Address,omitempty"`
	MacAddress *string `json:"macAddress,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner instantiates a new V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner() *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner {
	this := V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner{}
	return &this
}

// NewV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInnerWithDefaults instantiates a new V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInnerWithDefaults() *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner {
	this := V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner{}
	return &this
}

// GetInterfaceName returns the InterfaceName field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) GetInterfaceName() string {
	if o == nil || IsNil(o.InterfaceName) {
		var ret string
		return ret
	}
	return *o.InterfaceName
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) GetInterfaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceName) {
		return nil, false
	}
	return o.InterfaceName, true
}

// HasInterfaceName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) HasInterfaceName() bool {
	if o != nil && !IsNil(o.InterfaceName) {
		return true
	}

	return false
}

// SetInterfaceName gets a reference to the given string and assigns it to the InterfaceName field.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) SetInterfaceName(v string) {
	o.InterfaceName = &v
}

// GetIpv6Address returns the Ipv6Address field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) GetIpv6Address() string {
	if o == nil || IsNil(o.Ipv6Address) {
		var ret string
		return ret
	}
	return *o.Ipv6Address
}

// GetIpv6AddressOk returns a tuple with the Ipv6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) GetIpv6AddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv6Address) {
		return nil, false
	}
	return o.Ipv6Address, true
}

// HasIpv6Address returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) HasIpv6Address() bool {
	if o != nil && !IsNil(o.Ipv6Address) {
		return true
	}

	return false
}

// SetIpv6Address gets a reference to the given string and assigns it to the Ipv6Address field.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) SetIpv6Address(v string) {
	o.Ipv6Address = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) SetName(v string) {
	o.Name = &v
}

func (o V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InterfaceName) {
		toSerialize["interfaceName"] = o.InterfaceName
	}
	if !IsNil(o.Ipv6Address) {
		toSerialize["ipv6Address"] = o.Ipv6Address
	}
	if !IsNil(o.MacAddress) {
		toSerialize["macAddress"] = o.MacAddress
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner struct {
	value *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner
	isSet bool
}

func (v NullableV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) Get() *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner {
	return v.value
}

func (v *NullableV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) Set(val *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner(val *V1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) *NullableV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner {
	return &NullableV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdNdcacheGet200ResponseNdEntryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


