/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner{}

// V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner struct for V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner
type V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner struct {
	Box []V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInnerBoxInner `json:"box,omitempty"`
	DeviceId *int64 `json:"deviceId,omitempty"`
	DeviceRegion *V2AssuranceTopologyInventoryPost200ResponseRegionsInner `json:"deviceRegion,omitempty"`
	PeerDeviceId *int64 `json:"peerDeviceId,omitempty"`
	PeerDeviceRegion *V2AssuranceTopologyInventoryPost200ResponseRegionsInner `json:"peerDeviceRegion,omitempty"`
	SessionName *string `json:"sessionName,omitempty"`
}

// NewV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner instantiates a new V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner() *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner {
	this := V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner{}
	return &this
}

// NewV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInnerWithDefaults instantiates a new V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInnerWithDefaults() *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner {
	this := V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner{}
	return &this
}

// GetBox returns the Box field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetBox() []V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInnerBoxInner {
	if o == nil || IsNil(o.Box) {
		var ret []V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInnerBoxInner
		return ret
	}
	return o.Box
}

// GetBoxOk returns a tuple with the Box field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetBoxOk() ([]V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInnerBoxInner, bool) {
	if o == nil || IsNil(o.Box) {
		return nil, false
	}
	return o.Box, true
}

// HasBox returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) HasBox() bool {
	if o != nil && !IsNil(o.Box) {
		return true
	}

	return false
}

// SetBox gets a reference to the given []V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInnerBoxInner and assigns it to the Box field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) SetBox(v []V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInnerBoxInner) {
	o.Box = v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetDeviceRegion returns the DeviceRegion field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetDeviceRegion() V2AssuranceTopologyInventoryPost200ResponseRegionsInner {
	if o == nil || IsNil(o.DeviceRegion) {
		var ret V2AssuranceTopologyInventoryPost200ResponseRegionsInner
		return ret
	}
	return *o.DeviceRegion
}

// GetDeviceRegionOk returns a tuple with the DeviceRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetDeviceRegionOk() (*V2AssuranceTopologyInventoryPost200ResponseRegionsInner, bool) {
	if o == nil || IsNil(o.DeviceRegion) {
		return nil, false
	}
	return o.DeviceRegion, true
}

// HasDeviceRegion returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) HasDeviceRegion() bool {
	if o != nil && !IsNil(o.DeviceRegion) {
		return true
	}

	return false
}

// SetDeviceRegion gets a reference to the given V2AssuranceTopologyInventoryPost200ResponseRegionsInner and assigns it to the DeviceRegion field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) SetDeviceRegion(v V2AssuranceTopologyInventoryPost200ResponseRegionsInner) {
	o.DeviceRegion = &v
}

// GetPeerDeviceId returns the PeerDeviceId field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetPeerDeviceId() int64 {
	if o == nil || IsNil(o.PeerDeviceId) {
		var ret int64
		return ret
	}
	return *o.PeerDeviceId
}

// GetPeerDeviceIdOk returns a tuple with the PeerDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetPeerDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PeerDeviceId) {
		return nil, false
	}
	return o.PeerDeviceId, true
}

// HasPeerDeviceId returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) HasPeerDeviceId() bool {
	if o != nil && !IsNil(o.PeerDeviceId) {
		return true
	}

	return false
}

// SetPeerDeviceId gets a reference to the given int64 and assigns it to the PeerDeviceId field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) SetPeerDeviceId(v int64) {
	o.PeerDeviceId = &v
}

// GetPeerDeviceRegion returns the PeerDeviceRegion field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetPeerDeviceRegion() V2AssuranceTopologyInventoryPost200ResponseRegionsInner {
	if o == nil || IsNil(o.PeerDeviceRegion) {
		var ret V2AssuranceTopologyInventoryPost200ResponseRegionsInner
		return ret
	}
	return *o.PeerDeviceRegion
}

// GetPeerDeviceRegionOk returns a tuple with the PeerDeviceRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetPeerDeviceRegionOk() (*V2AssuranceTopologyInventoryPost200ResponseRegionsInner, bool) {
	if o == nil || IsNil(o.PeerDeviceRegion) {
		return nil, false
	}
	return o.PeerDeviceRegion, true
}

// HasPeerDeviceRegion returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) HasPeerDeviceRegion() bool {
	if o != nil && !IsNil(o.PeerDeviceRegion) {
		return true
	}

	return false
}

// SetPeerDeviceRegion gets a reference to the given V2AssuranceTopologyInventoryPost200ResponseRegionsInner and assigns it to the PeerDeviceRegion field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) SetPeerDeviceRegion(v V2AssuranceTopologyInventoryPost200ResponseRegionsInner) {
	o.PeerDeviceRegion = &v
}

// GetSessionName returns the SessionName field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetSessionName() string {
	if o == nil || IsNil(o.SessionName) {
		var ret string
		return ret
	}
	return *o.SessionName
}

// GetSessionNameOk returns a tuple with the SessionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) GetSessionNameOk() (*string, bool) {
	if o == nil || IsNil(o.SessionName) {
		return nil, false
	}
	return o.SessionName, true
}

// HasSessionName returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) HasSessionName() bool {
	if o != nil && !IsNil(o.SessionName) {
		return true
	}

	return false
}

// SetSessionName gets a reference to the given string and assigns it to the SessionName field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) SetSessionName(v string) {
	o.SessionName = &v
}

func (o V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Box) {
		toSerialize["box"] = o.Box
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.DeviceRegion) {
		toSerialize["deviceRegion"] = o.DeviceRegion
	}
	if !IsNil(o.PeerDeviceId) {
		toSerialize["peerDeviceId"] = o.PeerDeviceId
	}
	if !IsNil(o.PeerDeviceRegion) {
		toSerialize["peerDeviceRegion"] = o.PeerDeviceRegion
	}
	if !IsNil(o.SessionName) {
		toSerialize["sessionName"] = o.SessionName
	}
	return toSerialize, nil
}

type NullableV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner struct {
	value *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner
	isSet bool
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) Get() *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner {
	return v.value
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) Set(val *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner(val *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner {
	return &NullableV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner{value: val, isSet: true}
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrixQoeMatrixInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


