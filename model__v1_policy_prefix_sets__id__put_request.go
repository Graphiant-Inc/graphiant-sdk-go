/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1PolicyPrefixSetsIdPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1PolicyPrefixSetsIdPutRequest{}

// V1PolicyPrefixSetsIdPutRequest struct for V1PolicyPrefixSetsIdPutRequest
type V1PolicyPrefixSetsIdPutRequest struct {
	Description *string `json:"description,omitempty"`
	Entries *map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValueEntry `json:"entries,omitempty"`
	Name *string `json:"name,omitempty"`
	PrefixSetEntries *map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValue `json:"prefixSetEntries,omitempty"`
}

// NewV1PolicyPrefixSetsIdPutRequest instantiates a new V1PolicyPrefixSetsIdPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1PolicyPrefixSetsIdPutRequest() *V1PolicyPrefixSetsIdPutRequest {
	this := V1PolicyPrefixSetsIdPutRequest{}
	return &this
}

// NewV1PolicyPrefixSetsIdPutRequestWithDefaults instantiates a new V1PolicyPrefixSetsIdPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1PolicyPrefixSetsIdPutRequestWithDefaults() *V1PolicyPrefixSetsIdPutRequest {
	this := V1PolicyPrefixSetsIdPutRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1PolicyPrefixSetsIdPutRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PolicyPrefixSetsIdPutRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1PolicyPrefixSetsIdPutRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1PolicyPrefixSetsIdPutRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *V1PolicyPrefixSetsIdPutRequest) GetEntries() map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValueEntry {
	if o == nil || IsNil(o.Entries) {
		var ret map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValueEntry
		return ret
	}
	return *o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PolicyPrefixSetsIdPutRequest) GetEntriesOk() (*map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValueEntry, bool) {
	if o == nil || IsNil(o.Entries) {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *V1PolicyPrefixSetsIdPutRequest) HasEntries() bool {
	if o != nil && !IsNil(o.Entries) {
		return true
	}

	return false
}

// SetEntries gets a reference to the given map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValueEntry and assigns it to the Entries field.
func (o *V1PolicyPrefixSetsIdPutRequest) SetEntries(v map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValueEntry) {
	o.Entries = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1PolicyPrefixSetsIdPutRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PolicyPrefixSetsIdPutRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1PolicyPrefixSetsIdPutRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1PolicyPrefixSetsIdPutRequest) SetName(v string) {
	o.Name = &v
}

// GetPrefixSetEntries returns the PrefixSetEntries field value if set, zero value otherwise.
func (o *V1PolicyPrefixSetsIdPutRequest) GetPrefixSetEntries() map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValue {
	if o == nil || IsNil(o.PrefixSetEntries) {
		var ret map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValue
		return ret
	}
	return *o.PrefixSetEntries
}

// GetPrefixSetEntriesOk returns a tuple with the PrefixSetEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PolicyPrefixSetsIdPutRequest) GetPrefixSetEntriesOk() (*map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValue, bool) {
	if o == nil || IsNil(o.PrefixSetEntries) {
		return nil, false
	}
	return o.PrefixSetEntries, true
}

// HasPrefixSetEntries returns a boolean if a field has been set.
func (o *V1PolicyPrefixSetsIdPutRequest) HasPrefixSetEntries() bool {
	if o != nil && !IsNil(o.PrefixSetEntries) {
		return true
	}

	return false
}

// SetPrefixSetEntries gets a reference to the given map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValue and assigns it to the PrefixSetEntries field.
func (o *V1PolicyPrefixSetsIdPutRequest) SetPrefixSetEntries(v map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValuePrefixSetEntriesValue) {
	o.PrefixSetEntries = &v
}

func (o V1PolicyPrefixSetsIdPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1PolicyPrefixSetsIdPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Entries) {
		toSerialize["entries"] = o.Entries
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PrefixSetEntries) {
		toSerialize["prefixSetEntries"] = o.PrefixSetEntries
	}
	return toSerialize, nil
}

type NullableV1PolicyPrefixSetsIdPutRequest struct {
	value *V1PolicyPrefixSetsIdPutRequest
	isSet bool
}

func (v NullableV1PolicyPrefixSetsIdPutRequest) Get() *V1PolicyPrefixSetsIdPutRequest {
	return v.value
}

func (v *NullableV1PolicyPrefixSetsIdPutRequest) Set(val *V1PolicyPrefixSetsIdPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1PolicyPrefixSetsIdPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1PolicyPrefixSetsIdPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1PolicyPrefixSetsIdPutRequest(val *V1PolicyPrefixSetsIdPutRequest) *NullableV1PolicyPrefixSetsIdPutRequest {
	return &NullableV1PolicyPrefixSetsIdPutRequest{value: val, isSet: true}
}

func (v NullableV1PolicyPrefixSetsIdPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1PolicyPrefixSetsIdPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


