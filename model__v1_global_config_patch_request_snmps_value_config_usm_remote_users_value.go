/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue{}

// V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue struct for V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue
type V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue struct {
	RemoteUser *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValueRemoteUser `json:"remoteUser,omitempty"`
}

// NewV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue instantiates a new V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue() *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue {
	this := V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue{}
	return &this
}

// NewV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValueWithDefaults instantiates a new V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValueWithDefaults() *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue {
	this := V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue{}
	return &this
}

// GetRemoteUser returns the RemoteUser field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) GetRemoteUser() V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValueRemoteUser {
	if o == nil || IsNil(o.RemoteUser) {
		var ret V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValueRemoteUser
		return ret
	}
	return *o.RemoteUser
}

// GetRemoteUserOk returns a tuple with the RemoteUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) GetRemoteUserOk() (*V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValueRemoteUser, bool) {
	if o == nil || IsNil(o.RemoteUser) {
		return nil, false
	}
	return o.RemoteUser, true
}

// HasRemoteUser returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) HasRemoteUser() bool {
	if o != nil && !IsNil(o.RemoteUser) {
		return true
	}

	return false
}

// SetRemoteUser gets a reference to the given V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValueRemoteUser and assigns it to the RemoteUser field.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) SetRemoteUser(v V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValueRemoteUser) {
	o.RemoteUser = &v
}

func (o V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RemoteUser) {
		toSerialize["remoteUser"] = o.RemoteUser
	}
	return toSerialize, nil
}

type NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue struct {
	value *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue
	isSet bool
}

func (v NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) Get() *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue {
	return v.value
}

func (v *NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) Set(val *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue(val *V1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) *NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue {
	return &NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue{value: val, isSet: true}
}

func (v NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmRemoteUsersValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


