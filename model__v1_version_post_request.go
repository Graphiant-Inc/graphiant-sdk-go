/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1VersionPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1VersionPostRequest{}

// V1VersionPostRequest struct for V1VersionPostRequest
type V1VersionPostRequest struct {
	ConfigurationMetadata *V1VersionPostRequestConfigurationMetadata `json:"configurationMetadata,omitempty"`
	DeviceId *int64 `json:"deviceId,omitempty"`
	Version *int32 `json:"version,omitempty"`
}

// NewV1VersionPostRequest instantiates a new V1VersionPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1VersionPostRequest() *V1VersionPostRequest {
	this := V1VersionPostRequest{}
	return &this
}

// NewV1VersionPostRequestWithDefaults instantiates a new V1VersionPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1VersionPostRequestWithDefaults() *V1VersionPostRequest {
	this := V1VersionPostRequest{}
	return &this
}

// GetConfigurationMetadata returns the ConfigurationMetadata field value if set, zero value otherwise.
func (o *V1VersionPostRequest) GetConfigurationMetadata() V1VersionPostRequestConfigurationMetadata {
	if o == nil || IsNil(o.ConfigurationMetadata) {
		var ret V1VersionPostRequestConfigurationMetadata
		return ret
	}
	return *o.ConfigurationMetadata
}

// GetConfigurationMetadataOk returns a tuple with the ConfigurationMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionPostRequest) GetConfigurationMetadataOk() (*V1VersionPostRequestConfigurationMetadata, bool) {
	if o == nil || IsNil(o.ConfigurationMetadata) {
		return nil, false
	}
	return o.ConfigurationMetadata, true
}

// HasConfigurationMetadata returns a boolean if a field has been set.
func (o *V1VersionPostRequest) HasConfigurationMetadata() bool {
	if o != nil && !IsNil(o.ConfigurationMetadata) {
		return true
	}

	return false
}

// SetConfigurationMetadata gets a reference to the given V1VersionPostRequestConfigurationMetadata and assigns it to the ConfigurationMetadata field.
func (o *V1VersionPostRequest) SetConfigurationMetadata(v V1VersionPostRequestConfigurationMetadata) {
	o.ConfigurationMetadata = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1VersionPostRequest) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionPostRequest) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1VersionPostRequest) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1VersionPostRequest) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V1VersionPostRequest) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionPostRequest) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V1VersionPostRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *V1VersionPostRequest) SetVersion(v int32) {
	o.Version = &v
}

func (o V1VersionPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1VersionPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigurationMetadata) {
		toSerialize["configurationMetadata"] = o.ConfigurationMetadata
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableV1VersionPostRequest struct {
	value *V1VersionPostRequest
	isSet bool
}

func (v NullableV1VersionPostRequest) Get() *V1VersionPostRequest {
	return v.value
}

func (v *NullableV1VersionPostRequest) Set(val *V1VersionPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1VersionPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1VersionPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1VersionPostRequest(val *V1VersionPostRequest) *NullableV1VersionPostRequest {
	return &NullableV1VersionPostRequest{value: val, isSet: true}
}

func (v NullableV1VersionPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1VersionPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


