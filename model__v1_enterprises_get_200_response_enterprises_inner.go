/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1EnterprisesGet200ResponseEnterprisesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1EnterprisesGet200ResponseEnterprisesInner{}

// V1EnterprisesGet200ResponseEnterprisesInner struct for V1EnterprisesGet200ResponseEnterprisesInner
type V1EnterprisesGet200ResponseEnterprisesInner struct {
	AcceptEula *bool `json:"acceptEula,omitempty"`
	AccountType *string `json:"accountType,omitempty"`
	AdminEmail *string `json:"adminEmail,omitempty"`
	CloudProvider *string `json:"cloudProvider,omitempty"`
	CompanyName *string `json:"companyName,omitempty"`
	Counts *V1EnterprisesGet200ResponseEnterprisesInnerCounts `json:"counts,omitempty"`
	CreditLimit *int32 `json:"creditLimit,omitempty"`
	Customers *map[string]V1EnterprisesGet200ResponseEnterprisesInnerCustomersValue `json:"customers,omitempty"`
	EnterpriseId *int64 `json:"enterpriseId,omitempty"`
	EulaAgreementDate *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"eulaAgreementDate,omitempty"`
	ImpersonationEnabled *bool `json:"impersonationEnabled,omitempty"`
	Logo *string `json:"logo,omitempty"`
	ParentCompanyName *string `json:"parentCompanyName,omitempty"`
	ParentEnterpriseId *int64 `json:"parentEnterpriseId,omitempty"`
	PortalBanner *string `json:"portalBanner,omitempty"`
	SmallLogo *string `json:"smallLogo,omitempty"`
	TokenExpiry *string `json:"tokenExpiry,omitempty"`
}

// NewV1EnterprisesGet200ResponseEnterprisesInner instantiates a new V1EnterprisesGet200ResponseEnterprisesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1EnterprisesGet200ResponseEnterprisesInner() *V1EnterprisesGet200ResponseEnterprisesInner {
	this := V1EnterprisesGet200ResponseEnterprisesInner{}
	return &this
}

// NewV1EnterprisesGet200ResponseEnterprisesInnerWithDefaults instantiates a new V1EnterprisesGet200ResponseEnterprisesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EnterprisesGet200ResponseEnterprisesInnerWithDefaults() *V1EnterprisesGet200ResponseEnterprisesInner {
	this := V1EnterprisesGet200ResponseEnterprisesInner{}
	return &this
}

// GetAcceptEula returns the AcceptEula field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetAcceptEula() bool {
	if o == nil || IsNil(o.AcceptEula) {
		var ret bool
		return ret
	}
	return *o.AcceptEula
}

// GetAcceptEulaOk returns a tuple with the AcceptEula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetAcceptEulaOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptEula) {
		return nil, false
	}
	return o.AcceptEula, true
}

// HasAcceptEula returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasAcceptEula() bool {
	if o != nil && !IsNil(o.AcceptEula) {
		return true
	}

	return false
}

// SetAcceptEula gets a reference to the given bool and assigns it to the AcceptEula field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetAcceptEula(v bool) {
	o.AcceptEula = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetAccountType() string {
	if o == nil || IsNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetAccountType(v string) {
	o.AccountType = &v
}

// GetAdminEmail returns the AdminEmail field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetAdminEmail() string {
	if o == nil || IsNil(o.AdminEmail) {
		var ret string
		return ret
	}
	return *o.AdminEmail
}

// GetAdminEmailOk returns a tuple with the AdminEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetAdminEmailOk() (*string, bool) {
	if o == nil || IsNil(o.AdminEmail) {
		return nil, false
	}
	return o.AdminEmail, true
}

// HasAdminEmail returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasAdminEmail() bool {
	if o != nil && !IsNil(o.AdminEmail) {
		return true
	}

	return false
}

// SetAdminEmail gets a reference to the given string and assigns it to the AdminEmail field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetAdminEmail(v string) {
	o.AdminEmail = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCounts returns the Counts field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetCounts() V1EnterprisesGet200ResponseEnterprisesInnerCounts {
	if o == nil || IsNil(o.Counts) {
		var ret V1EnterprisesGet200ResponseEnterprisesInnerCounts
		return ret
	}
	return *o.Counts
}

// GetCountsOk returns a tuple with the Counts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetCountsOk() (*V1EnterprisesGet200ResponseEnterprisesInnerCounts, bool) {
	if o == nil || IsNil(o.Counts) {
		return nil, false
	}
	return o.Counts, true
}

// HasCounts returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasCounts() bool {
	if o != nil && !IsNil(o.Counts) {
		return true
	}

	return false
}

// SetCounts gets a reference to the given V1EnterprisesGet200ResponseEnterprisesInnerCounts and assigns it to the Counts field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetCounts(v V1EnterprisesGet200ResponseEnterprisesInnerCounts) {
	o.Counts = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetCreditLimit() int32 {
	if o == nil || IsNil(o.CreditLimit) {
		var ret int32
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetCreditLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given int32 and assigns it to the CreditLimit field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetCreditLimit(v int32) {
	o.CreditLimit = &v
}

// GetCustomers returns the Customers field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetCustomers() map[string]V1EnterprisesGet200ResponseEnterprisesInnerCustomersValue {
	if o == nil || IsNil(o.Customers) {
		var ret map[string]V1EnterprisesGet200ResponseEnterprisesInnerCustomersValue
		return ret
	}
	return *o.Customers
}

// GetCustomersOk returns a tuple with the Customers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetCustomersOk() (*map[string]V1EnterprisesGet200ResponseEnterprisesInnerCustomersValue, bool) {
	if o == nil || IsNil(o.Customers) {
		return nil, false
	}
	return o.Customers, true
}

// HasCustomers returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasCustomers() bool {
	if o != nil && !IsNil(o.Customers) {
		return true
	}

	return false
}

// SetCustomers gets a reference to the given map[string]V1EnterprisesGet200ResponseEnterprisesInnerCustomersValue and assigns it to the Customers field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetCustomers(v map[string]V1EnterprisesGet200ResponseEnterprisesInnerCustomersValue) {
	o.Customers = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetEnterpriseId() int64 {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret int64
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given int64 and assigns it to the EnterpriseId field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetEnterpriseId(v int64) {
	o.EnterpriseId = &v
}

// GetEulaAgreementDate returns the EulaAgreementDate field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetEulaAgreementDate() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.EulaAgreementDate) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.EulaAgreementDate
}

// GetEulaAgreementDateOk returns a tuple with the EulaAgreementDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetEulaAgreementDateOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.EulaAgreementDate) {
		return nil, false
	}
	return o.EulaAgreementDate, true
}

// HasEulaAgreementDate returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasEulaAgreementDate() bool {
	if o != nil && !IsNil(o.EulaAgreementDate) {
		return true
	}

	return false
}

// SetEulaAgreementDate gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the EulaAgreementDate field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetEulaAgreementDate(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.EulaAgreementDate = &v
}

// GetImpersonationEnabled returns the ImpersonationEnabled field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetImpersonationEnabled() bool {
	if o == nil || IsNil(o.ImpersonationEnabled) {
		var ret bool
		return ret
	}
	return *o.ImpersonationEnabled
}

// GetImpersonationEnabledOk returns a tuple with the ImpersonationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetImpersonationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ImpersonationEnabled) {
		return nil, false
	}
	return o.ImpersonationEnabled, true
}

// HasImpersonationEnabled returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasImpersonationEnabled() bool {
	if o != nil && !IsNil(o.ImpersonationEnabled) {
		return true
	}

	return false
}

// SetImpersonationEnabled gets a reference to the given bool and assigns it to the ImpersonationEnabled field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetImpersonationEnabled(v bool) {
	o.ImpersonationEnabled = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetLogo(v string) {
	o.Logo = &v
}

// GetParentCompanyName returns the ParentCompanyName field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetParentCompanyName() string {
	if o == nil || IsNil(o.ParentCompanyName) {
		var ret string
		return ret
	}
	return *o.ParentCompanyName
}

// GetParentCompanyNameOk returns a tuple with the ParentCompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetParentCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentCompanyName) {
		return nil, false
	}
	return o.ParentCompanyName, true
}

// HasParentCompanyName returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasParentCompanyName() bool {
	if o != nil && !IsNil(o.ParentCompanyName) {
		return true
	}

	return false
}

// SetParentCompanyName gets a reference to the given string and assigns it to the ParentCompanyName field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetParentCompanyName(v string) {
	o.ParentCompanyName = &v
}

// GetParentEnterpriseId returns the ParentEnterpriseId field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetParentEnterpriseId() int64 {
	if o == nil || IsNil(o.ParentEnterpriseId) {
		var ret int64
		return ret
	}
	return *o.ParentEnterpriseId
}

// GetParentEnterpriseIdOk returns a tuple with the ParentEnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetParentEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ParentEnterpriseId) {
		return nil, false
	}
	return o.ParentEnterpriseId, true
}

// HasParentEnterpriseId returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasParentEnterpriseId() bool {
	if o != nil && !IsNil(o.ParentEnterpriseId) {
		return true
	}

	return false
}

// SetParentEnterpriseId gets a reference to the given int64 and assigns it to the ParentEnterpriseId field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetParentEnterpriseId(v int64) {
	o.ParentEnterpriseId = &v
}

// GetPortalBanner returns the PortalBanner field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetPortalBanner() string {
	if o == nil || IsNil(o.PortalBanner) {
		var ret string
		return ret
	}
	return *o.PortalBanner
}

// GetPortalBannerOk returns a tuple with the PortalBanner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetPortalBannerOk() (*string, bool) {
	if o == nil || IsNil(o.PortalBanner) {
		return nil, false
	}
	return o.PortalBanner, true
}

// HasPortalBanner returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasPortalBanner() bool {
	if o != nil && !IsNil(o.PortalBanner) {
		return true
	}

	return false
}

// SetPortalBanner gets a reference to the given string and assigns it to the PortalBanner field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetPortalBanner(v string) {
	o.PortalBanner = &v
}

// GetSmallLogo returns the SmallLogo field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetSmallLogo() string {
	if o == nil || IsNil(o.SmallLogo) {
		var ret string
		return ret
	}
	return *o.SmallLogo
}

// GetSmallLogoOk returns a tuple with the SmallLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetSmallLogoOk() (*string, bool) {
	if o == nil || IsNil(o.SmallLogo) {
		return nil, false
	}
	return o.SmallLogo, true
}

// HasSmallLogo returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasSmallLogo() bool {
	if o != nil && !IsNil(o.SmallLogo) {
		return true
	}

	return false
}

// SetSmallLogo gets a reference to the given string and assigns it to the SmallLogo field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetSmallLogo(v string) {
	o.SmallLogo = &v
}

// GetTokenExpiry returns the TokenExpiry field value if set, zero value otherwise.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetTokenExpiry() string {
	if o == nil || IsNil(o.TokenExpiry) {
		var ret string
		return ret
	}
	return *o.TokenExpiry
}

// GetTokenExpiryOk returns a tuple with the TokenExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) GetTokenExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.TokenExpiry) {
		return nil, false
	}
	return o.TokenExpiry, true
}

// HasTokenExpiry returns a boolean if a field has been set.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) HasTokenExpiry() bool {
	if o != nil && !IsNil(o.TokenExpiry) {
		return true
	}

	return false
}

// SetTokenExpiry gets a reference to the given string and assigns it to the TokenExpiry field.
func (o *V1EnterprisesGet200ResponseEnterprisesInner) SetTokenExpiry(v string) {
	o.TokenExpiry = &v
}

func (o V1EnterprisesGet200ResponseEnterprisesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1EnterprisesGet200ResponseEnterprisesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcceptEula) {
		toSerialize["acceptEula"] = o.AcceptEula
	}
	if !IsNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	if !IsNil(o.AdminEmail) {
		toSerialize["adminEmail"] = o.AdminEmail
	}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloudProvider"] = o.CloudProvider
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.Counts) {
		toSerialize["counts"] = o.Counts
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["creditLimit"] = o.CreditLimit
	}
	if !IsNil(o.Customers) {
		toSerialize["customers"] = o.Customers
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterpriseId"] = o.EnterpriseId
	}
	if !IsNil(o.EulaAgreementDate) {
		toSerialize["eulaAgreementDate"] = o.EulaAgreementDate
	}
	if !IsNil(o.ImpersonationEnabled) {
		toSerialize["impersonationEnabled"] = o.ImpersonationEnabled
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.ParentCompanyName) {
		toSerialize["parentCompanyName"] = o.ParentCompanyName
	}
	if !IsNil(o.ParentEnterpriseId) {
		toSerialize["parentEnterpriseId"] = o.ParentEnterpriseId
	}
	if !IsNil(o.PortalBanner) {
		toSerialize["portalBanner"] = o.PortalBanner
	}
	if !IsNil(o.SmallLogo) {
		toSerialize["smallLogo"] = o.SmallLogo
	}
	if !IsNil(o.TokenExpiry) {
		toSerialize["tokenExpiry"] = o.TokenExpiry
	}
	return toSerialize, nil
}

type NullableV1EnterprisesGet200ResponseEnterprisesInner struct {
	value *V1EnterprisesGet200ResponseEnterprisesInner
	isSet bool
}

func (v NullableV1EnterprisesGet200ResponseEnterprisesInner) Get() *V1EnterprisesGet200ResponseEnterprisesInner {
	return v.value
}

func (v *NullableV1EnterprisesGet200ResponseEnterprisesInner) Set(val *V1EnterprisesGet200ResponseEnterprisesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1EnterprisesGet200ResponseEnterprisesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1EnterprisesGet200ResponseEnterprisesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1EnterprisesGet200ResponseEnterprisesInner(val *V1EnterprisesGet200ResponseEnterprisesInner) *NullableV1EnterprisesGet200ResponseEnterprisesInner {
	return &NullableV1EnterprisesGet200ResponseEnterprisesInner{value: val, isSet: true}
}

func (v NullableV1EnterprisesGet200ResponseEnterprisesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1EnterprisesGet200ResponseEnterprisesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


