/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesBringupPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesBringupPostRequest{}

// V1DevicesBringupPostRequest struct for V1DevicesBringupPostRequest
type V1DevicesBringupPostRequest struct {
	DeviceIds []int64 `json:"deviceIds,omitempty"`
}

// NewV1DevicesBringupPostRequest instantiates a new V1DevicesBringupPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesBringupPostRequest() *V1DevicesBringupPostRequest {
	this := V1DevicesBringupPostRequest{}
	return &this
}

// NewV1DevicesBringupPostRequestWithDefaults instantiates a new V1DevicesBringupPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesBringupPostRequestWithDefaults() *V1DevicesBringupPostRequest {
	this := V1DevicesBringupPostRequest{}
	return &this
}

// GetDeviceIds returns the DeviceIds field value if set, zero value otherwise.
func (o *V1DevicesBringupPostRequest) GetDeviceIds() []int64 {
	if o == nil || IsNil(o.DeviceIds) {
		var ret []int64
		return ret
	}
	return o.DeviceIds
}

// GetDeviceIdsOk returns a tuple with the DeviceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupPostRequest) GetDeviceIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.DeviceIds) {
		return nil, false
	}
	return o.DeviceIds, true
}

// HasDeviceIds returns a boolean if a field has been set.
func (o *V1DevicesBringupPostRequest) HasDeviceIds() bool {
	if o != nil && !IsNil(o.DeviceIds) {
		return true
	}

	return false
}

// SetDeviceIds gets a reference to the given []int64 and assigns it to the DeviceIds field.
func (o *V1DevicesBringupPostRequest) SetDeviceIds(v []int64) {
	o.DeviceIds = v
}

func (o V1DevicesBringupPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesBringupPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceIds) {
		toSerialize["deviceIds"] = o.DeviceIds
	}
	return toSerialize, nil
}

type NullableV1DevicesBringupPostRequest struct {
	value *V1DevicesBringupPostRequest
	isSet bool
}

func (v NullableV1DevicesBringupPostRequest) Get() *V1DevicesBringupPostRequest {
	return v.value
}

func (v *NullableV1DevicesBringupPostRequest) Set(val *V1DevicesBringupPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesBringupPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesBringupPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesBringupPostRequest(val *V1DevicesBringupPostRequest) *NullableV1DevicesBringupPostRequest {
	return &NullableV1DevicesBringupPostRequest{value: val, isSet: true}
}

func (v NullableV1DevicesBringupPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesBringupPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


