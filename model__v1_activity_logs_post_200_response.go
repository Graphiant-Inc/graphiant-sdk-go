/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1ActivityLogsPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ActivityLogsPost200Response{}

// V1ActivityLogsPost200Response struct for V1ActivityLogsPost200Response
type V1ActivityLogsPost200Response struct {
	CursorRef *string `json:"cursorRef,omitempty"`
	Details []V1ActivityLogsPost200ResponseDetailsInner `json:"details,omitempty"`
	FilterEntities *map[string]V1ActivityLogsPost200ResponseFilterEntitiesValue `json:"filterEntities,omitempty"`
	FilterJobTypes []string `json:"filterJobTypes,omitempty"`
	TotalLogs *int64 `json:"totalLogs,omitempty"`
}

// NewV1ActivityLogsPost200Response instantiates a new V1ActivityLogsPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ActivityLogsPost200Response() *V1ActivityLogsPost200Response {
	this := V1ActivityLogsPost200Response{}
	return &this
}

// NewV1ActivityLogsPost200ResponseWithDefaults instantiates a new V1ActivityLogsPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ActivityLogsPost200ResponseWithDefaults() *V1ActivityLogsPost200Response {
	this := V1ActivityLogsPost200Response{}
	return &this
}

// GetCursorRef returns the CursorRef field value if set, zero value otherwise.
func (o *V1ActivityLogsPost200Response) GetCursorRef() string {
	if o == nil || IsNil(o.CursorRef) {
		var ret string
		return ret
	}
	return *o.CursorRef
}

// GetCursorRefOk returns a tuple with the CursorRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPost200Response) GetCursorRefOk() (*string, bool) {
	if o == nil || IsNil(o.CursorRef) {
		return nil, false
	}
	return o.CursorRef, true
}

// HasCursorRef returns a boolean if a field has been set.
func (o *V1ActivityLogsPost200Response) HasCursorRef() bool {
	if o != nil && !IsNil(o.CursorRef) {
		return true
	}

	return false
}

// SetCursorRef gets a reference to the given string and assigns it to the CursorRef field.
func (o *V1ActivityLogsPost200Response) SetCursorRef(v string) {
	o.CursorRef = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *V1ActivityLogsPost200Response) GetDetails() []V1ActivityLogsPost200ResponseDetailsInner {
	if o == nil || IsNil(o.Details) {
		var ret []V1ActivityLogsPost200ResponseDetailsInner
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPost200Response) GetDetailsOk() ([]V1ActivityLogsPost200ResponseDetailsInner, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *V1ActivityLogsPost200Response) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []V1ActivityLogsPost200ResponseDetailsInner and assigns it to the Details field.
func (o *V1ActivityLogsPost200Response) SetDetails(v []V1ActivityLogsPost200ResponseDetailsInner) {
	o.Details = v
}

// GetFilterEntities returns the FilterEntities field value if set, zero value otherwise.
func (o *V1ActivityLogsPost200Response) GetFilterEntities() map[string]V1ActivityLogsPost200ResponseFilterEntitiesValue {
	if o == nil || IsNil(o.FilterEntities) {
		var ret map[string]V1ActivityLogsPost200ResponseFilterEntitiesValue
		return ret
	}
	return *o.FilterEntities
}

// GetFilterEntitiesOk returns a tuple with the FilterEntities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPost200Response) GetFilterEntitiesOk() (*map[string]V1ActivityLogsPost200ResponseFilterEntitiesValue, bool) {
	if o == nil || IsNil(o.FilterEntities) {
		return nil, false
	}
	return o.FilterEntities, true
}

// HasFilterEntities returns a boolean if a field has been set.
func (o *V1ActivityLogsPost200Response) HasFilterEntities() bool {
	if o != nil && !IsNil(o.FilterEntities) {
		return true
	}

	return false
}

// SetFilterEntities gets a reference to the given map[string]V1ActivityLogsPost200ResponseFilterEntitiesValue and assigns it to the FilterEntities field.
func (o *V1ActivityLogsPost200Response) SetFilterEntities(v map[string]V1ActivityLogsPost200ResponseFilterEntitiesValue) {
	o.FilterEntities = &v
}

// GetFilterJobTypes returns the FilterJobTypes field value if set, zero value otherwise.
func (o *V1ActivityLogsPost200Response) GetFilterJobTypes() []string {
	if o == nil || IsNil(o.FilterJobTypes) {
		var ret []string
		return ret
	}
	return o.FilterJobTypes
}

// GetFilterJobTypesOk returns a tuple with the FilterJobTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPost200Response) GetFilterJobTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.FilterJobTypes) {
		return nil, false
	}
	return o.FilterJobTypes, true
}

// HasFilterJobTypes returns a boolean if a field has been set.
func (o *V1ActivityLogsPost200Response) HasFilterJobTypes() bool {
	if o != nil && !IsNil(o.FilterJobTypes) {
		return true
	}

	return false
}

// SetFilterJobTypes gets a reference to the given []string and assigns it to the FilterJobTypes field.
func (o *V1ActivityLogsPost200Response) SetFilterJobTypes(v []string) {
	o.FilterJobTypes = v
}

// GetTotalLogs returns the TotalLogs field value if set, zero value otherwise.
func (o *V1ActivityLogsPost200Response) GetTotalLogs() int64 {
	if o == nil || IsNil(o.TotalLogs) {
		var ret int64
		return ret
	}
	return *o.TotalLogs
}

// GetTotalLogsOk returns a tuple with the TotalLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPost200Response) GetTotalLogsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalLogs) {
		return nil, false
	}
	return o.TotalLogs, true
}

// HasTotalLogs returns a boolean if a field has been set.
func (o *V1ActivityLogsPost200Response) HasTotalLogs() bool {
	if o != nil && !IsNil(o.TotalLogs) {
		return true
	}

	return false
}

// SetTotalLogs gets a reference to the given int64 and assigns it to the TotalLogs field.
func (o *V1ActivityLogsPost200Response) SetTotalLogs(v int64) {
	o.TotalLogs = &v
}

func (o V1ActivityLogsPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ActivityLogsPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CursorRef) {
		toSerialize["cursorRef"] = o.CursorRef
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.FilterEntities) {
		toSerialize["filterEntities"] = o.FilterEntities
	}
	if !IsNil(o.FilterJobTypes) {
		toSerialize["filterJobTypes"] = o.FilterJobTypes
	}
	if !IsNil(o.TotalLogs) {
		toSerialize["totalLogs"] = o.TotalLogs
	}
	return toSerialize, nil
}

type NullableV1ActivityLogsPost200Response struct {
	value *V1ActivityLogsPost200Response
	isSet bool
}

func (v NullableV1ActivityLogsPost200Response) Get() *V1ActivityLogsPost200Response {
	return v.value
}

func (v *NullableV1ActivityLogsPost200Response) Set(val *V1ActivityLogsPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ActivityLogsPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ActivityLogsPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ActivityLogsPost200Response(val *V1ActivityLogsPost200Response) *NullableV1ActivityLogsPost200Response {
	return &NullableV1ActivityLogsPost200Response{value: val, isSet: true}
}

func (v NullableV1ActivityLogsPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ActivityLogsPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


