/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner{}

// V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner struct for V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner
type V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner struct {
	CloudProviderName *string `json:"cloudProviderName,omitempty"`
	DeviceId *int64 `json:"deviceId,omitempty"`
	EnterpriseId *int64 `json:"enterpriseId,omitempty"`
	RegionName *string `json:"regionName,omitempty"`
	ServiceType *int64 `json:"serviceType,omitempty"`
	SiteId *int64 `json:"siteId,omitempty"`
	UsageKbps *float64 `json:"usageKbps,omitempty"`
}

// NewV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner instantiates a new V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner() *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner {
	this := V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner{}
	return &this
}

// NewV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInnerWithDefaults instantiates a new V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInnerWithDefaults() *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner {
	this := V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner{}
	return &this
}

// GetCloudProviderName returns the CloudProviderName field value if set, zero value otherwise.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetCloudProviderName() string {
	if o == nil || IsNil(o.CloudProviderName) {
		var ret string
		return ret
	}
	return *o.CloudProviderName
}

// GetCloudProviderNameOk returns a tuple with the CloudProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetCloudProviderNameOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProviderName) {
		return nil, false
	}
	return o.CloudProviderName, true
}

// HasCloudProviderName returns a boolean if a field has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) HasCloudProviderName() bool {
	if o != nil && !IsNil(o.CloudProviderName) {
		return true
	}

	return false
}

// SetCloudProviderName gets a reference to the given string and assigns it to the CloudProviderName field.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) SetCloudProviderName(v string) {
	o.CloudProviderName = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetEnterpriseId() int64 {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret int64
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given int64 and assigns it to the EnterpriseId field.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) SetEnterpriseId(v int64) {
	o.EnterpriseId = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetRegionName() string {
	if o == nil || IsNil(o.RegionName) {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetRegionNameOk() (*string, bool) {
	if o == nil || IsNil(o.RegionName) {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) HasRegionName() bool {
	if o != nil && !IsNil(o.RegionName) {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) SetRegionName(v string) {
	o.RegionName = &v
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetServiceType() int64 {
	if o == nil || IsNil(o.ServiceType) {
		var ret int64
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetServiceTypeOk() (*int64, bool) {
	if o == nil || IsNil(o.ServiceType) {
		return nil, false
	}
	return o.ServiceType, true
}

// HasServiceType returns a boolean if a field has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) HasServiceType() bool {
	if o != nil && !IsNil(o.ServiceType) {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given int64 and assigns it to the ServiceType field.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) SetServiceType(v int64) {
	o.ServiceType = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetSiteId() int64 {
	if o == nil || IsNil(o.SiteId) {
		var ret int64
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetSiteIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int64 and assigns it to the SiteId field.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) SetSiteId(v int64) {
	o.SiteId = &v
}

// GetUsageKbps returns the UsageKbps field value if set, zero value otherwise.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetUsageKbps() float64 {
	if o == nil || IsNil(o.UsageKbps) {
		var ret float64
		return ret
	}
	return *o.UsageKbps
}

// GetUsageKbpsOk returns a tuple with the UsageKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) GetUsageKbpsOk() (*float64, bool) {
	if o == nil || IsNil(o.UsageKbps) {
		return nil, false
	}
	return o.UsageKbps, true
}

// HasUsageKbps returns a boolean if a field has been set.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) HasUsageKbps() bool {
	if o != nil && !IsNil(o.UsageKbps) {
		return true
	}

	return false
}

// SetUsageKbps gets a reference to the given float64 and assigns it to the UsageKbps field.
func (o *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) SetUsageKbps(v float64) {
	o.UsageKbps = &v
}

func (o V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudProviderName) {
		toSerialize["cloudProviderName"] = o.CloudProviderName
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterpriseId"] = o.EnterpriseId
	}
	if !IsNil(o.RegionName) {
		toSerialize["regionName"] = o.RegionName
	}
	if !IsNil(o.ServiceType) {
		toSerialize["serviceType"] = o.ServiceType
	}
	if !IsNil(o.SiteId) {
		toSerialize["siteId"] = o.SiteId
	}
	if !IsNil(o.UsageKbps) {
		toSerialize["usageKbps"] = o.UsageKbps
	}
	return toSerialize, nil
}

type NullableV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner struct {
	value *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner
	isSet bool
}

func (v NullableV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) Get() *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner {
	return v.value
}

func (v *NullableV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) Set(val *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner(val *V1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) *NullableV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner {
	return &NullableV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner{value: val, isSet: true}
}

func (v NullableV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BwtrackerEnterpriseCsvPost200ResponseBwusageCsvDetailsBwusageCsvRecordInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


