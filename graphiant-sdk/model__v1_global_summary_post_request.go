/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GlobalSummaryPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GlobalSummaryPostRequest{}

// V1GlobalSummaryPostRequest struct for V1GlobalSummaryPostRequest
type V1GlobalSummaryPostRequest struct {
	IpfixExportedType *bool `json:"ipfixExportedType,omitempty"`
	PrefixSetType *bool `json:"prefixSetType,omitempty"`
	RoutingPolicyType *bool `json:"routingPolicyType,omitempty"`
	SnmpType *bool `json:"snmpType,omitempty"`
	SyslogServerType *bool `json:"syslogServerType,omitempty"`
	TrafficPolicyType *bool `json:"trafficPolicyType,omitempty"`
}

// NewV1GlobalSummaryPostRequest instantiates a new V1GlobalSummaryPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GlobalSummaryPostRequest() *V1GlobalSummaryPostRequest {
	this := V1GlobalSummaryPostRequest{}
	return &this
}

// NewV1GlobalSummaryPostRequestWithDefaults instantiates a new V1GlobalSummaryPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GlobalSummaryPostRequestWithDefaults() *V1GlobalSummaryPostRequest {
	this := V1GlobalSummaryPostRequest{}
	return &this
}

// GetIpfixExportedType returns the IpfixExportedType field value if set, zero value otherwise.
func (o *V1GlobalSummaryPostRequest) GetIpfixExportedType() bool {
	if o == nil || IsNil(o.IpfixExportedType) {
		var ret bool
		return ret
	}
	return *o.IpfixExportedType
}

// GetIpfixExportedTypeOk returns a tuple with the IpfixExportedType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalSummaryPostRequest) GetIpfixExportedTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.IpfixExportedType) {
		return nil, false
	}
	return o.IpfixExportedType, true
}

// HasIpfixExportedType returns a boolean if a field has been set.
func (o *V1GlobalSummaryPostRequest) HasIpfixExportedType() bool {
	if o != nil && !IsNil(o.IpfixExportedType) {
		return true
	}

	return false
}

// SetIpfixExportedType gets a reference to the given bool and assigns it to the IpfixExportedType field.
func (o *V1GlobalSummaryPostRequest) SetIpfixExportedType(v bool) {
	o.IpfixExportedType = &v
}

// GetPrefixSetType returns the PrefixSetType field value if set, zero value otherwise.
func (o *V1GlobalSummaryPostRequest) GetPrefixSetType() bool {
	if o == nil || IsNil(o.PrefixSetType) {
		var ret bool
		return ret
	}
	return *o.PrefixSetType
}

// GetPrefixSetTypeOk returns a tuple with the PrefixSetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalSummaryPostRequest) GetPrefixSetTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.PrefixSetType) {
		return nil, false
	}
	return o.PrefixSetType, true
}

// HasPrefixSetType returns a boolean if a field has been set.
func (o *V1GlobalSummaryPostRequest) HasPrefixSetType() bool {
	if o != nil && !IsNil(o.PrefixSetType) {
		return true
	}

	return false
}

// SetPrefixSetType gets a reference to the given bool and assigns it to the PrefixSetType field.
func (o *V1GlobalSummaryPostRequest) SetPrefixSetType(v bool) {
	o.PrefixSetType = &v
}

// GetRoutingPolicyType returns the RoutingPolicyType field value if set, zero value otherwise.
func (o *V1GlobalSummaryPostRequest) GetRoutingPolicyType() bool {
	if o == nil || IsNil(o.RoutingPolicyType) {
		var ret bool
		return ret
	}
	return *o.RoutingPolicyType
}

// GetRoutingPolicyTypeOk returns a tuple with the RoutingPolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalSummaryPostRequest) GetRoutingPolicyTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.RoutingPolicyType) {
		return nil, false
	}
	return o.RoutingPolicyType, true
}

// HasRoutingPolicyType returns a boolean if a field has been set.
func (o *V1GlobalSummaryPostRequest) HasRoutingPolicyType() bool {
	if o != nil && !IsNil(o.RoutingPolicyType) {
		return true
	}

	return false
}

// SetRoutingPolicyType gets a reference to the given bool and assigns it to the RoutingPolicyType field.
func (o *V1GlobalSummaryPostRequest) SetRoutingPolicyType(v bool) {
	o.RoutingPolicyType = &v
}

// GetSnmpType returns the SnmpType field value if set, zero value otherwise.
func (o *V1GlobalSummaryPostRequest) GetSnmpType() bool {
	if o == nil || IsNil(o.SnmpType) {
		var ret bool
		return ret
	}
	return *o.SnmpType
}

// GetSnmpTypeOk returns a tuple with the SnmpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalSummaryPostRequest) GetSnmpTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.SnmpType) {
		return nil, false
	}
	return o.SnmpType, true
}

// HasSnmpType returns a boolean if a field has been set.
func (o *V1GlobalSummaryPostRequest) HasSnmpType() bool {
	if o != nil && !IsNil(o.SnmpType) {
		return true
	}

	return false
}

// SetSnmpType gets a reference to the given bool and assigns it to the SnmpType field.
func (o *V1GlobalSummaryPostRequest) SetSnmpType(v bool) {
	o.SnmpType = &v
}

// GetSyslogServerType returns the SyslogServerType field value if set, zero value otherwise.
func (o *V1GlobalSummaryPostRequest) GetSyslogServerType() bool {
	if o == nil || IsNil(o.SyslogServerType) {
		var ret bool
		return ret
	}
	return *o.SyslogServerType
}

// GetSyslogServerTypeOk returns a tuple with the SyslogServerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalSummaryPostRequest) GetSyslogServerTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.SyslogServerType) {
		return nil, false
	}
	return o.SyslogServerType, true
}

// HasSyslogServerType returns a boolean if a field has been set.
func (o *V1GlobalSummaryPostRequest) HasSyslogServerType() bool {
	if o != nil && !IsNil(o.SyslogServerType) {
		return true
	}

	return false
}

// SetSyslogServerType gets a reference to the given bool and assigns it to the SyslogServerType field.
func (o *V1GlobalSummaryPostRequest) SetSyslogServerType(v bool) {
	o.SyslogServerType = &v
}

// GetTrafficPolicyType returns the TrafficPolicyType field value if set, zero value otherwise.
func (o *V1GlobalSummaryPostRequest) GetTrafficPolicyType() bool {
	if o == nil || IsNil(o.TrafficPolicyType) {
		var ret bool
		return ret
	}
	return *o.TrafficPolicyType
}

// GetTrafficPolicyTypeOk returns a tuple with the TrafficPolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalSummaryPostRequest) GetTrafficPolicyTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.TrafficPolicyType) {
		return nil, false
	}
	return o.TrafficPolicyType, true
}

// HasTrafficPolicyType returns a boolean if a field has been set.
func (o *V1GlobalSummaryPostRequest) HasTrafficPolicyType() bool {
	if o != nil && !IsNil(o.TrafficPolicyType) {
		return true
	}

	return false
}

// SetTrafficPolicyType gets a reference to the given bool and assigns it to the TrafficPolicyType field.
func (o *V1GlobalSummaryPostRequest) SetTrafficPolicyType(v bool) {
	o.TrafficPolicyType = &v
}

func (o V1GlobalSummaryPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GlobalSummaryPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpfixExportedType) {
		toSerialize["ipfixExportedType"] = o.IpfixExportedType
	}
	if !IsNil(o.PrefixSetType) {
		toSerialize["prefixSetType"] = o.PrefixSetType
	}
	if !IsNil(o.RoutingPolicyType) {
		toSerialize["routingPolicyType"] = o.RoutingPolicyType
	}
	if !IsNil(o.SnmpType) {
		toSerialize["snmpType"] = o.SnmpType
	}
	if !IsNil(o.SyslogServerType) {
		toSerialize["syslogServerType"] = o.SyslogServerType
	}
	if !IsNil(o.TrafficPolicyType) {
		toSerialize["trafficPolicyType"] = o.TrafficPolicyType
	}
	return toSerialize, nil
}

type NullableV1GlobalSummaryPostRequest struct {
	value *V1GlobalSummaryPostRequest
	isSet bool
}

func (v NullableV1GlobalSummaryPostRequest) Get() *V1GlobalSummaryPostRequest {
	return v.value
}

func (v *NullableV1GlobalSummaryPostRequest) Set(val *V1GlobalSummaryPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GlobalSummaryPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GlobalSummaryPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GlobalSummaryPostRequest(val *V1GlobalSummaryPostRequest) *NullableV1GlobalSummaryPostRequest {
	return &NullableV1GlobalSummaryPostRequest{value: val, isSet: true}
}

func (v NullableV1GlobalSummaryPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GlobalSummaryPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


