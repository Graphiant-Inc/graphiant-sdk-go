/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner{}

// V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner struct for V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner
type V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner struct {
	Content *string `json:"content,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner instantiates a new V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner() *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner {
	this := V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner{}
	return &this
}

// NewV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInnerWithDefaults instantiates a new V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInnerWithDefaults() *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner {
	this := V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) GetContent() string {
	if o == nil || IsNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) GetContentOk() (*string, bool) {
	if o == nil || IsNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) SetContent(v string) {
	o.Content = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) SetTitle(v string) {
	o.Title = &v
}

func (o V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Content) {
		toSerialize["content"] = o.Content
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner struct {
	value *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner
	isSet bool
}

func (v NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) Get() *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner {
	return v.value
}

func (v *NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) Set(val *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner(val *V1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) *NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner {
	return &NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner{value: val, isSet: true}
}

func (v NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SoftwareGcsreleaseUploadNotesPostRequestDetailsCategoryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


