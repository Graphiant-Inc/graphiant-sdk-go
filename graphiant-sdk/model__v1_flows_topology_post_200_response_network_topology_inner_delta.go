/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta{}

// V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta struct for V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta
type V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta struct {
	EdgesAdded []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner `json:"edgesAdded,omitempty"`
	EdgesDeleted []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner `json:"edgesDeleted,omitempty"`
	NodesAdded []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner `json:"nodesAdded,omitempty"`
	NodesDeleted []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner `json:"nodesDeleted,omitempty"`
}

// NewV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta instantiates a new V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta() *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta {
	this := V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta{}
	return &this
}

// NewV1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaWithDefaults instantiates a new V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaWithDefaults() *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta {
	this := V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta{}
	return &this
}

// GetEdgesAdded returns the EdgesAdded field value if set, zero value otherwise.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) GetEdgesAdded() []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner {
	if o == nil || IsNil(o.EdgesAdded) {
		var ret []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner
		return ret
	}
	return o.EdgesAdded
}

// GetEdgesAddedOk returns a tuple with the EdgesAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) GetEdgesAddedOk() ([]V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner, bool) {
	if o == nil || IsNil(o.EdgesAdded) {
		return nil, false
	}
	return o.EdgesAdded, true
}

// HasEdgesAdded returns a boolean if a field has been set.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) HasEdgesAdded() bool {
	if o != nil && !IsNil(o.EdgesAdded) {
		return true
	}

	return false
}

// SetEdgesAdded gets a reference to the given []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner and assigns it to the EdgesAdded field.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) SetEdgesAdded(v []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner) {
	o.EdgesAdded = v
}

// GetEdgesDeleted returns the EdgesDeleted field value if set, zero value otherwise.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) GetEdgesDeleted() []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner {
	if o == nil || IsNil(o.EdgesDeleted) {
		var ret []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner
		return ret
	}
	return o.EdgesDeleted
}

// GetEdgesDeletedOk returns a tuple with the EdgesDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) GetEdgesDeletedOk() ([]V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner, bool) {
	if o == nil || IsNil(o.EdgesDeleted) {
		return nil, false
	}
	return o.EdgesDeleted, true
}

// HasEdgesDeleted returns a boolean if a field has been set.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) HasEdgesDeleted() bool {
	if o != nil && !IsNil(o.EdgesDeleted) {
		return true
	}

	return false
}

// SetEdgesDeleted gets a reference to the given []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner and assigns it to the EdgesDeleted field.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) SetEdgesDeleted(v []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaEdgesAddedInner) {
	o.EdgesDeleted = v
}

// GetNodesAdded returns the NodesAdded field value if set, zero value otherwise.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) GetNodesAdded() []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner {
	if o == nil || IsNil(o.NodesAdded) {
		var ret []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner
		return ret
	}
	return o.NodesAdded
}

// GetNodesAddedOk returns a tuple with the NodesAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) GetNodesAddedOk() ([]V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner, bool) {
	if o == nil || IsNil(o.NodesAdded) {
		return nil, false
	}
	return o.NodesAdded, true
}

// HasNodesAdded returns a boolean if a field has been set.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) HasNodesAdded() bool {
	if o != nil && !IsNil(o.NodesAdded) {
		return true
	}

	return false
}

// SetNodesAdded gets a reference to the given []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner and assigns it to the NodesAdded field.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) SetNodesAdded(v []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner) {
	o.NodesAdded = v
}

// GetNodesDeleted returns the NodesDeleted field value if set, zero value otherwise.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) GetNodesDeleted() []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner {
	if o == nil || IsNil(o.NodesDeleted) {
		var ret []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner
		return ret
	}
	return o.NodesDeleted
}

// GetNodesDeletedOk returns a tuple with the NodesDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) GetNodesDeletedOk() ([]V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner, bool) {
	if o == nil || IsNil(o.NodesDeleted) {
		return nil, false
	}
	return o.NodesDeleted, true
}

// HasNodesDeleted returns a boolean if a field has been set.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) HasNodesDeleted() bool {
	if o != nil && !IsNil(o.NodesDeleted) {
		return true
	}

	return false
}

// SetNodesDeleted gets a reference to the given []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner and assigns it to the NodesDeleted field.
func (o *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) SetNodesDeleted(v []V1FlowsTopologyPost200ResponseNetworkTopologyInnerDeltaNodesAddedInner) {
	o.NodesDeleted = v
}

func (o V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EdgesAdded) {
		toSerialize["edgesAdded"] = o.EdgesAdded
	}
	if !IsNil(o.EdgesDeleted) {
		toSerialize["edgesDeleted"] = o.EdgesDeleted
	}
	if !IsNil(o.NodesAdded) {
		toSerialize["nodesAdded"] = o.NodesAdded
	}
	if !IsNil(o.NodesDeleted) {
		toSerialize["nodesDeleted"] = o.NodesDeleted
	}
	return toSerialize, nil
}

type NullableV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta struct {
	value *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta
	isSet bool
}

func (v NullableV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) Get() *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta {
	return v.value
}

func (v *NullableV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) Set(val *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) {
	v.value = val
	v.isSet = true
}

func (v NullableV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) IsSet() bool {
	return v.isSet
}

func (v *NullableV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta(val *V1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) *NullableV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta {
	return &NullableV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta{value: val, isSet: true}
}

func (v NullableV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1FlowsTopologyPost200ResponseNetworkTopologyInnerDelta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


