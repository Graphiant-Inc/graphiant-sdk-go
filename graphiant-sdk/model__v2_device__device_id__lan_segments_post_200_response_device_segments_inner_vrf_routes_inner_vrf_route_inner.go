/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner{}

// V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner struct for V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner
type V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner struct {
	Ipv4Routes *int64 `json:"ipv4Routes,omitempty"`
	Ipv6Routes *int64 `json:"ipv6Routes,omitempty"`
	TotalRoutes *int64 `json:"totalRoutes,omitempty"`
	VrfName *string `json:"vrfName,omitempty"`
}

// NewV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner instantiates a new V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner() *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner {
	this := V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner{}
	return &this
}

// NewV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInnerWithDefaults instantiates a new V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInnerWithDefaults() *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner {
	this := V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner{}
	return &this
}

// GetIpv4Routes returns the Ipv4Routes field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) GetIpv4Routes() int64 {
	if o == nil || IsNil(o.Ipv4Routes) {
		var ret int64
		return ret
	}
	return *o.Ipv4Routes
}

// GetIpv4RoutesOk returns a tuple with the Ipv4Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) GetIpv4RoutesOk() (*int64, bool) {
	if o == nil || IsNil(o.Ipv4Routes) {
		return nil, false
	}
	return o.Ipv4Routes, true
}

// HasIpv4Routes returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) HasIpv4Routes() bool {
	if o != nil && !IsNil(o.Ipv4Routes) {
		return true
	}

	return false
}

// SetIpv4Routes gets a reference to the given int64 and assigns it to the Ipv4Routes field.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) SetIpv4Routes(v int64) {
	o.Ipv4Routes = &v
}

// GetIpv6Routes returns the Ipv6Routes field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) GetIpv6Routes() int64 {
	if o == nil || IsNil(o.Ipv6Routes) {
		var ret int64
		return ret
	}
	return *o.Ipv6Routes
}

// GetIpv6RoutesOk returns a tuple with the Ipv6Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) GetIpv6RoutesOk() (*int64, bool) {
	if o == nil || IsNil(o.Ipv6Routes) {
		return nil, false
	}
	return o.Ipv6Routes, true
}

// HasIpv6Routes returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) HasIpv6Routes() bool {
	if o != nil && !IsNil(o.Ipv6Routes) {
		return true
	}

	return false
}

// SetIpv6Routes gets a reference to the given int64 and assigns it to the Ipv6Routes field.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) SetIpv6Routes(v int64) {
	o.Ipv6Routes = &v
}

// GetTotalRoutes returns the TotalRoutes field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) GetTotalRoutes() int64 {
	if o == nil || IsNil(o.TotalRoutes) {
		var ret int64
		return ret
	}
	return *o.TotalRoutes
}

// GetTotalRoutesOk returns a tuple with the TotalRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) GetTotalRoutesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRoutes) {
		return nil, false
	}
	return o.TotalRoutes, true
}

// HasTotalRoutes returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) HasTotalRoutes() bool {
	if o != nil && !IsNil(o.TotalRoutes) {
		return true
	}

	return false
}

// SetTotalRoutes gets a reference to the given int64 and assigns it to the TotalRoutes field.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) SetTotalRoutes(v int64) {
	o.TotalRoutes = &v
}

// GetVrfName returns the VrfName field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) GetVrfName() string {
	if o == nil || IsNil(o.VrfName) {
		var ret string
		return ret
	}
	return *o.VrfName
}

// GetVrfNameOk returns a tuple with the VrfName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) GetVrfNameOk() (*string, bool) {
	if o == nil || IsNil(o.VrfName) {
		return nil, false
	}
	return o.VrfName, true
}

// HasVrfName returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) HasVrfName() bool {
	if o != nil && !IsNil(o.VrfName) {
		return true
	}

	return false
}

// SetVrfName gets a reference to the given string and assigns it to the VrfName field.
func (o *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) SetVrfName(v string) {
	o.VrfName = &v
}

func (o V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv4Routes) {
		toSerialize["ipv4Routes"] = o.Ipv4Routes
	}
	if !IsNil(o.Ipv6Routes) {
		toSerialize["ipv6Routes"] = o.Ipv6Routes
	}
	if !IsNil(o.TotalRoutes) {
		toSerialize["totalRoutes"] = o.TotalRoutes
	}
	if !IsNil(o.VrfName) {
		toSerialize["vrfName"] = o.VrfName
	}
	return toSerialize, nil
}

type NullableV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner struct {
	value *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner
	isSet bool
}

func (v NullableV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) Get() *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner {
	return v.value
}

func (v *NullableV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) Set(val *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner(val *V2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) *NullableV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner {
	return &NullableV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner{value: val, isSet: true}
}

func (v NullableV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2DeviceDeviceIdLanSegmentsPost200ResponseDeviceSegmentsInnerVrfRoutesInnerVrfRouteInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


