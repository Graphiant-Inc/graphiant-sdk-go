/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1FlowsTopologyPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1FlowsTopologyPostRequest{}

// V1FlowsTopologyPostRequest struct for V1FlowsTopologyPostRequest
type V1FlowsTopologyPostRequest struct {
	AppSelector *V1FlowsTopologyPostRequestAppSelector `json:"appSelector,omitempty"`
	DeviceId *int64 `json:"deviceId,omitempty"`
	TimeWindow *V2NotificationlistPostRequestTimeWindow `json:"timeWindow,omitempty"`
}

// NewV1FlowsTopologyPostRequest instantiates a new V1FlowsTopologyPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1FlowsTopologyPostRequest() *V1FlowsTopologyPostRequest {
	this := V1FlowsTopologyPostRequest{}
	return &this
}

// NewV1FlowsTopologyPostRequestWithDefaults instantiates a new V1FlowsTopologyPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1FlowsTopologyPostRequestWithDefaults() *V1FlowsTopologyPostRequest {
	this := V1FlowsTopologyPostRequest{}
	return &this
}

// GetAppSelector returns the AppSelector field value if set, zero value otherwise.
func (o *V1FlowsTopologyPostRequest) GetAppSelector() V1FlowsTopologyPostRequestAppSelector {
	if o == nil || IsNil(o.AppSelector) {
		var ret V1FlowsTopologyPostRequestAppSelector
		return ret
	}
	return *o.AppSelector
}

// GetAppSelectorOk returns a tuple with the AppSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsTopologyPostRequest) GetAppSelectorOk() (*V1FlowsTopologyPostRequestAppSelector, bool) {
	if o == nil || IsNil(o.AppSelector) {
		return nil, false
	}
	return o.AppSelector, true
}

// HasAppSelector returns a boolean if a field has been set.
func (o *V1FlowsTopologyPostRequest) HasAppSelector() bool {
	if o != nil && !IsNil(o.AppSelector) {
		return true
	}

	return false
}

// SetAppSelector gets a reference to the given V1FlowsTopologyPostRequestAppSelector and assigns it to the AppSelector field.
func (o *V1FlowsTopologyPostRequest) SetAppSelector(v V1FlowsTopologyPostRequestAppSelector) {
	o.AppSelector = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1FlowsTopologyPostRequest) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsTopologyPostRequest) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1FlowsTopologyPostRequest) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1FlowsTopologyPostRequest) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetTimeWindow returns the TimeWindow field value if set, zero value otherwise.
func (o *V1FlowsTopologyPostRequest) GetTimeWindow() V2NotificationlistPostRequestTimeWindow {
	if o == nil || IsNil(o.TimeWindow) {
		var ret V2NotificationlistPostRequestTimeWindow
		return ret
	}
	return *o.TimeWindow
}

// GetTimeWindowOk returns a tuple with the TimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsTopologyPostRequest) GetTimeWindowOk() (*V2NotificationlistPostRequestTimeWindow, bool) {
	if o == nil || IsNil(o.TimeWindow) {
		return nil, false
	}
	return o.TimeWindow, true
}

// HasTimeWindow returns a boolean if a field has been set.
func (o *V1FlowsTopologyPostRequest) HasTimeWindow() bool {
	if o != nil && !IsNil(o.TimeWindow) {
		return true
	}

	return false
}

// SetTimeWindow gets a reference to the given V2NotificationlistPostRequestTimeWindow and assigns it to the TimeWindow field.
func (o *V1FlowsTopologyPostRequest) SetTimeWindow(v V2NotificationlistPostRequestTimeWindow) {
	o.TimeWindow = &v
}

func (o V1FlowsTopologyPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1FlowsTopologyPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppSelector) {
		toSerialize["appSelector"] = o.AppSelector
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.TimeWindow) {
		toSerialize["timeWindow"] = o.TimeWindow
	}
	return toSerialize, nil
}

type NullableV1FlowsTopologyPostRequest struct {
	value *V1FlowsTopologyPostRequest
	isSet bool
}

func (v NullableV1FlowsTopologyPostRequest) Get() *V1FlowsTopologyPostRequest {
	return v.value
}

func (v *NullableV1FlowsTopologyPostRequest) Set(val *V1FlowsTopologyPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1FlowsTopologyPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1FlowsTopologyPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1FlowsTopologyPostRequest(val *V1FlowsTopologyPostRequest) *NullableV1FlowsTopologyPostRequest {
	return &NullableV1FlowsTopologyPostRequest{value: val, isSet: true}
}

func (v NullableV1FlowsTopologyPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1FlowsTopologyPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


