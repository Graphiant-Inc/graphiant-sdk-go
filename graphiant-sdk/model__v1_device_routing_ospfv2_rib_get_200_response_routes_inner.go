/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner{}

// V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner struct for V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner
type V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner struct {
	IpPrefix *string `json:"ipPrefix,omitempty"`
	Path []V1DeviceRoutingOspfv2RibGet200ResponseRoutesInnerPathInner `json:"path,omitempty"`
}

// NewV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner instantiates a new V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner() *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner {
	this := V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner{}
	return &this
}

// NewV1DeviceRoutingOspfv2RibGet200ResponseRoutesInnerWithDefaults instantiates a new V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeviceRoutingOspfv2RibGet200ResponseRoutesInnerWithDefaults() *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner {
	this := V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner{}
	return &this
}

// GetIpPrefix returns the IpPrefix field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) GetIpPrefix() string {
	if o == nil || IsNil(o.IpPrefix) {
		var ret string
		return ret
	}
	return *o.IpPrefix
}

// GetIpPrefixOk returns a tuple with the IpPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) GetIpPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.IpPrefix) {
		return nil, false
	}
	return o.IpPrefix, true
}

// HasIpPrefix returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) HasIpPrefix() bool {
	if o != nil && !IsNil(o.IpPrefix) {
		return true
	}

	return false
}

// SetIpPrefix gets a reference to the given string and assigns it to the IpPrefix field.
func (o *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) SetIpPrefix(v string) {
	o.IpPrefix = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) GetPath() []V1DeviceRoutingOspfv2RibGet200ResponseRoutesInnerPathInner {
	if o == nil || IsNil(o.Path) {
		var ret []V1DeviceRoutingOspfv2RibGet200ResponseRoutesInnerPathInner
		return ret
	}
	return o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) GetPathOk() ([]V1DeviceRoutingOspfv2RibGet200ResponseRoutesInnerPathInner, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given []V1DeviceRoutingOspfv2RibGet200ResponseRoutesInnerPathInner and assigns it to the Path field.
func (o *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) SetPath(v []V1DeviceRoutingOspfv2RibGet200ResponseRoutesInnerPathInner) {
	o.Path = v
}

func (o V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpPrefix) {
		toSerialize["ipPrefix"] = o.IpPrefix
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	return toSerialize, nil
}

type NullableV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner struct {
	value *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner
	isSet bool
}

func (v NullableV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) Get() *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner {
	return v.value
}

func (v *NullableV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) Set(val *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner(val *V1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) *NullableV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner {
	return &NullableV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner{value: val, isSet: true}
}

func (v NullableV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeviceRoutingOspfv2RibGet200ResponseRoutesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


