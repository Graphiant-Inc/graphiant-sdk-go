/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor{}

// V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor struct for V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor
type V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor struct {
	Cost *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost `json:"Cost,omitempty"`
	OspfCost *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost `json:"ospfCost,omitempty"`
	PeerHostname *string `json:"peerHostname,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor{}
	return &this
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) GetCost() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost {
	if o == nil || IsNil(o.Cost) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) GetCostOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost and assigns it to the Cost field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) SetCost(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost) {
	o.Cost = &v
}

// GetOspfCost returns the OspfCost field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) GetOspfCost() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost {
	if o == nil || IsNil(o.OspfCost) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost
		return ret
	}
	return *o.OspfCost
}

// GetOspfCostOk returns a tuple with the OspfCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) GetOspfCostOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost, bool) {
	if o == nil || IsNil(o.OspfCost) {
		return nil, false
	}
	return o.OspfCost, true
}

// HasOspfCost returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) HasOspfCost() bool {
	if o != nil && !IsNil(o.OspfCost) {
		return true
	}

	return false
}

// SetOspfCost gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost and assigns it to the OspfCost field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) SetOspfCost(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost) {
	o.OspfCost = &v
}

// GetPeerHostname returns the PeerHostname field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) GetPeerHostname() string {
	if o == nil || IsNil(o.PeerHostname) {
		var ret string
		return ret
	}
	return *o.PeerHostname
}

// GetPeerHostnameOk returns a tuple with the PeerHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) GetPeerHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.PeerHostname) {
		return nil, false
	}
	return o.PeerHostname, true
}

// HasPeerHostname returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) HasPeerHostname() bool {
	if o != nil && !IsNil(o.PeerHostname) {
		return true
	}

	return false
}

// SetPeerHostname gets a reference to the given string and assigns it to the PeerHostname field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) SetPeerHostname(v string) {
	o.PeerHostname = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) SetType(v string) {
	o.Type = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cost) {
		toSerialize["Cost"] = o.Cost
	}
	if !IsNil(o.OspfCost) {
		toSerialize["ospfCost"] = o.OspfCost
	}
	if !IsNil(o.PeerHostname) {
		toSerialize["peerHostname"] = o.PeerHostname
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) Get() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) Set(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


