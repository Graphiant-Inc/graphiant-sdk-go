/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn{}

// V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn struct for V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn
type V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn struct {
	DestinationAddress *string `json:"destinationAddress,omitempty"`
	IkeInitiator *bool `json:"ikeInitiator,omitempty"`
	IpsecLabel *string `json:"ipsecLabel,omitempty"`
	Lan *string `json:"lan,omitempty"`
	LocalAddressV4 *string `json:"localAddressV4,omitempty"`
	LocalAddressV6 *string `json:"localAddressV6,omitempty"`
	LocalCircuit *string `json:"localCircuit,omitempty"`
	LocalIkePeerIdentity *string `json:"localIkePeerIdentity,omitempty"`
	Mtu *int32 `json:"mtu,omitempty"`
	Name *string `json:"name,omitempty"`
	PresharedKey *string `json:"presharedKey,omitempty"`
	RemoteAddressV4 *string `json:"remoteAddressV4,omitempty"`
	RemoteAddressV6 *string `json:"remoteAddressV6,omitempty"`
	RemoteIkePeerIdentity *string `json:"remoteIkePeerIdentity,omitempty"`
	Routing *V1GatewaysPutRequestDetailsIpsecGatewayRouting `json:"routing,omitempty"`
	TcpMss *int32 `json:"tcpMss,omitempty"`
	VpnProfile *string `json:"vpnProfile,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn instantiates a new V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn() *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn {
	this := V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpnWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpnWithDefaults() *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn {
	this := V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn{}
	return &this
}

// GetDestinationAddress returns the DestinationAddress field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetDestinationAddress() string {
	if o == nil || IsNil(o.DestinationAddress) {
		var ret string
		return ret
	}
	return *o.DestinationAddress
}

// GetDestinationAddressOk returns a tuple with the DestinationAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetDestinationAddressOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationAddress) {
		return nil, false
	}
	return o.DestinationAddress, true
}

// HasDestinationAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasDestinationAddress() bool {
	if o != nil && !IsNil(o.DestinationAddress) {
		return true
	}

	return false
}

// SetDestinationAddress gets a reference to the given string and assigns it to the DestinationAddress field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetDestinationAddress(v string) {
	o.DestinationAddress = &v
}

// GetIkeInitiator returns the IkeInitiator field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetIkeInitiator() bool {
	if o == nil || IsNil(o.IkeInitiator) {
		var ret bool
		return ret
	}
	return *o.IkeInitiator
}

// GetIkeInitiatorOk returns a tuple with the IkeInitiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetIkeInitiatorOk() (*bool, bool) {
	if o == nil || IsNil(o.IkeInitiator) {
		return nil, false
	}
	return o.IkeInitiator, true
}

// HasIkeInitiator returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasIkeInitiator() bool {
	if o != nil && !IsNil(o.IkeInitiator) {
		return true
	}

	return false
}

// SetIkeInitiator gets a reference to the given bool and assigns it to the IkeInitiator field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetIkeInitiator(v bool) {
	o.IkeInitiator = &v
}

// GetIpsecLabel returns the IpsecLabel field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetIpsecLabel() string {
	if o == nil || IsNil(o.IpsecLabel) {
		var ret string
		return ret
	}
	return *o.IpsecLabel
}

// GetIpsecLabelOk returns a tuple with the IpsecLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetIpsecLabelOk() (*string, bool) {
	if o == nil || IsNil(o.IpsecLabel) {
		return nil, false
	}
	return o.IpsecLabel, true
}

// HasIpsecLabel returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasIpsecLabel() bool {
	if o != nil && !IsNil(o.IpsecLabel) {
		return true
	}

	return false
}

// SetIpsecLabel gets a reference to the given string and assigns it to the IpsecLabel field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetIpsecLabel(v string) {
	o.IpsecLabel = &v
}

// GetLan returns the Lan field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetLan() string {
	if o == nil || IsNil(o.Lan) {
		var ret string
		return ret
	}
	return *o.Lan
}

// GetLanOk returns a tuple with the Lan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetLanOk() (*string, bool) {
	if o == nil || IsNil(o.Lan) {
		return nil, false
	}
	return o.Lan, true
}

// HasLan returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasLan() bool {
	if o != nil && !IsNil(o.Lan) {
		return true
	}

	return false
}

// SetLan gets a reference to the given string and assigns it to the Lan field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetLan(v string) {
	o.Lan = &v
}

// GetLocalAddressV4 returns the LocalAddressV4 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetLocalAddressV4() string {
	if o == nil || IsNil(o.LocalAddressV4) {
		var ret string
		return ret
	}
	return *o.LocalAddressV4
}

// GetLocalAddressV4Ok returns a tuple with the LocalAddressV4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetLocalAddressV4Ok() (*string, bool) {
	if o == nil || IsNil(o.LocalAddressV4) {
		return nil, false
	}
	return o.LocalAddressV4, true
}

// HasLocalAddressV4 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasLocalAddressV4() bool {
	if o != nil && !IsNil(o.LocalAddressV4) {
		return true
	}

	return false
}

// SetLocalAddressV4 gets a reference to the given string and assigns it to the LocalAddressV4 field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetLocalAddressV4(v string) {
	o.LocalAddressV4 = &v
}

// GetLocalAddressV6 returns the LocalAddressV6 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetLocalAddressV6() string {
	if o == nil || IsNil(o.LocalAddressV6) {
		var ret string
		return ret
	}
	return *o.LocalAddressV6
}

// GetLocalAddressV6Ok returns a tuple with the LocalAddressV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetLocalAddressV6Ok() (*string, bool) {
	if o == nil || IsNil(o.LocalAddressV6) {
		return nil, false
	}
	return o.LocalAddressV6, true
}

// HasLocalAddressV6 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasLocalAddressV6() bool {
	if o != nil && !IsNil(o.LocalAddressV6) {
		return true
	}

	return false
}

// SetLocalAddressV6 gets a reference to the given string and assigns it to the LocalAddressV6 field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetLocalAddressV6(v string) {
	o.LocalAddressV6 = &v
}

// GetLocalCircuit returns the LocalCircuit field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetLocalCircuit() string {
	if o == nil || IsNil(o.LocalCircuit) {
		var ret string
		return ret
	}
	return *o.LocalCircuit
}

// GetLocalCircuitOk returns a tuple with the LocalCircuit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetLocalCircuitOk() (*string, bool) {
	if o == nil || IsNil(o.LocalCircuit) {
		return nil, false
	}
	return o.LocalCircuit, true
}

// HasLocalCircuit returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasLocalCircuit() bool {
	if o != nil && !IsNil(o.LocalCircuit) {
		return true
	}

	return false
}

// SetLocalCircuit gets a reference to the given string and assigns it to the LocalCircuit field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetLocalCircuit(v string) {
	o.LocalCircuit = &v
}

// GetLocalIkePeerIdentity returns the LocalIkePeerIdentity field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetLocalIkePeerIdentity() string {
	if o == nil || IsNil(o.LocalIkePeerIdentity) {
		var ret string
		return ret
	}
	return *o.LocalIkePeerIdentity
}

// GetLocalIkePeerIdentityOk returns a tuple with the LocalIkePeerIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetLocalIkePeerIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.LocalIkePeerIdentity) {
		return nil, false
	}
	return o.LocalIkePeerIdentity, true
}

// HasLocalIkePeerIdentity returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasLocalIkePeerIdentity() bool {
	if o != nil && !IsNil(o.LocalIkePeerIdentity) {
		return true
	}

	return false
}

// SetLocalIkePeerIdentity gets a reference to the given string and assigns it to the LocalIkePeerIdentity field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetLocalIkePeerIdentity(v string) {
	o.LocalIkePeerIdentity = &v
}

// GetMtu returns the Mtu field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu) {
		var ret int32
		return ret
	}
	return *o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetMtuOk() (*int32, bool) {
	if o == nil || IsNil(o.Mtu) {
		return nil, false
	}
	return o.Mtu, true
}

// HasMtu returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasMtu() bool {
	if o != nil && !IsNil(o.Mtu) {
		return true
	}

	return false
}

// SetMtu gets a reference to the given int32 and assigns it to the Mtu field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetMtu(v int32) {
	o.Mtu = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetName(v string) {
	o.Name = &v
}

// GetPresharedKey returns the PresharedKey field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetPresharedKey() string {
	if o == nil || IsNil(o.PresharedKey) {
		var ret string
		return ret
	}
	return *o.PresharedKey
}

// GetPresharedKeyOk returns a tuple with the PresharedKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetPresharedKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PresharedKey) {
		return nil, false
	}
	return o.PresharedKey, true
}

// HasPresharedKey returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasPresharedKey() bool {
	if o != nil && !IsNil(o.PresharedKey) {
		return true
	}

	return false
}

// SetPresharedKey gets a reference to the given string and assigns it to the PresharedKey field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetPresharedKey(v string) {
	o.PresharedKey = &v
}

// GetRemoteAddressV4 returns the RemoteAddressV4 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetRemoteAddressV4() string {
	if o == nil || IsNil(o.RemoteAddressV4) {
		var ret string
		return ret
	}
	return *o.RemoteAddressV4
}

// GetRemoteAddressV4Ok returns a tuple with the RemoteAddressV4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetRemoteAddressV4Ok() (*string, bool) {
	if o == nil || IsNil(o.RemoteAddressV4) {
		return nil, false
	}
	return o.RemoteAddressV4, true
}

// HasRemoteAddressV4 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasRemoteAddressV4() bool {
	if o != nil && !IsNil(o.RemoteAddressV4) {
		return true
	}

	return false
}

// SetRemoteAddressV4 gets a reference to the given string and assigns it to the RemoteAddressV4 field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetRemoteAddressV4(v string) {
	o.RemoteAddressV4 = &v
}

// GetRemoteAddressV6 returns the RemoteAddressV6 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetRemoteAddressV6() string {
	if o == nil || IsNil(o.RemoteAddressV6) {
		var ret string
		return ret
	}
	return *o.RemoteAddressV6
}

// GetRemoteAddressV6Ok returns a tuple with the RemoteAddressV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetRemoteAddressV6Ok() (*string, bool) {
	if o == nil || IsNil(o.RemoteAddressV6) {
		return nil, false
	}
	return o.RemoteAddressV6, true
}

// HasRemoteAddressV6 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasRemoteAddressV6() bool {
	if o != nil && !IsNil(o.RemoteAddressV6) {
		return true
	}

	return false
}

// SetRemoteAddressV6 gets a reference to the given string and assigns it to the RemoteAddressV6 field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetRemoteAddressV6(v string) {
	o.RemoteAddressV6 = &v
}

// GetRemoteIkePeerIdentity returns the RemoteIkePeerIdentity field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetRemoteIkePeerIdentity() string {
	if o == nil || IsNil(o.RemoteIkePeerIdentity) {
		var ret string
		return ret
	}
	return *o.RemoteIkePeerIdentity
}

// GetRemoteIkePeerIdentityOk returns a tuple with the RemoteIkePeerIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetRemoteIkePeerIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIkePeerIdentity) {
		return nil, false
	}
	return o.RemoteIkePeerIdentity, true
}

// HasRemoteIkePeerIdentity returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasRemoteIkePeerIdentity() bool {
	if o != nil && !IsNil(o.RemoteIkePeerIdentity) {
		return true
	}

	return false
}

// SetRemoteIkePeerIdentity gets a reference to the given string and assigns it to the RemoteIkePeerIdentity field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetRemoteIkePeerIdentity(v string) {
	o.RemoteIkePeerIdentity = &v
}

// GetRouting returns the Routing field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetRouting() V1GatewaysPutRequestDetailsIpsecGatewayRouting {
	if o == nil || IsNil(o.Routing) {
		var ret V1GatewaysPutRequestDetailsIpsecGatewayRouting
		return ret
	}
	return *o.Routing
}

// GetRoutingOk returns a tuple with the Routing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetRoutingOk() (*V1GatewaysPutRequestDetailsIpsecGatewayRouting, bool) {
	if o == nil || IsNil(o.Routing) {
		return nil, false
	}
	return o.Routing, true
}

// HasRouting returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasRouting() bool {
	if o != nil && !IsNil(o.Routing) {
		return true
	}

	return false
}

// SetRouting gets a reference to the given V1GatewaysPutRequestDetailsIpsecGatewayRouting and assigns it to the Routing field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetRouting(v V1GatewaysPutRequestDetailsIpsecGatewayRouting) {
	o.Routing = &v
}

// GetTcpMss returns the TcpMss field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetTcpMss() int32 {
	if o == nil || IsNil(o.TcpMss) {
		var ret int32
		return ret
	}
	return *o.TcpMss
}

// GetTcpMssOk returns a tuple with the TcpMss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetTcpMssOk() (*int32, bool) {
	if o == nil || IsNil(o.TcpMss) {
		return nil, false
	}
	return o.TcpMss, true
}

// HasTcpMss returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasTcpMss() bool {
	if o != nil && !IsNil(o.TcpMss) {
		return true
	}

	return false
}

// SetTcpMss gets a reference to the given int32 and assigns it to the TcpMss field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetTcpMss(v int32) {
	o.TcpMss = &v
}

// GetVpnProfile returns the VpnProfile field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetVpnProfile() string {
	if o == nil || IsNil(o.VpnProfile) {
		var ret string
		return ret
	}
	return *o.VpnProfile
}

// GetVpnProfileOk returns a tuple with the VpnProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) GetVpnProfileOk() (*string, bool) {
	if o == nil || IsNil(o.VpnProfile) {
		return nil, false
	}
	return o.VpnProfile, true
}

// HasVpnProfile returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) HasVpnProfile() bool {
	if o != nil && !IsNil(o.VpnProfile) {
		return true
	}

	return false
}

// SetVpnProfile gets a reference to the given string and assigns it to the VpnProfile field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) SetVpnProfile(v string) {
	o.VpnProfile = &v
}

func (o V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestinationAddress) {
		toSerialize["destinationAddress"] = o.DestinationAddress
	}
	if !IsNil(o.IkeInitiator) {
		toSerialize["ikeInitiator"] = o.IkeInitiator
	}
	if !IsNil(o.IpsecLabel) {
		toSerialize["ipsecLabel"] = o.IpsecLabel
	}
	if !IsNil(o.Lan) {
		toSerialize["lan"] = o.Lan
	}
	if !IsNil(o.LocalAddressV4) {
		toSerialize["localAddressV4"] = o.LocalAddressV4
	}
	if !IsNil(o.LocalAddressV6) {
		toSerialize["localAddressV6"] = o.LocalAddressV6
	}
	if !IsNil(o.LocalCircuit) {
		toSerialize["localCircuit"] = o.LocalCircuit
	}
	if !IsNil(o.LocalIkePeerIdentity) {
		toSerialize["localIkePeerIdentity"] = o.LocalIkePeerIdentity
	}
	if !IsNil(o.Mtu) {
		toSerialize["mtu"] = o.Mtu
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PresharedKey) {
		toSerialize["presharedKey"] = o.PresharedKey
	}
	if !IsNil(o.RemoteAddressV4) {
		toSerialize["remoteAddressV4"] = o.RemoteAddressV4
	}
	if !IsNil(o.RemoteAddressV6) {
		toSerialize["remoteAddressV6"] = o.RemoteAddressV6
	}
	if !IsNil(o.RemoteIkePeerIdentity) {
		toSerialize["remoteIkePeerIdentity"] = o.RemoteIkePeerIdentity
	}
	if !IsNil(o.Routing) {
		toSerialize["routing"] = o.Routing
	}
	if !IsNil(o.TcpMss) {
		toSerialize["tcpMss"] = o.TcpMss
	}
	if !IsNil(o.VpnProfile) {
		toSerialize["vpnProfile"] = o.VpnProfile
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn struct {
	value *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) Get() *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) Set(val *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn(val *V1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) *NullableV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn {
	return &NullableV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeSiteToSiteVpnValueSiteToSiteVpn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


