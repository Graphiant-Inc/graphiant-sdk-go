/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord{}

// V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord struct for V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord
type V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord struct {
	AffectedHosts *int64 `json:"affectedHosts,omitempty"`
	AffectedRegions *int64 `json:"affectedRegions,omitempty"`
	AffectedSites *int64 `json:"affectedSites,omitempty"`
	AffectedVrfs *int64 `json:"affectedVrfs,omitempty"`
	AppId *int64 `json:"appId,omitempty"`
	AppIdRecords []V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecord `json:"appIdRecords,omitempty"`
	AppName *string `json:"appName,omitempty"`
	AppType *string `json:"appType,omitempty"`
	Category *string `json:"category,omitempty"`
	DaClassified *bool `json:"daClassified,omitempty"`
	FlexAlgo []V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecordFlexAlgoInner `json:"flexAlgo,omitempty"`
	FlowsAnalyzed *int64 `json:"flowsAnalyzed,omitempty"`
	Recommendation *string `json:"recommendation,omitempty"`
	RiskStatus *string `json:"riskStatus,omitempty"`
	ThreatScore *int64 `json:"threatScore,omitempty"`
}

// NewV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord instantiates a new V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord() *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord {
	this := V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord{}
	return &this
}

// NewV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecordWithDefaults instantiates a new V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecordWithDefaults() *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord {
	this := V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord{}
	return &this
}

// GetAffectedHosts returns the AffectedHosts field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAffectedHosts() int64 {
	if o == nil || IsNil(o.AffectedHosts) {
		var ret int64
		return ret
	}
	return *o.AffectedHosts
}

// GetAffectedHostsOk returns a tuple with the AffectedHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAffectedHostsOk() (*int64, bool) {
	if o == nil || IsNil(o.AffectedHosts) {
		return nil, false
	}
	return o.AffectedHosts, true
}

// HasAffectedHosts returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasAffectedHosts() bool {
	if o != nil && !IsNil(o.AffectedHosts) {
		return true
	}

	return false
}

// SetAffectedHosts gets a reference to the given int64 and assigns it to the AffectedHosts field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetAffectedHosts(v int64) {
	o.AffectedHosts = &v
}

// GetAffectedRegions returns the AffectedRegions field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAffectedRegions() int64 {
	if o == nil || IsNil(o.AffectedRegions) {
		var ret int64
		return ret
	}
	return *o.AffectedRegions
}

// GetAffectedRegionsOk returns a tuple with the AffectedRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAffectedRegionsOk() (*int64, bool) {
	if o == nil || IsNil(o.AffectedRegions) {
		return nil, false
	}
	return o.AffectedRegions, true
}

// HasAffectedRegions returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasAffectedRegions() bool {
	if o != nil && !IsNil(o.AffectedRegions) {
		return true
	}

	return false
}

// SetAffectedRegions gets a reference to the given int64 and assigns it to the AffectedRegions field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetAffectedRegions(v int64) {
	o.AffectedRegions = &v
}

// GetAffectedSites returns the AffectedSites field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAffectedSites() int64 {
	if o == nil || IsNil(o.AffectedSites) {
		var ret int64
		return ret
	}
	return *o.AffectedSites
}

// GetAffectedSitesOk returns a tuple with the AffectedSites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAffectedSitesOk() (*int64, bool) {
	if o == nil || IsNil(o.AffectedSites) {
		return nil, false
	}
	return o.AffectedSites, true
}

// HasAffectedSites returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasAffectedSites() bool {
	if o != nil && !IsNil(o.AffectedSites) {
		return true
	}

	return false
}

// SetAffectedSites gets a reference to the given int64 and assigns it to the AffectedSites field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetAffectedSites(v int64) {
	o.AffectedSites = &v
}

// GetAffectedVrfs returns the AffectedVrfs field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAffectedVrfs() int64 {
	if o == nil || IsNil(o.AffectedVrfs) {
		var ret int64
		return ret
	}
	return *o.AffectedVrfs
}

// GetAffectedVrfsOk returns a tuple with the AffectedVrfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAffectedVrfsOk() (*int64, bool) {
	if o == nil || IsNil(o.AffectedVrfs) {
		return nil, false
	}
	return o.AffectedVrfs, true
}

// HasAffectedVrfs returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasAffectedVrfs() bool {
	if o != nil && !IsNil(o.AffectedVrfs) {
		return true
	}

	return false
}

// SetAffectedVrfs gets a reference to the given int64 and assigns it to the AffectedVrfs field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetAffectedVrfs(v int64) {
	o.AffectedVrfs = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAppId() int64 {
	if o == nil || IsNil(o.AppId) {
		var ret int64
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAppIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int64 and assigns it to the AppId field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetAppId(v int64) {
	o.AppId = &v
}

// GetAppIdRecords returns the AppIdRecords field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAppIdRecords() []V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecord {
	if o == nil || IsNil(o.AppIdRecords) {
		var ret []V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecord
		return ret
	}
	return o.AppIdRecords
}

// GetAppIdRecordsOk returns a tuple with the AppIdRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAppIdRecordsOk() ([]V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecord, bool) {
	if o == nil || IsNil(o.AppIdRecords) {
		return nil, false
	}
	return o.AppIdRecords, true
}

// HasAppIdRecords returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasAppIdRecords() bool {
	if o != nil && !IsNil(o.AppIdRecords) {
		return true
	}

	return false
}

// SetAppIdRecords gets a reference to the given []V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecord and assigns it to the AppIdRecords field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetAppIdRecords(v []V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecord) {
	o.AppIdRecords = v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetAppName(v string) {
	o.AppName = &v
}

// GetAppType returns the AppType field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAppType() string {
	if o == nil || IsNil(o.AppType) {
		var ret string
		return ret
	}
	return *o.AppType
}

// GetAppTypeOk returns a tuple with the AppType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetAppTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AppType) {
		return nil, false
	}
	return o.AppType, true
}

// HasAppType returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasAppType() bool {
	if o != nil && !IsNil(o.AppType) {
		return true
	}

	return false
}

// SetAppType gets a reference to the given string and assigns it to the AppType field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetAppType(v string) {
	o.AppType = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetCategory(v string) {
	o.Category = &v
}

// GetDaClassified returns the DaClassified field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetDaClassified() bool {
	if o == nil || IsNil(o.DaClassified) {
		var ret bool
		return ret
	}
	return *o.DaClassified
}

// GetDaClassifiedOk returns a tuple with the DaClassified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetDaClassifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.DaClassified) {
		return nil, false
	}
	return o.DaClassified, true
}

// HasDaClassified returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasDaClassified() bool {
	if o != nil && !IsNil(o.DaClassified) {
		return true
	}

	return false
}

// SetDaClassified gets a reference to the given bool and assigns it to the DaClassified field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetDaClassified(v bool) {
	o.DaClassified = &v
}

// GetFlexAlgo returns the FlexAlgo field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetFlexAlgo() []V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecordFlexAlgoInner {
	if o == nil || IsNil(o.FlexAlgo) {
		var ret []V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecordFlexAlgoInner
		return ret
	}
	return o.FlexAlgo
}

// GetFlexAlgoOk returns a tuple with the FlexAlgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetFlexAlgoOk() ([]V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecordFlexAlgoInner, bool) {
	if o == nil || IsNil(o.FlexAlgo) {
		return nil, false
	}
	return o.FlexAlgo, true
}

// HasFlexAlgo returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasFlexAlgo() bool {
	if o != nil && !IsNil(o.FlexAlgo) {
		return true
	}

	return false
}

// SetFlexAlgo gets a reference to the given []V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecordFlexAlgoInner and assigns it to the FlexAlgo field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetFlexAlgo(v []V2AssuranceApplicationdetailsbynamePost200ResponseAppIdRecordFlexAlgoInner) {
	o.FlexAlgo = v
}

// GetFlowsAnalyzed returns the FlowsAnalyzed field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetFlowsAnalyzed() int64 {
	if o == nil || IsNil(o.FlowsAnalyzed) {
		var ret int64
		return ret
	}
	return *o.FlowsAnalyzed
}

// GetFlowsAnalyzedOk returns a tuple with the FlowsAnalyzed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetFlowsAnalyzedOk() (*int64, bool) {
	if o == nil || IsNil(o.FlowsAnalyzed) {
		return nil, false
	}
	return o.FlowsAnalyzed, true
}

// HasFlowsAnalyzed returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasFlowsAnalyzed() bool {
	if o != nil && !IsNil(o.FlowsAnalyzed) {
		return true
	}

	return false
}

// SetFlowsAnalyzed gets a reference to the given int64 and assigns it to the FlowsAnalyzed field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetFlowsAnalyzed(v int64) {
	o.FlowsAnalyzed = &v
}

// GetRecommendation returns the Recommendation field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetRecommendation() string {
	if o == nil || IsNil(o.Recommendation) {
		var ret string
		return ret
	}
	return *o.Recommendation
}

// GetRecommendationOk returns a tuple with the Recommendation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetRecommendationOk() (*string, bool) {
	if o == nil || IsNil(o.Recommendation) {
		return nil, false
	}
	return o.Recommendation, true
}

// HasRecommendation returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasRecommendation() bool {
	if o != nil && !IsNil(o.Recommendation) {
		return true
	}

	return false
}

// SetRecommendation gets a reference to the given string and assigns it to the Recommendation field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetRecommendation(v string) {
	o.Recommendation = &v
}

// GetRiskStatus returns the RiskStatus field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetRiskStatus() string {
	if o == nil || IsNil(o.RiskStatus) {
		var ret string
		return ret
	}
	return *o.RiskStatus
}

// GetRiskStatusOk returns a tuple with the RiskStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetRiskStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RiskStatus) {
		return nil, false
	}
	return o.RiskStatus, true
}

// HasRiskStatus returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasRiskStatus() bool {
	if o != nil && !IsNil(o.RiskStatus) {
		return true
	}

	return false
}

// SetRiskStatus gets a reference to the given string and assigns it to the RiskStatus field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetRiskStatus(v string) {
	o.RiskStatus = &v
}

// GetThreatScore returns the ThreatScore field value if set, zero value otherwise.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetThreatScore() int64 {
	if o == nil || IsNil(o.ThreatScore) {
		var ret int64
		return ret
	}
	return *o.ThreatScore
}

// GetThreatScoreOk returns a tuple with the ThreatScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) GetThreatScoreOk() (*int64, bool) {
	if o == nil || IsNil(o.ThreatScore) {
		return nil, false
	}
	return o.ThreatScore, true
}

// HasThreatScore returns a boolean if a field has been set.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) HasThreatScore() bool {
	if o != nil && !IsNil(o.ThreatScore) {
		return true
	}

	return false
}

// SetThreatScore gets a reference to the given int64 and assigns it to the ThreatScore field.
func (o *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) SetThreatScore(v int64) {
	o.ThreatScore = &v
}

func (o V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedHosts) {
		toSerialize["affectedHosts"] = o.AffectedHosts
	}
	if !IsNil(o.AffectedRegions) {
		toSerialize["affectedRegions"] = o.AffectedRegions
	}
	if !IsNil(o.AffectedSites) {
		toSerialize["affectedSites"] = o.AffectedSites
	}
	if !IsNil(o.AffectedVrfs) {
		toSerialize["affectedVrfs"] = o.AffectedVrfs
	}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.AppIdRecords) {
		toSerialize["appIdRecords"] = o.AppIdRecords
	}
	if !IsNil(o.AppName) {
		toSerialize["appName"] = o.AppName
	}
	if !IsNil(o.AppType) {
		toSerialize["appType"] = o.AppType
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.DaClassified) {
		toSerialize["daClassified"] = o.DaClassified
	}
	if !IsNil(o.FlexAlgo) {
		toSerialize["flexAlgo"] = o.FlexAlgo
	}
	if !IsNil(o.FlowsAnalyzed) {
		toSerialize["flowsAnalyzed"] = o.FlowsAnalyzed
	}
	if !IsNil(o.Recommendation) {
		toSerialize["recommendation"] = o.Recommendation
	}
	if !IsNil(o.RiskStatus) {
		toSerialize["riskStatus"] = o.RiskStatus
	}
	if !IsNil(o.ThreatScore) {
		toSerialize["threatScore"] = o.ThreatScore
	}
	return toSerialize, nil
}

type NullableV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord struct {
	value *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord
	isSet bool
}

func (v NullableV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) Get() *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord {
	return v.value
}

func (v *NullableV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) Set(val *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord(val *V2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) *NullableV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord {
	return &NullableV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord{value: val, isSet: true}
}

func (v NullableV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssuranceApplicationdetailsbynamePost200ResponseAppNameRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


