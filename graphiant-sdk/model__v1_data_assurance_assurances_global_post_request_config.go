/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DataAssuranceAssurancesGlobalPostRequestConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DataAssuranceAssurancesGlobalPostRequestConfig{}

// V1DataAssuranceAssurancesGlobalPostRequestConfig struct for V1DataAssuranceAssurancesGlobalPostRequestConfig
type V1DataAssuranceAssurancesGlobalPostRequestConfig struct {
	Apps []V1DataAssuranceAssurancesGlobalPostRequestConfigAppsInner `json:"apps,omitempty"`
	FlexAlgo *string `json:"flexAlgo,omitempty"`
	LanNames []string `json:"lanNames,omitempty"`
	Name *string `json:"name,omitempty"`
	SiteListId *int64 `json:"siteListId,omitempty"`
	UseAllSites *bool `json:"useAllSites,omitempty"`
}

// NewV1DataAssuranceAssurancesGlobalPostRequestConfig instantiates a new V1DataAssuranceAssurancesGlobalPostRequestConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DataAssuranceAssurancesGlobalPostRequestConfig() *V1DataAssuranceAssurancesGlobalPostRequestConfig {
	this := V1DataAssuranceAssurancesGlobalPostRequestConfig{}
	return &this
}

// NewV1DataAssuranceAssurancesGlobalPostRequestConfigWithDefaults instantiates a new V1DataAssuranceAssurancesGlobalPostRequestConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DataAssuranceAssurancesGlobalPostRequestConfigWithDefaults() *V1DataAssuranceAssurancesGlobalPostRequestConfig {
	this := V1DataAssuranceAssurancesGlobalPostRequestConfig{}
	return &this
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetApps() []V1DataAssuranceAssurancesGlobalPostRequestConfigAppsInner {
	if o == nil || IsNil(o.Apps) {
		var ret []V1DataAssuranceAssurancesGlobalPostRequestConfigAppsInner
		return ret
	}
	return o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetAppsOk() ([]V1DataAssuranceAssurancesGlobalPostRequestConfigAppsInner, bool) {
	if o == nil || IsNil(o.Apps) {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) HasApps() bool {
	if o != nil && !IsNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given []V1DataAssuranceAssurancesGlobalPostRequestConfigAppsInner and assigns it to the Apps field.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) SetApps(v []V1DataAssuranceAssurancesGlobalPostRequestConfigAppsInner) {
	o.Apps = v
}

// GetFlexAlgo returns the FlexAlgo field value if set, zero value otherwise.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetFlexAlgo() string {
	if o == nil || IsNil(o.FlexAlgo) {
		var ret string
		return ret
	}
	return *o.FlexAlgo
}

// GetFlexAlgoOk returns a tuple with the FlexAlgo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetFlexAlgoOk() (*string, bool) {
	if o == nil || IsNil(o.FlexAlgo) {
		return nil, false
	}
	return o.FlexAlgo, true
}

// HasFlexAlgo returns a boolean if a field has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) HasFlexAlgo() bool {
	if o != nil && !IsNil(o.FlexAlgo) {
		return true
	}

	return false
}

// SetFlexAlgo gets a reference to the given string and assigns it to the FlexAlgo field.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) SetFlexAlgo(v string) {
	o.FlexAlgo = &v
}

// GetLanNames returns the LanNames field value if set, zero value otherwise.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetLanNames() []string {
	if o == nil || IsNil(o.LanNames) {
		var ret []string
		return ret
	}
	return o.LanNames
}

// GetLanNamesOk returns a tuple with the LanNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetLanNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.LanNames) {
		return nil, false
	}
	return o.LanNames, true
}

// HasLanNames returns a boolean if a field has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) HasLanNames() bool {
	if o != nil && !IsNil(o.LanNames) {
		return true
	}

	return false
}

// SetLanNames gets a reference to the given []string and assigns it to the LanNames field.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) SetLanNames(v []string) {
	o.LanNames = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) SetName(v string) {
	o.Name = &v
}

// GetSiteListId returns the SiteListId field value if set, zero value otherwise.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetSiteListId() int64 {
	if o == nil || IsNil(o.SiteListId) {
		var ret int64
		return ret
	}
	return *o.SiteListId
}

// GetSiteListIdOk returns a tuple with the SiteListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetSiteListIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SiteListId) {
		return nil, false
	}
	return o.SiteListId, true
}

// HasSiteListId returns a boolean if a field has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) HasSiteListId() bool {
	if o != nil && !IsNil(o.SiteListId) {
		return true
	}

	return false
}

// SetSiteListId gets a reference to the given int64 and assigns it to the SiteListId field.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) SetSiteListId(v int64) {
	o.SiteListId = &v
}

// GetUseAllSites returns the UseAllSites field value if set, zero value otherwise.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetUseAllSites() bool {
	if o == nil || IsNil(o.UseAllSites) {
		var ret bool
		return ret
	}
	return *o.UseAllSites
}

// GetUseAllSitesOk returns a tuple with the UseAllSites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) GetUseAllSitesOk() (*bool, bool) {
	if o == nil || IsNil(o.UseAllSites) {
		return nil, false
	}
	return o.UseAllSites, true
}

// HasUseAllSites returns a boolean if a field has been set.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) HasUseAllSites() bool {
	if o != nil && !IsNil(o.UseAllSites) {
		return true
	}

	return false
}

// SetUseAllSites gets a reference to the given bool and assigns it to the UseAllSites field.
func (o *V1DataAssuranceAssurancesGlobalPostRequestConfig) SetUseAllSites(v bool) {
	o.UseAllSites = &v
}

func (o V1DataAssuranceAssurancesGlobalPostRequestConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DataAssuranceAssurancesGlobalPostRequestConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	if !IsNil(o.FlexAlgo) {
		toSerialize["flexAlgo"] = o.FlexAlgo
	}
	if !IsNil(o.LanNames) {
		toSerialize["lanNames"] = o.LanNames
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SiteListId) {
		toSerialize["siteListId"] = o.SiteListId
	}
	if !IsNil(o.UseAllSites) {
		toSerialize["useAllSites"] = o.UseAllSites
	}
	return toSerialize, nil
}

type NullableV1DataAssuranceAssurancesGlobalPostRequestConfig struct {
	value *V1DataAssuranceAssurancesGlobalPostRequestConfig
	isSet bool
}

func (v NullableV1DataAssuranceAssurancesGlobalPostRequestConfig) Get() *V1DataAssuranceAssurancesGlobalPostRequestConfig {
	return v.value
}

func (v *NullableV1DataAssuranceAssurancesGlobalPostRequestConfig) Set(val *V1DataAssuranceAssurancesGlobalPostRequestConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DataAssuranceAssurancesGlobalPostRequestConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DataAssuranceAssurancesGlobalPostRequestConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DataAssuranceAssurancesGlobalPostRequestConfig(val *V1DataAssuranceAssurancesGlobalPostRequestConfig) *NullableV1DataAssuranceAssurancesGlobalPostRequestConfig {
	return &NullableV1DataAssuranceAssurancesGlobalPostRequestConfig{value: val, isSet: true}
}

func (v NullableV1DataAssuranceAssurancesGlobalPostRequestConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DataAssuranceAssurancesGlobalPostRequestConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


