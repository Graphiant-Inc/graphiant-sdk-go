/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary{}

// V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary struct for V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary
type V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary struct {
	BwusageTopSites []V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummaryBwusageTopSitesInner `json:"bwusageTopSites,omitempty"`
	EdgeusageKbps *float64 `json:"edgeusageKbps,omitempty"`
	PercentChanged *float64 `json:"percentChanged,omitempty"`
	SiteCount *int64 `json:"siteCount,omitempty"`
	TotusageKbps *float64 `json:"totusageKbps,omitempty"`
}

// NewV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary instantiates a new V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary() *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary {
	this := V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary{}
	return &this
}

// NewV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummaryWithDefaults instantiates a new V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummaryWithDefaults() *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary {
	this := V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary{}
	return &this
}

// GetBwusageTopSites returns the BwusageTopSites field value if set, zero value otherwise.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) GetBwusageTopSites() []V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummaryBwusageTopSitesInner {
	if o == nil || IsNil(o.BwusageTopSites) {
		var ret []V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummaryBwusageTopSitesInner
		return ret
	}
	return o.BwusageTopSites
}

// GetBwusageTopSitesOk returns a tuple with the BwusageTopSites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) GetBwusageTopSitesOk() ([]V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummaryBwusageTopSitesInner, bool) {
	if o == nil || IsNil(o.BwusageTopSites) {
		return nil, false
	}
	return o.BwusageTopSites, true
}

// HasBwusageTopSites returns a boolean if a field has been set.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) HasBwusageTopSites() bool {
	if o != nil && !IsNil(o.BwusageTopSites) {
		return true
	}

	return false
}

// SetBwusageTopSites gets a reference to the given []V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummaryBwusageTopSitesInner and assigns it to the BwusageTopSites field.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) SetBwusageTopSites(v []V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummaryBwusageTopSitesInner) {
	o.BwusageTopSites = v
}

// GetEdgeusageKbps returns the EdgeusageKbps field value if set, zero value otherwise.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) GetEdgeusageKbps() float64 {
	if o == nil || IsNil(o.EdgeusageKbps) {
		var ret float64
		return ret
	}
	return *o.EdgeusageKbps
}

// GetEdgeusageKbpsOk returns a tuple with the EdgeusageKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) GetEdgeusageKbpsOk() (*float64, bool) {
	if o == nil || IsNil(o.EdgeusageKbps) {
		return nil, false
	}
	return o.EdgeusageKbps, true
}

// HasEdgeusageKbps returns a boolean if a field has been set.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) HasEdgeusageKbps() bool {
	if o != nil && !IsNil(o.EdgeusageKbps) {
		return true
	}

	return false
}

// SetEdgeusageKbps gets a reference to the given float64 and assigns it to the EdgeusageKbps field.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) SetEdgeusageKbps(v float64) {
	o.EdgeusageKbps = &v
}

// GetPercentChanged returns the PercentChanged field value if set, zero value otherwise.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) GetPercentChanged() float64 {
	if o == nil || IsNil(o.PercentChanged) {
		var ret float64
		return ret
	}
	return *o.PercentChanged
}

// GetPercentChangedOk returns a tuple with the PercentChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) GetPercentChangedOk() (*float64, bool) {
	if o == nil || IsNil(o.PercentChanged) {
		return nil, false
	}
	return o.PercentChanged, true
}

// HasPercentChanged returns a boolean if a field has been set.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) HasPercentChanged() bool {
	if o != nil && !IsNil(o.PercentChanged) {
		return true
	}

	return false
}

// SetPercentChanged gets a reference to the given float64 and assigns it to the PercentChanged field.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) SetPercentChanged(v float64) {
	o.PercentChanged = &v
}

// GetSiteCount returns the SiteCount field value if set, zero value otherwise.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) GetSiteCount() int64 {
	if o == nil || IsNil(o.SiteCount) {
		var ret int64
		return ret
	}
	return *o.SiteCount
}

// GetSiteCountOk returns a tuple with the SiteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) GetSiteCountOk() (*int64, bool) {
	if o == nil || IsNil(o.SiteCount) {
		return nil, false
	}
	return o.SiteCount, true
}

// HasSiteCount returns a boolean if a field has been set.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) HasSiteCount() bool {
	if o != nil && !IsNil(o.SiteCount) {
		return true
	}

	return false
}

// SetSiteCount gets a reference to the given int64 and assigns it to the SiteCount field.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) SetSiteCount(v int64) {
	o.SiteCount = &v
}

// GetTotusageKbps returns the TotusageKbps field value if set, zero value otherwise.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) GetTotusageKbps() float64 {
	if o == nil || IsNil(o.TotusageKbps) {
		var ret float64
		return ret
	}
	return *o.TotusageKbps
}

// GetTotusageKbpsOk returns a tuple with the TotusageKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) GetTotusageKbpsOk() (*float64, bool) {
	if o == nil || IsNil(o.TotusageKbps) {
		return nil, false
	}
	return o.TotusageKbps, true
}

// HasTotusageKbps returns a boolean if a field has been set.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) HasTotusageKbps() bool {
	if o != nil && !IsNil(o.TotusageKbps) {
		return true
	}

	return false
}

// SetTotusageKbps gets a reference to the given float64 and assigns it to the TotusageKbps field.
func (o *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) SetTotusageKbps(v float64) {
	o.TotusageKbps = &v
}

func (o V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BwusageTopSites) {
		toSerialize["bwusageTopSites"] = o.BwusageTopSites
	}
	if !IsNil(o.EdgeusageKbps) {
		toSerialize["edgeusageKbps"] = o.EdgeusageKbps
	}
	if !IsNil(o.PercentChanged) {
		toSerialize["percentChanged"] = o.PercentChanged
	}
	if !IsNil(o.SiteCount) {
		toSerialize["siteCount"] = o.SiteCount
	}
	if !IsNil(o.TotusageKbps) {
		toSerialize["totusageKbps"] = o.TotusageKbps
	}
	return toSerialize, nil
}

type NullableV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary struct {
	value *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary
	isSet bool
}

func (v NullableV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) Get() *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary {
	return v.value
}

func (v *NullableV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) Set(val *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary(val *V1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) *NullableV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary {
	return &NullableV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary{value: val, isSet: true}
}

func (v NullableV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BwtrackerRegionEdgeSummaryPost200ResponseBwusageSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


