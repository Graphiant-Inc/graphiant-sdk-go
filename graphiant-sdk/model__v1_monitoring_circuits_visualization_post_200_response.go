/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1MonitoringCircuitsVisualizationPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1MonitoringCircuitsVisualizationPost200Response{}

// V1MonitoringCircuitsVisualizationPost200Response struct for V1MonitoringCircuitsVisualizationPost200Response
type V1MonitoringCircuitsVisualizationPost200Response struct {
	Data []V1MonitoringCircuitsVisualizationPost200ResponseDataInner `json:"data,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
}

// NewV1MonitoringCircuitsVisualizationPost200Response instantiates a new V1MonitoringCircuitsVisualizationPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1MonitoringCircuitsVisualizationPost200Response() *V1MonitoringCircuitsVisualizationPost200Response {
	this := V1MonitoringCircuitsVisualizationPost200Response{}
	return &this
}

// NewV1MonitoringCircuitsVisualizationPost200ResponseWithDefaults instantiates a new V1MonitoringCircuitsVisualizationPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1MonitoringCircuitsVisualizationPost200ResponseWithDefaults() *V1MonitoringCircuitsVisualizationPost200Response {
	this := V1MonitoringCircuitsVisualizationPost200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsVisualizationPost200Response) GetData() []V1MonitoringCircuitsVisualizationPost200ResponseDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []V1MonitoringCircuitsVisualizationPost200ResponseDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsVisualizationPost200Response) GetDataOk() ([]V1MonitoringCircuitsVisualizationPost200ResponseDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsVisualizationPost200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []V1MonitoringCircuitsVisualizationPost200ResponseDataInner and assigns it to the Data field.
func (o *V1MonitoringCircuitsVisualizationPost200Response) SetData(v []V1MonitoringCircuitsVisualizationPost200ResponseDataInner) {
	o.Data = v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *V1MonitoringCircuitsVisualizationPost200Response) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1MonitoringCircuitsVisualizationPost200Response) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *V1MonitoringCircuitsVisualizationPost200Response) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *V1MonitoringCircuitsVisualizationPost200Response) SetHostname(v string) {
	o.Hostname = &v
}

func (o V1MonitoringCircuitsVisualizationPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1MonitoringCircuitsVisualizationPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	return toSerialize, nil
}

type NullableV1MonitoringCircuitsVisualizationPost200Response struct {
	value *V1MonitoringCircuitsVisualizationPost200Response
	isSet bool
}

func (v NullableV1MonitoringCircuitsVisualizationPost200Response) Get() *V1MonitoringCircuitsVisualizationPost200Response {
	return v.value
}

func (v *NullableV1MonitoringCircuitsVisualizationPost200Response) Set(val *V1MonitoringCircuitsVisualizationPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1MonitoringCircuitsVisualizationPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1MonitoringCircuitsVisualizationPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1MonitoringCircuitsVisualizationPost200Response(val *V1MonitoringCircuitsVisualizationPost200Response) *NullableV1MonitoringCircuitsVisualizationPost200Response {
	return &NullableV1MonitoringCircuitsVisualizationPost200Response{value: val, isSet: true}
}

func (v NullableV1MonitoringCircuitsVisualizationPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1MonitoringCircuitsVisualizationPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


