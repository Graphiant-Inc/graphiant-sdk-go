/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesBringupTokenPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesBringupTokenPost200Response{}

// V1DevicesBringupTokenPost200Response struct for V1DevicesBringupTokenPost200Response
type V1DevicesBringupTokenPost200Response struct {
	AccessToken *string `json:"accessToken,omitempty"`
	ValidTillTs *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"validTillTs,omitempty"`
}

// NewV1DevicesBringupTokenPost200Response instantiates a new V1DevicesBringupTokenPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesBringupTokenPost200Response() *V1DevicesBringupTokenPost200Response {
	this := V1DevicesBringupTokenPost200Response{}
	return &this
}

// NewV1DevicesBringupTokenPost200ResponseWithDefaults instantiates a new V1DevicesBringupTokenPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesBringupTokenPost200ResponseWithDefaults() *V1DevicesBringupTokenPost200Response {
	this := V1DevicesBringupTokenPost200Response{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *V1DevicesBringupTokenPost200Response) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupTokenPost200Response) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *V1DevicesBringupTokenPost200Response) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *V1DevicesBringupTokenPost200Response) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetValidTillTs returns the ValidTillTs field value if set, zero value otherwise.
func (o *V1DevicesBringupTokenPost200Response) GetValidTillTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.ValidTillTs) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.ValidTillTs
}

// GetValidTillTsOk returns a tuple with the ValidTillTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupTokenPost200Response) GetValidTillTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.ValidTillTs) {
		return nil, false
	}
	return o.ValidTillTs, true
}

// HasValidTillTs returns a boolean if a field has been set.
func (o *V1DevicesBringupTokenPost200Response) HasValidTillTs() bool {
	if o != nil && !IsNil(o.ValidTillTs) {
		return true
	}

	return false
}

// SetValidTillTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the ValidTillTs field.
func (o *V1DevicesBringupTokenPost200Response) SetValidTillTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.ValidTillTs = &v
}

func (o V1DevicesBringupTokenPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesBringupTokenPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["accessToken"] = o.AccessToken
	}
	if !IsNil(o.ValidTillTs) {
		toSerialize["validTillTs"] = o.ValidTillTs
	}
	return toSerialize, nil
}

type NullableV1DevicesBringupTokenPost200Response struct {
	value *V1DevicesBringupTokenPost200Response
	isSet bool
}

func (v NullableV1DevicesBringupTokenPost200Response) Get() *V1DevicesBringupTokenPost200Response {
	return v.value
}

func (v *NullableV1DevicesBringupTokenPost200Response) Set(val *V1DevicesBringupTokenPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesBringupTokenPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesBringupTokenPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesBringupTokenPost200Response(val *V1DevicesBringupTokenPost200Response) *NullableV1DevicesBringupTokenPost200Response {
	return &NullableV1DevicesBringupTokenPost200Response{value: val, isSet: true}
}

func (v NullableV1DevicesBringupTokenPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesBringupTokenPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


