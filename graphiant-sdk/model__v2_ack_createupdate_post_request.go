/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AckCreateupdatePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AckCreateupdatePostRequest{}

// V2AckCreateupdatePostRequest struct for V2AckCreateupdatePostRequest
type V2AckCreateupdatePostRequest struct {
	AlertIdList []string `json:"alertIdList,omitempty"`
	Reason *string `json:"reason,omitempty"`
}

// NewV2AckCreateupdatePostRequest instantiates a new V2AckCreateupdatePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AckCreateupdatePostRequest() *V2AckCreateupdatePostRequest {
	this := V2AckCreateupdatePostRequest{}
	return &this
}

// NewV2AckCreateupdatePostRequestWithDefaults instantiates a new V2AckCreateupdatePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AckCreateupdatePostRequestWithDefaults() *V2AckCreateupdatePostRequest {
	this := V2AckCreateupdatePostRequest{}
	return &this
}

// GetAlertIdList returns the AlertIdList field value if set, zero value otherwise.
func (o *V2AckCreateupdatePostRequest) GetAlertIdList() []string {
	if o == nil || IsNil(o.AlertIdList) {
		var ret []string
		return ret
	}
	return o.AlertIdList
}

// GetAlertIdListOk returns a tuple with the AlertIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AckCreateupdatePostRequest) GetAlertIdListOk() ([]string, bool) {
	if o == nil || IsNil(o.AlertIdList) {
		return nil, false
	}
	return o.AlertIdList, true
}

// HasAlertIdList returns a boolean if a field has been set.
func (o *V2AckCreateupdatePostRequest) HasAlertIdList() bool {
	if o != nil && !IsNil(o.AlertIdList) {
		return true
	}

	return false
}

// SetAlertIdList gets a reference to the given []string and assigns it to the AlertIdList field.
func (o *V2AckCreateupdatePostRequest) SetAlertIdList(v []string) {
	o.AlertIdList = v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *V2AckCreateupdatePostRequest) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AckCreateupdatePostRequest) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *V2AckCreateupdatePostRequest) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *V2AckCreateupdatePostRequest) SetReason(v string) {
	o.Reason = &v
}

func (o V2AckCreateupdatePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AckCreateupdatePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertIdList) {
		toSerialize["alertIdList"] = o.AlertIdList
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableV2AckCreateupdatePostRequest struct {
	value *V2AckCreateupdatePostRequest
	isSet bool
}

func (v NullableV2AckCreateupdatePostRequest) Get() *V2AckCreateupdatePostRequest {
	return v.value
}

func (v *NullableV2AckCreateupdatePostRequest) Set(val *V2AckCreateupdatePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AckCreateupdatePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AckCreateupdatePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AckCreateupdatePostRequest(val *V2AckCreateupdatePostRequest) *NullableV2AckCreateupdatePostRequest {
	return &NullableV2AckCreateupdatePostRequest{value: val, isSet: true}
}

func (v NullableV2AckCreateupdatePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AckCreateupdatePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


