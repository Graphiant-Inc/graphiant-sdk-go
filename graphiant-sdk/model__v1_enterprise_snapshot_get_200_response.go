/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1EnterpriseSnapshotGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1EnterpriseSnapshotGet200Response{}

// V1EnterpriseSnapshotGet200Response struct for V1EnterpriseSnapshotGet200Response
type V1EnterpriseSnapshotGet200Response struct {
	DeviceSnapshotRecords []V1EnterpriseSnapshotGet200ResponseDeviceSnapshotRecordsInner `json:"deviceSnapshotRecords,omitempty"`
	DeviceSnapshotMap *map[string]V1EnterpriseSnapshotGet200ResponseDeviceSnapshotMapValue `json:"deviceSnapshotMap,omitempty"`
}

// NewV1EnterpriseSnapshotGet200Response instantiates a new V1EnterpriseSnapshotGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1EnterpriseSnapshotGet200Response() *V1EnterpriseSnapshotGet200Response {
	this := V1EnterpriseSnapshotGet200Response{}
	return &this
}

// NewV1EnterpriseSnapshotGet200ResponseWithDefaults instantiates a new V1EnterpriseSnapshotGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EnterpriseSnapshotGet200ResponseWithDefaults() *V1EnterpriseSnapshotGet200Response {
	this := V1EnterpriseSnapshotGet200Response{}
	return &this
}

// GetDeviceSnapshotRecords returns the DeviceSnapshotRecords field value if set, zero value otherwise.
func (o *V1EnterpriseSnapshotGet200Response) GetDeviceSnapshotRecords() []V1EnterpriseSnapshotGet200ResponseDeviceSnapshotRecordsInner {
	if o == nil || IsNil(o.DeviceSnapshotRecords) {
		var ret []V1EnterpriseSnapshotGet200ResponseDeviceSnapshotRecordsInner
		return ret
	}
	return o.DeviceSnapshotRecords
}

// GetDeviceSnapshotRecordsOk returns a tuple with the DeviceSnapshotRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseSnapshotGet200Response) GetDeviceSnapshotRecordsOk() ([]V1EnterpriseSnapshotGet200ResponseDeviceSnapshotRecordsInner, bool) {
	if o == nil || IsNil(o.DeviceSnapshotRecords) {
		return nil, false
	}
	return o.DeviceSnapshotRecords, true
}

// HasDeviceSnapshotRecords returns a boolean if a field has been set.
func (o *V1EnterpriseSnapshotGet200Response) HasDeviceSnapshotRecords() bool {
	if o != nil && !IsNil(o.DeviceSnapshotRecords) {
		return true
	}

	return false
}

// SetDeviceSnapshotRecords gets a reference to the given []V1EnterpriseSnapshotGet200ResponseDeviceSnapshotRecordsInner and assigns it to the DeviceSnapshotRecords field.
func (o *V1EnterpriseSnapshotGet200Response) SetDeviceSnapshotRecords(v []V1EnterpriseSnapshotGet200ResponseDeviceSnapshotRecordsInner) {
	o.DeviceSnapshotRecords = v
}

// GetDeviceSnapshotMap returns the DeviceSnapshotMap field value if set, zero value otherwise.
func (o *V1EnterpriseSnapshotGet200Response) GetDeviceSnapshotMap() map[string]V1EnterpriseSnapshotGet200ResponseDeviceSnapshotMapValue {
	if o == nil || IsNil(o.DeviceSnapshotMap) {
		var ret map[string]V1EnterpriseSnapshotGet200ResponseDeviceSnapshotMapValue
		return ret
	}
	return *o.DeviceSnapshotMap
}

// GetDeviceSnapshotMapOk returns a tuple with the DeviceSnapshotMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseSnapshotGet200Response) GetDeviceSnapshotMapOk() (*map[string]V1EnterpriseSnapshotGet200ResponseDeviceSnapshotMapValue, bool) {
	if o == nil || IsNil(o.DeviceSnapshotMap) {
		return nil, false
	}
	return o.DeviceSnapshotMap, true
}

// HasDeviceSnapshotMap returns a boolean if a field has been set.
func (o *V1EnterpriseSnapshotGet200Response) HasDeviceSnapshotMap() bool {
	if o != nil && !IsNil(o.DeviceSnapshotMap) {
		return true
	}

	return false
}

// SetDeviceSnapshotMap gets a reference to the given map[string]V1EnterpriseSnapshotGet200ResponseDeviceSnapshotMapValue and assigns it to the DeviceSnapshotMap field.
func (o *V1EnterpriseSnapshotGet200Response) SetDeviceSnapshotMap(v map[string]V1EnterpriseSnapshotGet200ResponseDeviceSnapshotMapValue) {
	o.DeviceSnapshotMap = &v
}

func (o V1EnterpriseSnapshotGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1EnterpriseSnapshotGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceSnapshotRecords) {
		toSerialize["deviceSnapshotRecords"] = o.DeviceSnapshotRecords
	}
	if !IsNil(o.DeviceSnapshotMap) {
		toSerialize["deviceSnapshotMap"] = o.DeviceSnapshotMap
	}
	return toSerialize, nil
}

type NullableV1EnterpriseSnapshotGet200Response struct {
	value *V1EnterpriseSnapshotGet200Response
	isSet bool
}

func (v NullableV1EnterpriseSnapshotGet200Response) Get() *V1EnterpriseSnapshotGet200Response {
	return v.value
}

func (v *NullableV1EnterpriseSnapshotGet200Response) Set(val *V1EnterpriseSnapshotGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1EnterpriseSnapshotGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1EnterpriseSnapshotGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1EnterpriseSnapshotGet200Response(val *V1EnterpriseSnapshotGet200Response) *NullableV1EnterpriseSnapshotGet200Response {
	return &NullableV1EnterpriseSnapshotGet200Response{value: val, isSet: true}
}

func (v NullableV1EnterpriseSnapshotGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1EnterpriseSnapshotGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


