/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane{}

// V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane struct for V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane
type V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane struct {
	Cpu []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner `json:"cpu,omitempty"`
	Crashes []V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneCrashesInner `json:"crashes,omitempty"`
	Disk []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner `json:"disk,omitempty"`
	LastCrash *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash `json:"lastCrash,omitempty"`
	MaintenanceWindows []V2NotificationlistPostRequest `json:"maintenanceWindows,omitempty"`
	Memory []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner `json:"memory,omitempty"`
	Overheating []V2NotificationlistPostRequest `json:"overheating,omitempty"`
	Status *string `json:"status,omitempty"`
	TemperatureSeries []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner `json:"temperatureSeries,omitempty"`
}

// NewV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane instantiates a new V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane() *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane {
	this := V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane{}
	return &this
}

// NewV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneWithDefaults instantiates a new V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneWithDefaults() *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane {
	this := V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane{}
	return &this
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetCpu() []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner {
	if o == nil || IsNil(o.Cpu) {
		var ret []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner
		return ret
	}
	return o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetCpuOk() ([]V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner and assigns it to the Cpu field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) SetCpu(v []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner) {
	o.Cpu = v
}

// GetCrashes returns the Crashes field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetCrashes() []V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneCrashesInner {
	if o == nil || IsNil(o.Crashes) {
		var ret []V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneCrashesInner
		return ret
	}
	return o.Crashes
}

// GetCrashesOk returns a tuple with the Crashes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetCrashesOk() ([]V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneCrashesInner, bool) {
	if o == nil || IsNil(o.Crashes) {
		return nil, false
	}
	return o.Crashes, true
}

// HasCrashes returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) HasCrashes() bool {
	if o != nil && !IsNil(o.Crashes) {
		return true
	}

	return false
}

// SetCrashes gets a reference to the given []V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneCrashesInner and assigns it to the Crashes field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) SetCrashes(v []V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneCrashesInner) {
	o.Crashes = v
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetDisk() []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner {
	if o == nil || IsNil(o.Disk) {
		var ret []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner
		return ret
	}
	return o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetDiskOk() ([]V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner, bool) {
	if o == nil || IsNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) HasDisk() bool {
	if o != nil && !IsNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner and assigns it to the Disk field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) SetDisk(v []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner) {
	o.Disk = v
}

// GetLastCrash returns the LastCrash field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetLastCrash() V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash {
	if o == nil || IsNil(o.LastCrash) {
		var ret V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash
		return ret
	}
	return *o.LastCrash
}

// GetLastCrashOk returns a tuple with the LastCrash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetLastCrashOk() (*V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash, bool) {
	if o == nil || IsNil(o.LastCrash) {
		return nil, false
	}
	return o.LastCrash, true
}

// HasLastCrash returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) HasLastCrash() bool {
	if o != nil && !IsNil(o.LastCrash) {
		return true
	}

	return false
}

// SetLastCrash gets a reference to the given V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash and assigns it to the LastCrash field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) SetLastCrash(v V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) {
	o.LastCrash = &v
}

// GetMaintenanceWindows returns the MaintenanceWindows field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetMaintenanceWindows() []V2NotificationlistPostRequest {
	if o == nil || IsNil(o.MaintenanceWindows) {
		var ret []V2NotificationlistPostRequest
		return ret
	}
	return o.MaintenanceWindows
}

// GetMaintenanceWindowsOk returns a tuple with the MaintenanceWindows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetMaintenanceWindowsOk() ([]V2NotificationlistPostRequest, bool) {
	if o == nil || IsNil(o.MaintenanceWindows) {
		return nil, false
	}
	return o.MaintenanceWindows, true
}

// HasMaintenanceWindows returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) HasMaintenanceWindows() bool {
	if o != nil && !IsNil(o.MaintenanceWindows) {
		return true
	}

	return false
}

// SetMaintenanceWindows gets a reference to the given []V2NotificationlistPostRequest and assigns it to the MaintenanceWindows field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) SetMaintenanceWindows(v []V2NotificationlistPostRequest) {
	o.MaintenanceWindows = v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetMemory() []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner {
	if o == nil || IsNil(o.Memory) {
		var ret []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner
		return ret
	}
	return o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetMemoryOk() ([]V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner and assigns it to the Memory field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) SetMemory(v []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner) {
	o.Memory = v
}

// GetOverheating returns the Overheating field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetOverheating() []V2NotificationlistPostRequest {
	if o == nil || IsNil(o.Overheating) {
		var ret []V2NotificationlistPostRequest
		return ret
	}
	return o.Overheating
}

// GetOverheatingOk returns a tuple with the Overheating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetOverheatingOk() ([]V2NotificationlistPostRequest, bool) {
	if o == nil || IsNil(o.Overheating) {
		return nil, false
	}
	return o.Overheating, true
}

// HasOverheating returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) HasOverheating() bool {
	if o != nil && !IsNil(o.Overheating) {
		return true
	}

	return false
}

// SetOverheating gets a reference to the given []V2NotificationlistPostRequest and assigns it to the Overheating field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) SetOverheating(v []V2NotificationlistPostRequest) {
	o.Overheating = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) SetStatus(v string) {
	o.Status = &v
}

// GetTemperatureSeries returns the TemperatureSeries field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetTemperatureSeries() []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner {
	if o == nil || IsNil(o.TemperatureSeries) {
		var ret []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner
		return ret
	}
	return o.TemperatureSeries
}

// GetTemperatureSeriesOk returns a tuple with the TemperatureSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) GetTemperatureSeriesOk() ([]V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner, bool) {
	if o == nil || IsNil(o.TemperatureSeries) {
		return nil, false
	}
	return o.TemperatureSeries, true
}

// HasTemperatureSeries returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) HasTemperatureSeries() bool {
	if o != nil && !IsNil(o.TemperatureSeries) {
		return true
	}

	return false
}

// SetTemperatureSeries gets a reference to the given []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner and assigns it to the TemperatureSeries field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) SetTemperatureSeries(v []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInnerTransitionsInner) {
	o.TemperatureSeries = v
}

func (o V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.Crashes) {
		toSerialize["crashes"] = o.Crashes
	}
	if !IsNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !IsNil(o.LastCrash) {
		toSerialize["lastCrash"] = o.LastCrash
	}
	if !IsNil(o.MaintenanceWindows) {
		toSerialize["maintenanceWindows"] = o.MaintenanceWindows
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.Overheating) {
		toSerialize["overheating"] = o.Overheating
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TemperatureSeries) {
		toSerialize["temperatureSeries"] = o.TemperatureSeries
	}
	return toSerialize, nil
}

type NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane struct {
	value *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane
	isSet bool
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) Get() *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane {
	return v.value
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) Set(val *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane(val *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane {
	return &NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane{value: val, isSet: true}
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


