/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GlobalConfigSitePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GlobalConfigSitePostRequest{}

// V1GlobalConfigSitePostRequest struct for V1GlobalConfigSitePostRequest
type V1GlobalConfigSitePostRequest struct {
	GlobalPrefixSetOps *map[string]string `json:"globalPrefixSetOps,omitempty"`
	IpfixExporterOps *map[string]string `json:"ipfixExporterOps,omitempty"`
	IpfixExporterOpsV2 *map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value `json:"ipfixExporterOpsV2,omitempty"`
	PrefixSetOps *map[string]string `json:"prefixSetOps,omitempty"`
	RoutingPolicyOps *map[string]string `json:"routingPolicyOps,omitempty"`
	SiteId *int64 `json:"siteId,omitempty"`
	SnmpOps *map[string]string `json:"snmpOps,omitempty"`
	SyslogServerOps *map[string]string `json:"syslogServerOps,omitempty"`
	SyslogServerOpsV2 *map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value `json:"syslogServerOpsV2,omitempty"`
	TrafficPolicyOps *map[string]string `json:"trafficPolicyOps,omitempty"`
}

// NewV1GlobalConfigSitePostRequest instantiates a new V1GlobalConfigSitePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GlobalConfigSitePostRequest() *V1GlobalConfigSitePostRequest {
	this := V1GlobalConfigSitePostRequest{}
	return &this
}

// NewV1GlobalConfigSitePostRequestWithDefaults instantiates a new V1GlobalConfigSitePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GlobalConfigSitePostRequestWithDefaults() *V1GlobalConfigSitePostRequest {
	this := V1GlobalConfigSitePostRequest{}
	return &this
}

// GetGlobalPrefixSetOps returns the GlobalPrefixSetOps field value if set, zero value otherwise.
func (o *V1GlobalConfigSitePostRequest) GetGlobalPrefixSetOps() map[string]string {
	if o == nil || IsNil(o.GlobalPrefixSetOps) {
		var ret map[string]string
		return ret
	}
	return *o.GlobalPrefixSetOps
}

// GetGlobalPrefixSetOpsOk returns a tuple with the GlobalPrefixSetOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigSitePostRequest) GetGlobalPrefixSetOpsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.GlobalPrefixSetOps) {
		return nil, false
	}
	return o.GlobalPrefixSetOps, true
}

// HasGlobalPrefixSetOps returns a boolean if a field has been set.
func (o *V1GlobalConfigSitePostRequest) HasGlobalPrefixSetOps() bool {
	if o != nil && !IsNil(o.GlobalPrefixSetOps) {
		return true
	}

	return false
}

// SetGlobalPrefixSetOps gets a reference to the given map[string]string and assigns it to the GlobalPrefixSetOps field.
func (o *V1GlobalConfigSitePostRequest) SetGlobalPrefixSetOps(v map[string]string) {
	o.GlobalPrefixSetOps = &v
}

// GetIpfixExporterOps returns the IpfixExporterOps field value if set, zero value otherwise.
func (o *V1GlobalConfigSitePostRequest) GetIpfixExporterOps() map[string]string {
	if o == nil || IsNil(o.IpfixExporterOps) {
		var ret map[string]string
		return ret
	}
	return *o.IpfixExporterOps
}

// GetIpfixExporterOpsOk returns a tuple with the IpfixExporterOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigSitePostRequest) GetIpfixExporterOpsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.IpfixExporterOps) {
		return nil, false
	}
	return o.IpfixExporterOps, true
}

// HasIpfixExporterOps returns a boolean if a field has been set.
func (o *V1GlobalConfigSitePostRequest) HasIpfixExporterOps() bool {
	if o != nil && !IsNil(o.IpfixExporterOps) {
		return true
	}

	return false
}

// SetIpfixExporterOps gets a reference to the given map[string]string and assigns it to the IpfixExporterOps field.
func (o *V1GlobalConfigSitePostRequest) SetIpfixExporterOps(v map[string]string) {
	o.IpfixExporterOps = &v
}

// GetIpfixExporterOpsV2 returns the IpfixExporterOpsV2 field value if set, zero value otherwise.
func (o *V1GlobalConfigSitePostRequest) GetIpfixExporterOpsV2() map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value {
	if o == nil || IsNil(o.IpfixExporterOpsV2) {
		var ret map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value
		return ret
	}
	return *o.IpfixExporterOpsV2
}

// GetIpfixExporterOpsV2Ok returns a tuple with the IpfixExporterOpsV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigSitePostRequest) GetIpfixExporterOpsV2Ok() (*map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value, bool) {
	if o == nil || IsNil(o.IpfixExporterOpsV2) {
		return nil, false
	}
	return o.IpfixExporterOpsV2, true
}

// HasIpfixExporterOpsV2 returns a boolean if a field has been set.
func (o *V1GlobalConfigSitePostRequest) HasIpfixExporterOpsV2() bool {
	if o != nil && !IsNil(o.IpfixExporterOpsV2) {
		return true
	}

	return false
}

// SetIpfixExporterOpsV2 gets a reference to the given map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value and assigns it to the IpfixExporterOpsV2 field.
func (o *V1GlobalConfigSitePostRequest) SetIpfixExporterOpsV2(v map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value) {
	o.IpfixExporterOpsV2 = &v
}

// GetPrefixSetOps returns the PrefixSetOps field value if set, zero value otherwise.
func (o *V1GlobalConfigSitePostRequest) GetPrefixSetOps() map[string]string {
	if o == nil || IsNil(o.PrefixSetOps) {
		var ret map[string]string
		return ret
	}
	return *o.PrefixSetOps
}

// GetPrefixSetOpsOk returns a tuple with the PrefixSetOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigSitePostRequest) GetPrefixSetOpsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.PrefixSetOps) {
		return nil, false
	}
	return o.PrefixSetOps, true
}

// HasPrefixSetOps returns a boolean if a field has been set.
func (o *V1GlobalConfigSitePostRequest) HasPrefixSetOps() bool {
	if o != nil && !IsNil(o.PrefixSetOps) {
		return true
	}

	return false
}

// SetPrefixSetOps gets a reference to the given map[string]string and assigns it to the PrefixSetOps field.
func (o *V1GlobalConfigSitePostRequest) SetPrefixSetOps(v map[string]string) {
	o.PrefixSetOps = &v
}

// GetRoutingPolicyOps returns the RoutingPolicyOps field value if set, zero value otherwise.
func (o *V1GlobalConfigSitePostRequest) GetRoutingPolicyOps() map[string]string {
	if o == nil || IsNil(o.RoutingPolicyOps) {
		var ret map[string]string
		return ret
	}
	return *o.RoutingPolicyOps
}

// GetRoutingPolicyOpsOk returns a tuple with the RoutingPolicyOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigSitePostRequest) GetRoutingPolicyOpsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.RoutingPolicyOps) {
		return nil, false
	}
	return o.RoutingPolicyOps, true
}

// HasRoutingPolicyOps returns a boolean if a field has been set.
func (o *V1GlobalConfigSitePostRequest) HasRoutingPolicyOps() bool {
	if o != nil && !IsNil(o.RoutingPolicyOps) {
		return true
	}

	return false
}

// SetRoutingPolicyOps gets a reference to the given map[string]string and assigns it to the RoutingPolicyOps field.
func (o *V1GlobalConfigSitePostRequest) SetRoutingPolicyOps(v map[string]string) {
	o.RoutingPolicyOps = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *V1GlobalConfigSitePostRequest) GetSiteId() int64 {
	if o == nil || IsNil(o.SiteId) {
		var ret int64
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigSitePostRequest) GetSiteIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *V1GlobalConfigSitePostRequest) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given int64 and assigns it to the SiteId field.
func (o *V1GlobalConfigSitePostRequest) SetSiteId(v int64) {
	o.SiteId = &v
}

// GetSnmpOps returns the SnmpOps field value if set, zero value otherwise.
func (o *V1GlobalConfigSitePostRequest) GetSnmpOps() map[string]string {
	if o == nil || IsNil(o.SnmpOps) {
		var ret map[string]string
		return ret
	}
	return *o.SnmpOps
}

// GetSnmpOpsOk returns a tuple with the SnmpOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigSitePostRequest) GetSnmpOpsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.SnmpOps) {
		return nil, false
	}
	return o.SnmpOps, true
}

// HasSnmpOps returns a boolean if a field has been set.
func (o *V1GlobalConfigSitePostRequest) HasSnmpOps() bool {
	if o != nil && !IsNil(o.SnmpOps) {
		return true
	}

	return false
}

// SetSnmpOps gets a reference to the given map[string]string and assigns it to the SnmpOps field.
func (o *V1GlobalConfigSitePostRequest) SetSnmpOps(v map[string]string) {
	o.SnmpOps = &v
}

// GetSyslogServerOps returns the SyslogServerOps field value if set, zero value otherwise.
func (o *V1GlobalConfigSitePostRequest) GetSyslogServerOps() map[string]string {
	if o == nil || IsNil(o.SyslogServerOps) {
		var ret map[string]string
		return ret
	}
	return *o.SyslogServerOps
}

// GetSyslogServerOpsOk returns a tuple with the SyslogServerOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigSitePostRequest) GetSyslogServerOpsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.SyslogServerOps) {
		return nil, false
	}
	return o.SyslogServerOps, true
}

// HasSyslogServerOps returns a boolean if a field has been set.
func (o *V1GlobalConfigSitePostRequest) HasSyslogServerOps() bool {
	if o != nil && !IsNil(o.SyslogServerOps) {
		return true
	}

	return false
}

// SetSyslogServerOps gets a reference to the given map[string]string and assigns it to the SyslogServerOps field.
func (o *V1GlobalConfigSitePostRequest) SetSyslogServerOps(v map[string]string) {
	o.SyslogServerOps = &v
}

// GetSyslogServerOpsV2 returns the SyslogServerOpsV2 field value if set, zero value otherwise.
func (o *V1GlobalConfigSitePostRequest) GetSyslogServerOpsV2() map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value {
	if o == nil || IsNil(o.SyslogServerOpsV2) {
		var ret map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value
		return ret
	}
	return *o.SyslogServerOpsV2
}

// GetSyslogServerOpsV2Ok returns a tuple with the SyslogServerOpsV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigSitePostRequest) GetSyslogServerOpsV2Ok() (*map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value, bool) {
	if o == nil || IsNil(o.SyslogServerOpsV2) {
		return nil, false
	}
	return o.SyslogServerOpsV2, true
}

// HasSyslogServerOpsV2 returns a boolean if a field has been set.
func (o *V1GlobalConfigSitePostRequest) HasSyslogServerOpsV2() bool {
	if o != nil && !IsNil(o.SyslogServerOpsV2) {
		return true
	}

	return false
}

// SetSyslogServerOpsV2 gets a reference to the given map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value and assigns it to the SyslogServerOpsV2 field.
func (o *V1GlobalConfigSitePostRequest) SetSyslogServerOpsV2(v map[string]V1GlobalConfigSitePostRequestIpfixExporterOpsV2Value) {
	o.SyslogServerOpsV2 = &v
}

// GetTrafficPolicyOps returns the TrafficPolicyOps field value if set, zero value otherwise.
func (o *V1GlobalConfigSitePostRequest) GetTrafficPolicyOps() map[string]string {
	if o == nil || IsNil(o.TrafficPolicyOps) {
		var ret map[string]string
		return ret
	}
	return *o.TrafficPolicyOps
}

// GetTrafficPolicyOpsOk returns a tuple with the TrafficPolicyOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigSitePostRequest) GetTrafficPolicyOpsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.TrafficPolicyOps) {
		return nil, false
	}
	return o.TrafficPolicyOps, true
}

// HasTrafficPolicyOps returns a boolean if a field has been set.
func (o *V1GlobalConfigSitePostRequest) HasTrafficPolicyOps() bool {
	if o != nil && !IsNil(o.TrafficPolicyOps) {
		return true
	}

	return false
}

// SetTrafficPolicyOps gets a reference to the given map[string]string and assigns it to the TrafficPolicyOps field.
func (o *V1GlobalConfigSitePostRequest) SetTrafficPolicyOps(v map[string]string) {
	o.TrafficPolicyOps = &v
}

func (o V1GlobalConfigSitePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GlobalConfigSitePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlobalPrefixSetOps) {
		toSerialize["globalPrefixSetOps"] = o.GlobalPrefixSetOps
	}
	if !IsNil(o.IpfixExporterOps) {
		toSerialize["ipfixExporterOps"] = o.IpfixExporterOps
	}
	if !IsNil(o.IpfixExporterOpsV2) {
		toSerialize["ipfixExporterOpsV2"] = o.IpfixExporterOpsV2
	}
	if !IsNil(o.PrefixSetOps) {
		toSerialize["prefixSetOps"] = o.PrefixSetOps
	}
	if !IsNil(o.RoutingPolicyOps) {
		toSerialize["routingPolicyOps"] = o.RoutingPolicyOps
	}
	if !IsNil(o.SiteId) {
		toSerialize["siteId"] = o.SiteId
	}
	if !IsNil(o.SnmpOps) {
		toSerialize["snmpOps"] = o.SnmpOps
	}
	if !IsNil(o.SyslogServerOps) {
		toSerialize["syslogServerOps"] = o.SyslogServerOps
	}
	if !IsNil(o.SyslogServerOpsV2) {
		toSerialize["syslogServerOpsV2"] = o.SyslogServerOpsV2
	}
	if !IsNil(o.TrafficPolicyOps) {
		toSerialize["trafficPolicyOps"] = o.TrafficPolicyOps
	}
	return toSerialize, nil
}

type NullableV1GlobalConfigSitePostRequest struct {
	value *V1GlobalConfigSitePostRequest
	isSet bool
}

func (v NullableV1GlobalConfigSitePostRequest) Get() *V1GlobalConfigSitePostRequest {
	return v.value
}

func (v *NullableV1GlobalConfigSitePostRequest) Set(val *V1GlobalConfigSitePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GlobalConfigSitePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GlobalConfigSitePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GlobalConfigSitePostRequest(val *V1GlobalConfigSitePostRequest) *NullableV1GlobalConfigSitePostRequest {
	return &NullableV1GlobalConfigSitePostRequest{value: val, isSet: true}
}

func (v NullableV1GlobalConfigSitePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GlobalConfigSitePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


