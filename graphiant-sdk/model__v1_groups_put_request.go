/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GroupsPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GroupsPutRequest{}

// V1GroupsPutRequest struct for V1GroupsPutRequest
type V1GroupsPutRequest struct {
	Description *string `json:"description,omitempty"`
	GroupId *string `json:"groupId,omitempty"`
	GroupType *string `json:"groupType,omitempty"`
	ManagesEnterprises *bool `json:"managesEnterprises,omitempty"`
	Name *string `json:"name,omitempty"`
	Permissions *V1GroupsGet200ResponseGroupsInnerPermissions `json:"permissions,omitempty"`
	TimeWindowEnd *int64 `json:"timeWindowEnd,omitempty"`
	TimeWindowStart *int64 `json:"timeWindowStart,omitempty"`
}

// NewV1GroupsPutRequest instantiates a new V1GroupsPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GroupsPutRequest() *V1GroupsPutRequest {
	this := V1GroupsPutRequest{}
	return &this
}

// NewV1GroupsPutRequestWithDefaults instantiates a new V1GroupsPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GroupsPutRequestWithDefaults() *V1GroupsPutRequest {
	this := V1GroupsPutRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1GroupsPutRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsPutRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1GroupsPutRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1GroupsPutRequest) SetDescription(v string) {
	o.Description = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *V1GroupsPutRequest) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsPutRequest) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *V1GroupsPutRequest) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *V1GroupsPutRequest) SetGroupId(v string) {
	o.GroupId = &v
}

// GetGroupType returns the GroupType field value if set, zero value otherwise.
func (o *V1GroupsPutRequest) GetGroupType() string {
	if o == nil || IsNil(o.GroupType) {
		var ret string
		return ret
	}
	return *o.GroupType
}

// GetGroupTypeOk returns a tuple with the GroupType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsPutRequest) GetGroupTypeOk() (*string, bool) {
	if o == nil || IsNil(o.GroupType) {
		return nil, false
	}
	return o.GroupType, true
}

// HasGroupType returns a boolean if a field has been set.
func (o *V1GroupsPutRequest) HasGroupType() bool {
	if o != nil && !IsNil(o.GroupType) {
		return true
	}

	return false
}

// SetGroupType gets a reference to the given string and assigns it to the GroupType field.
func (o *V1GroupsPutRequest) SetGroupType(v string) {
	o.GroupType = &v
}

// GetManagesEnterprises returns the ManagesEnterprises field value if set, zero value otherwise.
func (o *V1GroupsPutRequest) GetManagesEnterprises() bool {
	if o == nil || IsNil(o.ManagesEnterprises) {
		var ret bool
		return ret
	}
	return *o.ManagesEnterprises
}

// GetManagesEnterprisesOk returns a tuple with the ManagesEnterprises field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsPutRequest) GetManagesEnterprisesOk() (*bool, bool) {
	if o == nil || IsNil(o.ManagesEnterprises) {
		return nil, false
	}
	return o.ManagesEnterprises, true
}

// HasManagesEnterprises returns a boolean if a field has been set.
func (o *V1GroupsPutRequest) HasManagesEnterprises() bool {
	if o != nil && !IsNil(o.ManagesEnterprises) {
		return true
	}

	return false
}

// SetManagesEnterprises gets a reference to the given bool and assigns it to the ManagesEnterprises field.
func (o *V1GroupsPutRequest) SetManagesEnterprises(v bool) {
	o.ManagesEnterprises = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1GroupsPutRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsPutRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1GroupsPutRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1GroupsPutRequest) SetName(v string) {
	o.Name = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *V1GroupsPutRequest) GetPermissions() V1GroupsGet200ResponseGroupsInnerPermissions {
	if o == nil || IsNil(o.Permissions) {
		var ret V1GroupsGet200ResponseGroupsInnerPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsPutRequest) GetPermissionsOk() (*V1GroupsGet200ResponseGroupsInnerPermissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *V1GroupsPutRequest) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given V1GroupsGet200ResponseGroupsInnerPermissions and assigns it to the Permissions field.
func (o *V1GroupsPutRequest) SetPermissions(v V1GroupsGet200ResponseGroupsInnerPermissions) {
	o.Permissions = &v
}

// GetTimeWindowEnd returns the TimeWindowEnd field value if set, zero value otherwise.
func (o *V1GroupsPutRequest) GetTimeWindowEnd() int64 {
	if o == nil || IsNil(o.TimeWindowEnd) {
		var ret int64
		return ret
	}
	return *o.TimeWindowEnd
}

// GetTimeWindowEndOk returns a tuple with the TimeWindowEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsPutRequest) GetTimeWindowEndOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeWindowEnd) {
		return nil, false
	}
	return o.TimeWindowEnd, true
}

// HasTimeWindowEnd returns a boolean if a field has been set.
func (o *V1GroupsPutRequest) HasTimeWindowEnd() bool {
	if o != nil && !IsNil(o.TimeWindowEnd) {
		return true
	}

	return false
}

// SetTimeWindowEnd gets a reference to the given int64 and assigns it to the TimeWindowEnd field.
func (o *V1GroupsPutRequest) SetTimeWindowEnd(v int64) {
	o.TimeWindowEnd = &v
}

// GetTimeWindowStart returns the TimeWindowStart field value if set, zero value otherwise.
func (o *V1GroupsPutRequest) GetTimeWindowStart() int64 {
	if o == nil || IsNil(o.TimeWindowStart) {
		var ret int64
		return ret
	}
	return *o.TimeWindowStart
}

// GetTimeWindowStartOk returns a tuple with the TimeWindowStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsPutRequest) GetTimeWindowStartOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeWindowStart) {
		return nil, false
	}
	return o.TimeWindowStart, true
}

// HasTimeWindowStart returns a boolean if a field has been set.
func (o *V1GroupsPutRequest) HasTimeWindowStart() bool {
	if o != nil && !IsNil(o.TimeWindowStart) {
		return true
	}

	return false
}

// SetTimeWindowStart gets a reference to the given int64 and assigns it to the TimeWindowStart field.
func (o *V1GroupsPutRequest) SetTimeWindowStart(v int64) {
	o.TimeWindowStart = &v
}

func (o V1GroupsPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GroupsPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.GroupType) {
		toSerialize["groupType"] = o.GroupType
	}
	if !IsNil(o.ManagesEnterprises) {
		toSerialize["managesEnterprises"] = o.ManagesEnterprises
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.TimeWindowEnd) {
		toSerialize["timeWindowEnd"] = o.TimeWindowEnd
	}
	if !IsNil(o.TimeWindowStart) {
		toSerialize["timeWindowStart"] = o.TimeWindowStart
	}
	return toSerialize, nil
}

type NullableV1GroupsPutRequest struct {
	value *V1GroupsPutRequest
	isSet bool
}

func (v NullableV1GroupsPutRequest) Get() *V1GroupsPutRequest {
	return v.value
}

func (v *NullableV1GroupsPutRequest) Set(val *V1GroupsPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GroupsPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GroupsPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GroupsPutRequest(val *V1GroupsPutRequest) *NullableV1GroupsPutRequest {
	return &NullableV1GroupsPutRequest{value: val, isSet: true}
}

func (v NullableV1GroupsPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GroupsPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


