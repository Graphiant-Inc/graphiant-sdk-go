/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2IntegrationPostRequestIntegrationBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2IntegrationPostRequestIntegrationBody{}

// V2IntegrationPostRequestIntegrationBody struct for V2IntegrationPostRequestIntegrationBody
type V2IntegrationPostRequestIntegrationBody struct {
	CreatedBy *string `json:"createdBy,omitempty"`
	CreatedOn *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"createdOn,omitempty"`
	Details *V2IntegrationPostRequestIntegrationBodyDetails `json:"details,omitempty"`
	Enterprise *int64 `json:"enterprise,omitempty"`
	IntegrationType *string `json:"integrationType,omitempty"`
	IsActive *bool `json:"isActive,omitempty"`
	NickName *string `json:"nickName,omitempty"`
}

// NewV2IntegrationPostRequestIntegrationBody instantiates a new V2IntegrationPostRequestIntegrationBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2IntegrationPostRequestIntegrationBody() *V2IntegrationPostRequestIntegrationBody {
	this := V2IntegrationPostRequestIntegrationBody{}
	return &this
}

// NewV2IntegrationPostRequestIntegrationBodyWithDefaults instantiates a new V2IntegrationPostRequestIntegrationBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2IntegrationPostRequestIntegrationBodyWithDefaults() *V2IntegrationPostRequestIntegrationBody {
	this := V2IntegrationPostRequestIntegrationBody{}
	return &this
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *V2IntegrationPostRequestIntegrationBody) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2IntegrationPostRequestIntegrationBody) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *V2IntegrationPostRequestIntegrationBody) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *V2IntegrationPostRequestIntegrationBody) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *V2IntegrationPostRequestIntegrationBody) GetCreatedOn() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.CreatedOn) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2IntegrationPostRequestIntegrationBody) GetCreatedOnOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *V2IntegrationPostRequestIntegrationBody) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the CreatedOn field.
func (o *V2IntegrationPostRequestIntegrationBody) SetCreatedOn(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.CreatedOn = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *V2IntegrationPostRequestIntegrationBody) GetDetails() V2IntegrationPostRequestIntegrationBodyDetails {
	if o == nil || IsNil(o.Details) {
		var ret V2IntegrationPostRequestIntegrationBodyDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2IntegrationPostRequestIntegrationBody) GetDetailsOk() (*V2IntegrationPostRequestIntegrationBodyDetails, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *V2IntegrationPostRequestIntegrationBody) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given V2IntegrationPostRequestIntegrationBodyDetails and assigns it to the Details field.
func (o *V2IntegrationPostRequestIntegrationBody) SetDetails(v V2IntegrationPostRequestIntegrationBodyDetails) {
	o.Details = &v
}

// GetEnterprise returns the Enterprise field value if set, zero value otherwise.
func (o *V2IntegrationPostRequestIntegrationBody) GetEnterprise() int64 {
	if o == nil || IsNil(o.Enterprise) {
		var ret int64
		return ret
	}
	return *o.Enterprise
}

// GetEnterpriseOk returns a tuple with the Enterprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2IntegrationPostRequestIntegrationBody) GetEnterpriseOk() (*int64, bool) {
	if o == nil || IsNil(o.Enterprise) {
		return nil, false
	}
	return o.Enterprise, true
}

// HasEnterprise returns a boolean if a field has been set.
func (o *V2IntegrationPostRequestIntegrationBody) HasEnterprise() bool {
	if o != nil && !IsNil(o.Enterprise) {
		return true
	}

	return false
}

// SetEnterprise gets a reference to the given int64 and assigns it to the Enterprise field.
func (o *V2IntegrationPostRequestIntegrationBody) SetEnterprise(v int64) {
	o.Enterprise = &v
}

// GetIntegrationType returns the IntegrationType field value if set, zero value otherwise.
func (o *V2IntegrationPostRequestIntegrationBody) GetIntegrationType() string {
	if o == nil || IsNil(o.IntegrationType) {
		var ret string
		return ret
	}
	return *o.IntegrationType
}

// GetIntegrationTypeOk returns a tuple with the IntegrationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2IntegrationPostRequestIntegrationBody) GetIntegrationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IntegrationType) {
		return nil, false
	}
	return o.IntegrationType, true
}

// HasIntegrationType returns a boolean if a field has been set.
func (o *V2IntegrationPostRequestIntegrationBody) HasIntegrationType() bool {
	if o != nil && !IsNil(o.IntegrationType) {
		return true
	}

	return false
}

// SetIntegrationType gets a reference to the given string and assigns it to the IntegrationType field.
func (o *V2IntegrationPostRequestIntegrationBody) SetIntegrationType(v string) {
	o.IntegrationType = &v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise.
func (o *V2IntegrationPostRequestIntegrationBody) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive) {
		var ret bool
		return ret
	}
	return *o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2IntegrationPostRequestIntegrationBody) GetIsActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsActive) {
		return nil, false
	}
	return o.IsActive, true
}

// HasIsActive returns a boolean if a field has been set.
func (o *V2IntegrationPostRequestIntegrationBody) HasIsActive() bool {
	if o != nil && !IsNil(o.IsActive) {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given bool and assigns it to the IsActive field.
func (o *V2IntegrationPostRequestIntegrationBody) SetIsActive(v bool) {
	o.IsActive = &v
}

// GetNickName returns the NickName field value if set, zero value otherwise.
func (o *V2IntegrationPostRequestIntegrationBody) GetNickName() string {
	if o == nil || IsNil(o.NickName) {
		var ret string
		return ret
	}
	return *o.NickName
}

// GetNickNameOk returns a tuple with the NickName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2IntegrationPostRequestIntegrationBody) GetNickNameOk() (*string, bool) {
	if o == nil || IsNil(o.NickName) {
		return nil, false
	}
	return o.NickName, true
}

// HasNickName returns a boolean if a field has been set.
func (o *V2IntegrationPostRequestIntegrationBody) HasNickName() bool {
	if o != nil && !IsNil(o.NickName) {
		return true
	}

	return false
}

// SetNickName gets a reference to the given string and assigns it to the NickName field.
func (o *V2IntegrationPostRequestIntegrationBody) SetNickName(v string) {
	o.NickName = &v
}

func (o V2IntegrationPostRequestIntegrationBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2IntegrationPostRequestIntegrationBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Enterprise) {
		toSerialize["enterprise"] = o.Enterprise
	}
	if !IsNil(o.IntegrationType) {
		toSerialize["integrationType"] = o.IntegrationType
	}
	if !IsNil(o.IsActive) {
		toSerialize["isActive"] = o.IsActive
	}
	if !IsNil(o.NickName) {
		toSerialize["nickName"] = o.NickName
	}
	return toSerialize, nil
}

type NullableV2IntegrationPostRequestIntegrationBody struct {
	value *V2IntegrationPostRequestIntegrationBody
	isSet bool
}

func (v NullableV2IntegrationPostRequestIntegrationBody) Get() *V2IntegrationPostRequestIntegrationBody {
	return v.value
}

func (v *NullableV2IntegrationPostRequestIntegrationBody) Set(val *V2IntegrationPostRequestIntegrationBody) {
	v.value = val
	v.isSet = true
}

func (v NullableV2IntegrationPostRequestIntegrationBody) IsSet() bool {
	return v.isSet
}

func (v *NullableV2IntegrationPostRequestIntegrationBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2IntegrationPostRequestIntegrationBody(val *V2IntegrationPostRequestIntegrationBody) *NullableV2IntegrationPostRequestIntegrationBody {
	return &NullableV2IntegrationPostRequestIntegrationBody{value: val, isSet: true}
}

func (v NullableV2IntegrationPostRequestIntegrationBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2IntegrationPostRequestIntegrationBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


