/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2RulelistPost200ResponseRuleListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2RulelistPost200ResponseRuleListInner{}

// V2RulelistPost200ResponseRuleListInner struct for V2RulelistPost200ResponseRuleListInner
type V2RulelistPost200ResponseRuleListInner struct {
	AlarmClear *string `json:"alarmClear,omitempty"`
	AlarmSet *string `json:"alarmSet,omitempty"`
	AllowCount *int64 `json:"allowCount,omitempty"`
	Category *string `json:"category,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Plane *string `json:"plane,omitempty"`
	Priority *string `json:"priority,omitempty"`
	RuleId *string `json:"ruleId,omitempty"`
	RuleName *string `json:"ruleName,omitempty"`
}

// NewV2RulelistPost200ResponseRuleListInner instantiates a new V2RulelistPost200ResponseRuleListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2RulelistPost200ResponseRuleListInner() *V2RulelistPost200ResponseRuleListInner {
	this := V2RulelistPost200ResponseRuleListInner{}
	return &this
}

// NewV2RulelistPost200ResponseRuleListInnerWithDefaults instantiates a new V2RulelistPost200ResponseRuleListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2RulelistPost200ResponseRuleListInnerWithDefaults() *V2RulelistPost200ResponseRuleListInner {
	this := V2RulelistPost200ResponseRuleListInner{}
	return &this
}

// GetAlarmClear returns the AlarmClear field value if set, zero value otherwise.
func (o *V2RulelistPost200ResponseRuleListInner) GetAlarmClear() string {
	if o == nil || IsNil(o.AlarmClear) {
		var ret string
		return ret
	}
	return *o.AlarmClear
}

// GetAlarmClearOk returns a tuple with the AlarmClear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2RulelistPost200ResponseRuleListInner) GetAlarmClearOk() (*string, bool) {
	if o == nil || IsNil(o.AlarmClear) {
		return nil, false
	}
	return o.AlarmClear, true
}

// HasAlarmClear returns a boolean if a field has been set.
func (o *V2RulelistPost200ResponseRuleListInner) HasAlarmClear() bool {
	if o != nil && !IsNil(o.AlarmClear) {
		return true
	}

	return false
}

// SetAlarmClear gets a reference to the given string and assigns it to the AlarmClear field.
func (o *V2RulelistPost200ResponseRuleListInner) SetAlarmClear(v string) {
	o.AlarmClear = &v
}

// GetAlarmSet returns the AlarmSet field value if set, zero value otherwise.
func (o *V2RulelistPost200ResponseRuleListInner) GetAlarmSet() string {
	if o == nil || IsNil(o.AlarmSet) {
		var ret string
		return ret
	}
	return *o.AlarmSet
}

// GetAlarmSetOk returns a tuple with the AlarmSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2RulelistPost200ResponseRuleListInner) GetAlarmSetOk() (*string, bool) {
	if o == nil || IsNil(o.AlarmSet) {
		return nil, false
	}
	return o.AlarmSet, true
}

// HasAlarmSet returns a boolean if a field has been set.
func (o *V2RulelistPost200ResponseRuleListInner) HasAlarmSet() bool {
	if o != nil && !IsNil(o.AlarmSet) {
		return true
	}

	return false
}

// SetAlarmSet gets a reference to the given string and assigns it to the AlarmSet field.
func (o *V2RulelistPost200ResponseRuleListInner) SetAlarmSet(v string) {
	o.AlarmSet = &v
}

// GetAllowCount returns the AllowCount field value if set, zero value otherwise.
func (o *V2RulelistPost200ResponseRuleListInner) GetAllowCount() int64 {
	if o == nil || IsNil(o.AllowCount) {
		var ret int64
		return ret
	}
	return *o.AllowCount
}

// GetAllowCountOk returns a tuple with the AllowCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2RulelistPost200ResponseRuleListInner) GetAllowCountOk() (*int64, bool) {
	if o == nil || IsNil(o.AllowCount) {
		return nil, false
	}
	return o.AllowCount, true
}

// HasAllowCount returns a boolean if a field has been set.
func (o *V2RulelistPost200ResponseRuleListInner) HasAllowCount() bool {
	if o != nil && !IsNil(o.AllowCount) {
		return true
	}

	return false
}

// SetAllowCount gets a reference to the given int64 and assigns it to the AllowCount field.
func (o *V2RulelistPost200ResponseRuleListInner) SetAllowCount(v int64) {
	o.AllowCount = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *V2RulelistPost200ResponseRuleListInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2RulelistPost200ResponseRuleListInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *V2RulelistPost200ResponseRuleListInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *V2RulelistPost200ResponseRuleListInner) SetCategory(v string) {
	o.Category = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *V2RulelistPost200ResponseRuleListInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2RulelistPost200ResponseRuleListInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *V2RulelistPost200ResponseRuleListInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *V2RulelistPost200ResponseRuleListInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetPlane returns the Plane field value if set, zero value otherwise.
func (o *V2RulelistPost200ResponseRuleListInner) GetPlane() string {
	if o == nil || IsNil(o.Plane) {
		var ret string
		return ret
	}
	return *o.Plane
}

// GetPlaneOk returns a tuple with the Plane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2RulelistPost200ResponseRuleListInner) GetPlaneOk() (*string, bool) {
	if o == nil || IsNil(o.Plane) {
		return nil, false
	}
	return o.Plane, true
}

// HasPlane returns a boolean if a field has been set.
func (o *V2RulelistPost200ResponseRuleListInner) HasPlane() bool {
	if o != nil && !IsNil(o.Plane) {
		return true
	}

	return false
}

// SetPlane gets a reference to the given string and assigns it to the Plane field.
func (o *V2RulelistPost200ResponseRuleListInner) SetPlane(v string) {
	o.Plane = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *V2RulelistPost200ResponseRuleListInner) GetPriority() string {
	if o == nil || IsNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2RulelistPost200ResponseRuleListInner) GetPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *V2RulelistPost200ResponseRuleListInner) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *V2RulelistPost200ResponseRuleListInner) SetPriority(v string) {
	o.Priority = &v
}

// GetRuleId returns the RuleId field value if set, zero value otherwise.
func (o *V2RulelistPost200ResponseRuleListInner) GetRuleId() string {
	if o == nil || IsNil(o.RuleId) {
		var ret string
		return ret
	}
	return *o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2RulelistPost200ResponseRuleListInner) GetRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RuleId) {
		return nil, false
	}
	return o.RuleId, true
}

// HasRuleId returns a boolean if a field has been set.
func (o *V2RulelistPost200ResponseRuleListInner) HasRuleId() bool {
	if o != nil && !IsNil(o.RuleId) {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given string and assigns it to the RuleId field.
func (o *V2RulelistPost200ResponseRuleListInner) SetRuleId(v string) {
	o.RuleId = &v
}

// GetRuleName returns the RuleName field value if set, zero value otherwise.
func (o *V2RulelistPost200ResponseRuleListInner) GetRuleName() string {
	if o == nil || IsNil(o.RuleName) {
		var ret string
		return ret
	}
	return *o.RuleName
}

// GetRuleNameOk returns a tuple with the RuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2RulelistPost200ResponseRuleListInner) GetRuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.RuleName) {
		return nil, false
	}
	return o.RuleName, true
}

// HasRuleName returns a boolean if a field has been set.
func (o *V2RulelistPost200ResponseRuleListInner) HasRuleName() bool {
	if o != nil && !IsNil(o.RuleName) {
		return true
	}

	return false
}

// SetRuleName gets a reference to the given string and assigns it to the RuleName field.
func (o *V2RulelistPost200ResponseRuleListInner) SetRuleName(v string) {
	o.RuleName = &v
}

func (o V2RulelistPost200ResponseRuleListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2RulelistPost200ResponseRuleListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlarmClear) {
		toSerialize["alarmClear"] = o.AlarmClear
	}
	if !IsNil(o.AlarmSet) {
		toSerialize["alarmSet"] = o.AlarmSet
	}
	if !IsNil(o.AllowCount) {
		toSerialize["allowCount"] = o.AllowCount
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Plane) {
		toSerialize["plane"] = o.Plane
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.RuleId) {
		toSerialize["ruleId"] = o.RuleId
	}
	if !IsNil(o.RuleName) {
		toSerialize["ruleName"] = o.RuleName
	}
	return toSerialize, nil
}

type NullableV2RulelistPost200ResponseRuleListInner struct {
	value *V2RulelistPost200ResponseRuleListInner
	isSet bool
}

func (v NullableV2RulelistPost200ResponseRuleListInner) Get() *V2RulelistPost200ResponseRuleListInner {
	return v.value
}

func (v *NullableV2RulelistPost200ResponseRuleListInner) Set(val *V2RulelistPost200ResponseRuleListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2RulelistPost200ResponseRuleListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2RulelistPost200ResponseRuleListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2RulelistPost200ResponseRuleListInner(val *V2RulelistPost200ResponseRuleListInner) *NullableV2RulelistPost200ResponseRuleListInner {
	return &NullableV2RulelistPost200ResponseRuleListInner{value: val, isSet: true}
}

func (v NullableV2RulelistPost200ResponseRuleListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2RulelistPost200ResponseRuleListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


