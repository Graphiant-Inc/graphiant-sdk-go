/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AssistantGetConversationDetailsPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AssistantGetConversationDetailsPost200Response{}

// V2AssistantGetConversationDetailsPost200Response struct for V2AssistantGetConversationDetailsPost200Response
type V2AssistantGetConversationDetailsPost200Response struct {
	ConversationId *string `json:"conversationId,omitempty"`
	ResponseList []V2AssistantAddToConversationPost200Response `json:"responseList,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewV2AssistantGetConversationDetailsPost200Response instantiates a new V2AssistantGetConversationDetailsPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssistantGetConversationDetailsPost200Response() *V2AssistantGetConversationDetailsPost200Response {
	this := V2AssistantGetConversationDetailsPost200Response{}
	return &this
}

// NewV2AssistantGetConversationDetailsPost200ResponseWithDefaults instantiates a new V2AssistantGetConversationDetailsPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssistantGetConversationDetailsPost200ResponseWithDefaults() *V2AssistantGetConversationDetailsPost200Response {
	this := V2AssistantGetConversationDetailsPost200Response{}
	return &this
}

// GetConversationId returns the ConversationId field value if set, zero value otherwise.
func (o *V2AssistantGetConversationDetailsPost200Response) GetConversationId() string {
	if o == nil || IsNil(o.ConversationId) {
		var ret string
		return ret
	}
	return *o.ConversationId
}

// GetConversationIdOk returns a tuple with the ConversationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantGetConversationDetailsPost200Response) GetConversationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConversationId) {
		return nil, false
	}
	return o.ConversationId, true
}

// HasConversationId returns a boolean if a field has been set.
func (o *V2AssistantGetConversationDetailsPost200Response) HasConversationId() bool {
	if o != nil && !IsNil(o.ConversationId) {
		return true
	}

	return false
}

// SetConversationId gets a reference to the given string and assigns it to the ConversationId field.
func (o *V2AssistantGetConversationDetailsPost200Response) SetConversationId(v string) {
	o.ConversationId = &v
}

// GetResponseList returns the ResponseList field value if set, zero value otherwise.
func (o *V2AssistantGetConversationDetailsPost200Response) GetResponseList() []V2AssistantAddToConversationPost200Response {
	if o == nil || IsNil(o.ResponseList) {
		var ret []V2AssistantAddToConversationPost200Response
		return ret
	}
	return o.ResponseList
}

// GetResponseListOk returns a tuple with the ResponseList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantGetConversationDetailsPost200Response) GetResponseListOk() ([]V2AssistantAddToConversationPost200Response, bool) {
	if o == nil || IsNil(o.ResponseList) {
		return nil, false
	}
	return o.ResponseList, true
}

// HasResponseList returns a boolean if a field has been set.
func (o *V2AssistantGetConversationDetailsPost200Response) HasResponseList() bool {
	if o != nil && !IsNil(o.ResponseList) {
		return true
	}

	return false
}

// SetResponseList gets a reference to the given []V2AssistantAddToConversationPost200Response and assigns it to the ResponseList field.
func (o *V2AssistantGetConversationDetailsPost200Response) SetResponseList(v []V2AssistantAddToConversationPost200Response) {
	o.ResponseList = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *V2AssistantGetConversationDetailsPost200Response) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantGetConversationDetailsPost200Response) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *V2AssistantGetConversationDetailsPost200Response) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *V2AssistantGetConversationDetailsPost200Response) SetUserId(v string) {
	o.UserId = &v
}

func (o V2AssistantGetConversationDetailsPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AssistantGetConversationDetailsPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConversationId) {
		toSerialize["conversationId"] = o.ConversationId
	}
	if !IsNil(o.ResponseList) {
		toSerialize["responseList"] = o.ResponseList
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableV2AssistantGetConversationDetailsPost200Response struct {
	value *V2AssistantGetConversationDetailsPost200Response
	isSet bool
}

func (v NullableV2AssistantGetConversationDetailsPost200Response) Get() *V2AssistantGetConversationDetailsPost200Response {
	return v.value
}

func (v *NullableV2AssistantGetConversationDetailsPost200Response) Set(val *V2AssistantGetConversationDetailsPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssistantGetConversationDetailsPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssistantGetConversationDetailsPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssistantGetConversationDetailsPost200Response(val *V2AssistantGetConversationDetailsPost200Response) *NullableV2AssistantGetConversationDetailsPost200Response {
	return &NullableV2AssistantGetConversationDetailsPost200Response{value: val, isSet: true}
}

func (v NullableV2AssistantGetConversationDetailsPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssistantGetConversationDetailsPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


