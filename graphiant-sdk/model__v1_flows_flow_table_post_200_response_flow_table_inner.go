/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1FlowsFlowTablePost200ResponseFlowTableInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1FlowsFlowTablePost200ResponseFlowTableInner{}

// V1FlowsFlowTablePost200ResponseFlowTableInner struct for V1FlowsFlowTablePost200ResponseFlowTableInner
type V1FlowsFlowTablePost200ResponseFlowTableInner struct {
	DestIp *string `json:"destIp,omitempty"`
	DestPort *int32 `json:"destPort,omitempty"`
	DlCircuitName *string `json:"dlCircuitName,omitempty"`
	DlUsage *float64 `json:"dlUsage,omitempty"`
	EgressLocalCoreRegion *string `json:"egressLocalCoreRegion,omitempty"`
	IngressLocalCoreRegion *string `json:"ingressLocalCoreRegion,omitempty"`
	LanSegment *string `json:"lanSegment,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
	RemoteCoreRegion *string `json:"remoteCoreRegion,omitempty"`
	SlaClass *string `json:"slaClass,omitempty"`
	SrcIp *string `json:"srcIp,omitempty"`
	SrcPort *int32 `json:"srcPort,omitempty"`
	Ts *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"ts,omitempty"`
	UlCircuitName *string `json:"ulCircuitName,omitempty"`
	UlUsage *float64 `json:"ulUsage,omitempty"`
}

// NewV1FlowsFlowTablePost200ResponseFlowTableInner instantiates a new V1FlowsFlowTablePost200ResponseFlowTableInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1FlowsFlowTablePost200ResponseFlowTableInner() *V1FlowsFlowTablePost200ResponseFlowTableInner {
	this := V1FlowsFlowTablePost200ResponseFlowTableInner{}
	return &this
}

// NewV1FlowsFlowTablePost200ResponseFlowTableInnerWithDefaults instantiates a new V1FlowsFlowTablePost200ResponseFlowTableInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1FlowsFlowTablePost200ResponseFlowTableInnerWithDefaults() *V1FlowsFlowTablePost200ResponseFlowTableInner {
	this := V1FlowsFlowTablePost200ResponseFlowTableInner{}
	return &this
}

// GetDestIp returns the DestIp field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetDestIp() string {
	if o == nil || IsNil(o.DestIp) {
		var ret string
		return ret
	}
	return *o.DestIp
}

// GetDestIpOk returns a tuple with the DestIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetDestIpOk() (*string, bool) {
	if o == nil || IsNil(o.DestIp) {
		return nil, false
	}
	return o.DestIp, true
}

// HasDestIp returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasDestIp() bool {
	if o != nil && !IsNil(o.DestIp) {
		return true
	}

	return false
}

// SetDestIp gets a reference to the given string and assigns it to the DestIp field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetDestIp(v string) {
	o.DestIp = &v
}

// GetDestPort returns the DestPort field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetDestPort() int32 {
	if o == nil || IsNil(o.DestPort) {
		var ret int32
		return ret
	}
	return *o.DestPort
}

// GetDestPortOk returns a tuple with the DestPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetDestPortOk() (*int32, bool) {
	if o == nil || IsNil(o.DestPort) {
		return nil, false
	}
	return o.DestPort, true
}

// HasDestPort returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasDestPort() bool {
	if o != nil && !IsNil(o.DestPort) {
		return true
	}

	return false
}

// SetDestPort gets a reference to the given int32 and assigns it to the DestPort field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetDestPort(v int32) {
	o.DestPort = &v
}

// GetDlCircuitName returns the DlCircuitName field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetDlCircuitName() string {
	if o == nil || IsNil(o.DlCircuitName) {
		var ret string
		return ret
	}
	return *o.DlCircuitName
}

// GetDlCircuitNameOk returns a tuple with the DlCircuitName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetDlCircuitNameOk() (*string, bool) {
	if o == nil || IsNil(o.DlCircuitName) {
		return nil, false
	}
	return o.DlCircuitName, true
}

// HasDlCircuitName returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasDlCircuitName() bool {
	if o != nil && !IsNil(o.DlCircuitName) {
		return true
	}

	return false
}

// SetDlCircuitName gets a reference to the given string and assigns it to the DlCircuitName field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetDlCircuitName(v string) {
	o.DlCircuitName = &v
}

// GetDlUsage returns the DlUsage field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetDlUsage() float64 {
	if o == nil || IsNil(o.DlUsage) {
		var ret float64
		return ret
	}
	return *o.DlUsage
}

// GetDlUsageOk returns a tuple with the DlUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetDlUsageOk() (*float64, bool) {
	if o == nil || IsNil(o.DlUsage) {
		return nil, false
	}
	return o.DlUsage, true
}

// HasDlUsage returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasDlUsage() bool {
	if o != nil && !IsNil(o.DlUsage) {
		return true
	}

	return false
}

// SetDlUsage gets a reference to the given float64 and assigns it to the DlUsage field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetDlUsage(v float64) {
	o.DlUsage = &v
}

// GetEgressLocalCoreRegion returns the EgressLocalCoreRegion field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetEgressLocalCoreRegion() string {
	if o == nil || IsNil(o.EgressLocalCoreRegion) {
		var ret string
		return ret
	}
	return *o.EgressLocalCoreRegion
}

// GetEgressLocalCoreRegionOk returns a tuple with the EgressLocalCoreRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetEgressLocalCoreRegionOk() (*string, bool) {
	if o == nil || IsNil(o.EgressLocalCoreRegion) {
		return nil, false
	}
	return o.EgressLocalCoreRegion, true
}

// HasEgressLocalCoreRegion returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasEgressLocalCoreRegion() bool {
	if o != nil && !IsNil(o.EgressLocalCoreRegion) {
		return true
	}

	return false
}

// SetEgressLocalCoreRegion gets a reference to the given string and assigns it to the EgressLocalCoreRegion field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetEgressLocalCoreRegion(v string) {
	o.EgressLocalCoreRegion = &v
}

// GetIngressLocalCoreRegion returns the IngressLocalCoreRegion field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetIngressLocalCoreRegion() string {
	if o == nil || IsNil(o.IngressLocalCoreRegion) {
		var ret string
		return ret
	}
	return *o.IngressLocalCoreRegion
}

// GetIngressLocalCoreRegionOk returns a tuple with the IngressLocalCoreRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetIngressLocalCoreRegionOk() (*string, bool) {
	if o == nil || IsNil(o.IngressLocalCoreRegion) {
		return nil, false
	}
	return o.IngressLocalCoreRegion, true
}

// HasIngressLocalCoreRegion returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasIngressLocalCoreRegion() bool {
	if o != nil && !IsNil(o.IngressLocalCoreRegion) {
		return true
	}

	return false
}

// SetIngressLocalCoreRegion gets a reference to the given string and assigns it to the IngressLocalCoreRegion field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetIngressLocalCoreRegion(v string) {
	o.IngressLocalCoreRegion = &v
}

// GetLanSegment returns the LanSegment field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetLanSegment() string {
	if o == nil || IsNil(o.LanSegment) {
		var ret string
		return ret
	}
	return *o.LanSegment
}

// GetLanSegmentOk returns a tuple with the LanSegment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetLanSegmentOk() (*string, bool) {
	if o == nil || IsNil(o.LanSegment) {
		return nil, false
	}
	return o.LanSegment, true
}

// HasLanSegment returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasLanSegment() bool {
	if o != nil && !IsNil(o.LanSegment) {
		return true
	}

	return false
}

// SetLanSegment gets a reference to the given string and assigns it to the LanSegment field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetLanSegment(v string) {
	o.LanSegment = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetProtocol(v string) {
	o.Protocol = &v
}

// GetRemoteCoreRegion returns the RemoteCoreRegion field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetRemoteCoreRegion() string {
	if o == nil || IsNil(o.RemoteCoreRegion) {
		var ret string
		return ret
	}
	return *o.RemoteCoreRegion
}

// GetRemoteCoreRegionOk returns a tuple with the RemoteCoreRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetRemoteCoreRegionOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteCoreRegion) {
		return nil, false
	}
	return o.RemoteCoreRegion, true
}

// HasRemoteCoreRegion returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasRemoteCoreRegion() bool {
	if o != nil && !IsNil(o.RemoteCoreRegion) {
		return true
	}

	return false
}

// SetRemoteCoreRegion gets a reference to the given string and assigns it to the RemoteCoreRegion field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetRemoteCoreRegion(v string) {
	o.RemoteCoreRegion = &v
}

// GetSlaClass returns the SlaClass field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetSlaClass() string {
	if o == nil || IsNil(o.SlaClass) {
		var ret string
		return ret
	}
	return *o.SlaClass
}

// GetSlaClassOk returns a tuple with the SlaClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetSlaClassOk() (*string, bool) {
	if o == nil || IsNil(o.SlaClass) {
		return nil, false
	}
	return o.SlaClass, true
}

// HasSlaClass returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasSlaClass() bool {
	if o != nil && !IsNil(o.SlaClass) {
		return true
	}

	return false
}

// SetSlaClass gets a reference to the given string and assigns it to the SlaClass field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetSlaClass(v string) {
	o.SlaClass = &v
}

// GetSrcIp returns the SrcIp field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetSrcIp() string {
	if o == nil || IsNil(o.SrcIp) {
		var ret string
		return ret
	}
	return *o.SrcIp
}

// GetSrcIpOk returns a tuple with the SrcIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetSrcIpOk() (*string, bool) {
	if o == nil || IsNil(o.SrcIp) {
		return nil, false
	}
	return o.SrcIp, true
}

// HasSrcIp returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasSrcIp() bool {
	if o != nil && !IsNil(o.SrcIp) {
		return true
	}

	return false
}

// SetSrcIp gets a reference to the given string and assigns it to the SrcIp field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetSrcIp(v string) {
	o.SrcIp = &v
}

// GetSrcPort returns the SrcPort field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetSrcPort() int32 {
	if o == nil || IsNil(o.SrcPort) {
		var ret int32
		return ret
	}
	return *o.SrcPort
}

// GetSrcPortOk returns a tuple with the SrcPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetSrcPortOk() (*int32, bool) {
	if o == nil || IsNil(o.SrcPort) {
		return nil, false
	}
	return o.SrcPort, true
}

// HasSrcPort returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasSrcPort() bool {
	if o != nil && !IsNil(o.SrcPort) {
		return true
	}

	return false
}

// SetSrcPort gets a reference to the given int32 and assigns it to the SrcPort field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetSrcPort(v int32) {
	o.SrcPort = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.Ts) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the Ts field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.Ts = &v
}

// GetUlCircuitName returns the UlCircuitName field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetUlCircuitName() string {
	if o == nil || IsNil(o.UlCircuitName) {
		var ret string
		return ret
	}
	return *o.UlCircuitName
}

// GetUlCircuitNameOk returns a tuple with the UlCircuitName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetUlCircuitNameOk() (*string, bool) {
	if o == nil || IsNil(o.UlCircuitName) {
		return nil, false
	}
	return o.UlCircuitName, true
}

// HasUlCircuitName returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasUlCircuitName() bool {
	if o != nil && !IsNil(o.UlCircuitName) {
		return true
	}

	return false
}

// SetUlCircuitName gets a reference to the given string and assigns it to the UlCircuitName field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetUlCircuitName(v string) {
	o.UlCircuitName = &v
}

// GetUlUsage returns the UlUsage field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetUlUsage() float64 {
	if o == nil || IsNil(o.UlUsage) {
		var ret float64
		return ret
	}
	return *o.UlUsage
}

// GetUlUsageOk returns a tuple with the UlUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) GetUlUsageOk() (*float64, bool) {
	if o == nil || IsNil(o.UlUsage) {
		return nil, false
	}
	return o.UlUsage, true
}

// HasUlUsage returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) HasUlUsage() bool {
	if o != nil && !IsNil(o.UlUsage) {
		return true
	}

	return false
}

// SetUlUsage gets a reference to the given float64 and assigns it to the UlUsage field.
func (o *V1FlowsFlowTablePost200ResponseFlowTableInner) SetUlUsage(v float64) {
	o.UlUsage = &v
}

func (o V1FlowsFlowTablePost200ResponseFlowTableInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1FlowsFlowTablePost200ResponseFlowTableInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestIp) {
		toSerialize["destIp"] = o.DestIp
	}
	if !IsNil(o.DestPort) {
		toSerialize["destPort"] = o.DestPort
	}
	if !IsNil(o.DlCircuitName) {
		toSerialize["dlCircuitName"] = o.DlCircuitName
	}
	if !IsNil(o.DlUsage) {
		toSerialize["dlUsage"] = o.DlUsage
	}
	if !IsNil(o.EgressLocalCoreRegion) {
		toSerialize["egressLocalCoreRegion"] = o.EgressLocalCoreRegion
	}
	if !IsNil(o.IngressLocalCoreRegion) {
		toSerialize["ingressLocalCoreRegion"] = o.IngressLocalCoreRegion
	}
	if !IsNil(o.LanSegment) {
		toSerialize["lanSegment"] = o.LanSegment
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.RemoteCoreRegion) {
		toSerialize["remoteCoreRegion"] = o.RemoteCoreRegion
	}
	if !IsNil(o.SlaClass) {
		toSerialize["slaClass"] = o.SlaClass
	}
	if !IsNil(o.SrcIp) {
		toSerialize["srcIp"] = o.SrcIp
	}
	if !IsNil(o.SrcPort) {
		toSerialize["srcPort"] = o.SrcPort
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	if !IsNil(o.UlCircuitName) {
		toSerialize["ulCircuitName"] = o.UlCircuitName
	}
	if !IsNil(o.UlUsage) {
		toSerialize["ulUsage"] = o.UlUsage
	}
	return toSerialize, nil
}

type NullableV1FlowsFlowTablePost200ResponseFlowTableInner struct {
	value *V1FlowsFlowTablePost200ResponseFlowTableInner
	isSet bool
}

func (v NullableV1FlowsFlowTablePost200ResponseFlowTableInner) Get() *V1FlowsFlowTablePost200ResponseFlowTableInner {
	return v.value
}

func (v *NullableV1FlowsFlowTablePost200ResponseFlowTableInner) Set(val *V1FlowsFlowTablePost200ResponseFlowTableInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1FlowsFlowTablePost200ResponseFlowTableInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1FlowsFlowTablePost200ResponseFlowTableInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1FlowsFlowTablePost200ResponseFlowTableInner(val *V1FlowsFlowTablePost200ResponseFlowTableInner) *NullableV1FlowsFlowTablePost200ResponseFlowTableInner {
	return &NullableV1FlowsFlowTablePost200ResponseFlowTableInner{value: val, isSet: true}
}

func (v NullableV1FlowsFlowTablePost200ResponseFlowTableInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1FlowsFlowTablePost200ResponseFlowTableInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


