/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1SoftwareRunningDetailsGet200ResponseDevicesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SoftwareRunningDetailsGet200ResponseDevicesInner{}

// V1SoftwareRunningDetailsGet200ResponseDevicesInner struct for V1SoftwareRunningDetailsGet200ResponseDevicesInner
type V1SoftwareRunningDetailsGet200ResponseDevicesInner struct {
	DeviceId *int64 `json:"deviceId,omitempty"`
	EnterpriseId *int64 `json:"enterpriseId,omitempty"`
	EnterpriseName *string `json:"enterpriseName,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
}

// NewV1SoftwareRunningDetailsGet200ResponseDevicesInner instantiates a new V1SoftwareRunningDetailsGet200ResponseDevicesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SoftwareRunningDetailsGet200ResponseDevicesInner() *V1SoftwareRunningDetailsGet200ResponseDevicesInner {
	this := V1SoftwareRunningDetailsGet200ResponseDevicesInner{}
	return &this
}

// NewV1SoftwareRunningDetailsGet200ResponseDevicesInnerWithDefaults instantiates a new V1SoftwareRunningDetailsGet200ResponseDevicesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SoftwareRunningDetailsGet200ResponseDevicesInnerWithDefaults() *V1SoftwareRunningDetailsGet200ResponseDevicesInner {
	this := V1SoftwareRunningDetailsGet200ResponseDevicesInner{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) GetEnterpriseId() int64 {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret int64
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) GetEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given int64 and assigns it to the EnterpriseId field.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) SetEnterpriseId(v int64) {
	o.EnterpriseId = &v
}

// GetEnterpriseName returns the EnterpriseName field value if set, zero value otherwise.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) GetEnterpriseName() string {
	if o == nil || IsNil(o.EnterpriseName) {
		var ret string
		return ret
	}
	return *o.EnterpriseName
}

// GetEnterpriseNameOk returns a tuple with the EnterpriseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) GetEnterpriseNameOk() (*string, bool) {
	if o == nil || IsNil(o.EnterpriseName) {
		return nil, false
	}
	return o.EnterpriseName, true
}

// HasEnterpriseName returns a boolean if a field has been set.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) HasEnterpriseName() bool {
	if o != nil && !IsNil(o.EnterpriseName) {
		return true
	}

	return false
}

// SetEnterpriseName gets a reference to the given string and assigns it to the EnterpriseName field.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) SetEnterpriseName(v string) {
	o.EnterpriseName = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *V1SoftwareRunningDetailsGet200ResponseDevicesInner) SetHostname(v string) {
	o.Hostname = &v
}

func (o V1SoftwareRunningDetailsGet200ResponseDevicesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SoftwareRunningDetailsGet200ResponseDevicesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterpriseId"] = o.EnterpriseId
	}
	if !IsNil(o.EnterpriseName) {
		toSerialize["enterpriseName"] = o.EnterpriseName
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	return toSerialize, nil
}

type NullableV1SoftwareRunningDetailsGet200ResponseDevicesInner struct {
	value *V1SoftwareRunningDetailsGet200ResponseDevicesInner
	isSet bool
}

func (v NullableV1SoftwareRunningDetailsGet200ResponseDevicesInner) Get() *V1SoftwareRunningDetailsGet200ResponseDevicesInner {
	return v.value
}

func (v *NullableV1SoftwareRunningDetailsGet200ResponseDevicesInner) Set(val *V1SoftwareRunningDetailsGet200ResponseDevicesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SoftwareRunningDetailsGet200ResponseDevicesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SoftwareRunningDetailsGet200ResponseDevicesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SoftwareRunningDetailsGet200ResponseDevicesInner(val *V1SoftwareRunningDetailsGet200ResponseDevicesInner) *NullableV1SoftwareRunningDetailsGet200ResponseDevicesInner {
	return &NullableV1SoftwareRunningDetailsGet200ResponseDevicesInner{value: val, isSet: true}
}

func (v NullableV1SoftwareRunningDetailsGet200ResponseDevicesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SoftwareRunningDetailsGet200ResponseDevicesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


