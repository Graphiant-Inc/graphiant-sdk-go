/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1AppsDeviceDeviceIdTopPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AppsDeviceDeviceIdTopPost200Response{}

// V1AppsDeviceDeviceIdTopPost200Response struct for V1AppsDeviceDeviceIdTopPost200Response
type V1AppsDeviceDeviceIdTopPost200Response struct {
	AppsUtilization []V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner `json:"appsUtilization,omitempty"`
	TotalCount *int64 `json:"totalCount,omitempty"`
}

// NewV1AppsDeviceDeviceIdTopPost200Response instantiates a new V1AppsDeviceDeviceIdTopPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AppsDeviceDeviceIdTopPost200Response() *V1AppsDeviceDeviceIdTopPost200Response {
	this := V1AppsDeviceDeviceIdTopPost200Response{}
	return &this
}

// NewV1AppsDeviceDeviceIdTopPost200ResponseWithDefaults instantiates a new V1AppsDeviceDeviceIdTopPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AppsDeviceDeviceIdTopPost200ResponseWithDefaults() *V1AppsDeviceDeviceIdTopPost200Response {
	this := V1AppsDeviceDeviceIdTopPost200Response{}
	return &this
}

// GetAppsUtilization returns the AppsUtilization field value if set, zero value otherwise.
func (o *V1AppsDeviceDeviceIdTopPost200Response) GetAppsUtilization() []V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner {
	if o == nil || IsNil(o.AppsUtilization) {
		var ret []V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner
		return ret
	}
	return o.AppsUtilization
}

// GetAppsUtilizationOk returns a tuple with the AppsUtilization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsDeviceDeviceIdTopPost200Response) GetAppsUtilizationOk() ([]V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner, bool) {
	if o == nil || IsNil(o.AppsUtilization) {
		return nil, false
	}
	return o.AppsUtilization, true
}

// HasAppsUtilization returns a boolean if a field has been set.
func (o *V1AppsDeviceDeviceIdTopPost200Response) HasAppsUtilization() bool {
	if o != nil && !IsNil(o.AppsUtilization) {
		return true
	}

	return false
}

// SetAppsUtilization gets a reference to the given []V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner and assigns it to the AppsUtilization field.
func (o *V1AppsDeviceDeviceIdTopPost200Response) SetAppsUtilization(v []V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) {
	o.AppsUtilization = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *V1AppsDeviceDeviceIdTopPost200Response) GetTotalCount() int64 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsDeviceDeviceIdTopPost200Response) GetTotalCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *V1AppsDeviceDeviceIdTopPost200Response) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *V1AppsDeviceDeviceIdTopPost200Response) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o V1AppsDeviceDeviceIdTopPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AppsDeviceDeviceIdTopPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppsUtilization) {
		toSerialize["appsUtilization"] = o.AppsUtilization
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableV1AppsDeviceDeviceIdTopPost200Response struct {
	value *V1AppsDeviceDeviceIdTopPost200Response
	isSet bool
}

func (v NullableV1AppsDeviceDeviceIdTopPost200Response) Get() *V1AppsDeviceDeviceIdTopPost200Response {
	return v.value
}

func (v *NullableV1AppsDeviceDeviceIdTopPost200Response) Set(val *V1AppsDeviceDeviceIdTopPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AppsDeviceDeviceIdTopPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AppsDeviceDeviceIdTopPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AppsDeviceDeviceIdTopPost200Response(val *V1AppsDeviceDeviceIdTopPost200Response) *NullableV1AppsDeviceDeviceIdTopPost200Response {
	return &NullableV1AppsDeviceDeviceIdTopPost200Response{value: val, isSet: true}
}

func (v NullableV1AppsDeviceDeviceIdTopPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AppsDeviceDeviceIdTopPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


