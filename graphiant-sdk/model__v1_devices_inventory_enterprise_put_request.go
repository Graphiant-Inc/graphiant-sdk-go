/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesInventoryEnterprisePutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesInventoryEnterprisePutRequest{}

// V1DevicesInventoryEnterprisePutRequest struct for V1DevicesInventoryEnterprisePutRequest
type V1DevicesInventoryEnterprisePutRequest struct {
	DeviceSerials []string `json:"deviceSerials,omitempty"`
	EnterpriseId *int64 `json:"enterpriseId,omitempty"`
}

// NewV1DevicesInventoryEnterprisePutRequest instantiates a new V1DevicesInventoryEnterprisePutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesInventoryEnterprisePutRequest() *V1DevicesInventoryEnterprisePutRequest {
	this := V1DevicesInventoryEnterprisePutRequest{}
	return &this
}

// NewV1DevicesInventoryEnterprisePutRequestWithDefaults instantiates a new V1DevicesInventoryEnterprisePutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesInventoryEnterprisePutRequestWithDefaults() *V1DevicesInventoryEnterprisePutRequest {
	this := V1DevicesInventoryEnterprisePutRequest{}
	return &this
}

// GetDeviceSerials returns the DeviceSerials field value if set, zero value otherwise.
func (o *V1DevicesInventoryEnterprisePutRequest) GetDeviceSerials() []string {
	if o == nil || IsNil(o.DeviceSerials) {
		var ret []string
		return ret
	}
	return o.DeviceSerials
}

// GetDeviceSerialsOk returns a tuple with the DeviceSerials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryEnterprisePutRequest) GetDeviceSerialsOk() ([]string, bool) {
	if o == nil || IsNil(o.DeviceSerials) {
		return nil, false
	}
	return o.DeviceSerials, true
}

// HasDeviceSerials returns a boolean if a field has been set.
func (o *V1DevicesInventoryEnterprisePutRequest) HasDeviceSerials() bool {
	if o != nil && !IsNil(o.DeviceSerials) {
		return true
	}

	return false
}

// SetDeviceSerials gets a reference to the given []string and assigns it to the DeviceSerials field.
func (o *V1DevicesInventoryEnterprisePutRequest) SetDeviceSerials(v []string) {
	o.DeviceSerials = v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *V1DevicesInventoryEnterprisePutRequest) GetEnterpriseId() int64 {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret int64
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryEnterprisePutRequest) GetEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *V1DevicesInventoryEnterprisePutRequest) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given int64 and assigns it to the EnterpriseId field.
func (o *V1DevicesInventoryEnterprisePutRequest) SetEnterpriseId(v int64) {
	o.EnterpriseId = &v
}

func (o V1DevicesInventoryEnterprisePutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesInventoryEnterprisePutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceSerials) {
		toSerialize["deviceSerials"] = o.DeviceSerials
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterpriseId"] = o.EnterpriseId
	}
	return toSerialize, nil
}

type NullableV1DevicesInventoryEnterprisePutRequest struct {
	value *V1DevicesInventoryEnterprisePutRequest
	isSet bool
}

func (v NullableV1DevicesInventoryEnterprisePutRequest) Get() *V1DevicesInventoryEnterprisePutRequest {
	return v.value
}

func (v *NullableV1DevicesInventoryEnterprisePutRequest) Set(val *V1DevicesInventoryEnterprisePutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesInventoryEnterprisePutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesInventoryEnterprisePutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesInventoryEnterprisePutRequest(val *V1DevicesInventoryEnterprisePutRequest) *NullableV1DevicesInventoryEnterprisePutRequest {
	return &NullableV1DevicesInventoryEnterprisePutRequest{value: val, isSet: true}
}

func (v NullableV1DevicesInventoryEnterprisePutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesInventoryEnterprisePutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


