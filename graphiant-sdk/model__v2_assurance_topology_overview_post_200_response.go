/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AssuranceTopologyOverviewPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AssuranceTopologyOverviewPost200Response{}

// V2AssuranceTopologyOverviewPost200Response struct for V2AssuranceTopologyOverviewPost200Response
type V2AssuranceTopologyOverviewPost200Response struct {
	NumApplications *int32 `json:"numApplications,omitempty"`
	NumFlows *int32 `json:"numFlows,omitempty"`
	Topology *V2AssuranceTopologyOverviewPost200ResponseTopology `json:"topology,omitempty"`
	TopologyChangeTs []V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"topologyChangeTs,omitempty"`
	TrafficRegions []V2AssuranceTopologyOverviewPost200ResponseTrafficRegionsInner `json:"trafficRegions,omitempty"`
}

// NewV2AssuranceTopologyOverviewPost200Response instantiates a new V2AssuranceTopologyOverviewPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssuranceTopologyOverviewPost200Response() *V2AssuranceTopologyOverviewPost200Response {
	this := V2AssuranceTopologyOverviewPost200Response{}
	return &this
}

// NewV2AssuranceTopologyOverviewPost200ResponseWithDefaults instantiates a new V2AssuranceTopologyOverviewPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssuranceTopologyOverviewPost200ResponseWithDefaults() *V2AssuranceTopologyOverviewPost200Response {
	this := V2AssuranceTopologyOverviewPost200Response{}
	return &this
}

// GetNumApplications returns the NumApplications field value if set, zero value otherwise.
func (o *V2AssuranceTopologyOverviewPost200Response) GetNumApplications() int32 {
	if o == nil || IsNil(o.NumApplications) {
		var ret int32
		return ret
	}
	return *o.NumApplications
}

// GetNumApplicationsOk returns a tuple with the NumApplications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceTopologyOverviewPost200Response) GetNumApplicationsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumApplications) {
		return nil, false
	}
	return o.NumApplications, true
}

// HasNumApplications returns a boolean if a field has been set.
func (o *V2AssuranceTopologyOverviewPost200Response) HasNumApplications() bool {
	if o != nil && !IsNil(o.NumApplications) {
		return true
	}

	return false
}

// SetNumApplications gets a reference to the given int32 and assigns it to the NumApplications field.
func (o *V2AssuranceTopologyOverviewPost200Response) SetNumApplications(v int32) {
	o.NumApplications = &v
}

// GetNumFlows returns the NumFlows field value if set, zero value otherwise.
func (o *V2AssuranceTopologyOverviewPost200Response) GetNumFlows() int32 {
	if o == nil || IsNil(o.NumFlows) {
		var ret int32
		return ret
	}
	return *o.NumFlows
}

// GetNumFlowsOk returns a tuple with the NumFlows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceTopologyOverviewPost200Response) GetNumFlowsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumFlows) {
		return nil, false
	}
	return o.NumFlows, true
}

// HasNumFlows returns a boolean if a field has been set.
func (o *V2AssuranceTopologyOverviewPost200Response) HasNumFlows() bool {
	if o != nil && !IsNil(o.NumFlows) {
		return true
	}

	return false
}

// SetNumFlows gets a reference to the given int32 and assigns it to the NumFlows field.
func (o *V2AssuranceTopologyOverviewPost200Response) SetNumFlows(v int32) {
	o.NumFlows = &v
}

// GetTopology returns the Topology field value if set, zero value otherwise.
func (o *V2AssuranceTopologyOverviewPost200Response) GetTopology() V2AssuranceTopologyOverviewPost200ResponseTopology {
	if o == nil || IsNil(o.Topology) {
		var ret V2AssuranceTopologyOverviewPost200ResponseTopology
		return ret
	}
	return *o.Topology
}

// GetTopologyOk returns a tuple with the Topology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceTopologyOverviewPost200Response) GetTopologyOk() (*V2AssuranceTopologyOverviewPost200ResponseTopology, bool) {
	if o == nil || IsNil(o.Topology) {
		return nil, false
	}
	return o.Topology, true
}

// HasTopology returns a boolean if a field has been set.
func (o *V2AssuranceTopologyOverviewPost200Response) HasTopology() bool {
	if o != nil && !IsNil(o.Topology) {
		return true
	}

	return false
}

// SetTopology gets a reference to the given V2AssuranceTopologyOverviewPost200ResponseTopology and assigns it to the Topology field.
func (o *V2AssuranceTopologyOverviewPost200Response) SetTopology(v V2AssuranceTopologyOverviewPost200ResponseTopology) {
	o.Topology = &v
}

// GetTopologyChangeTs returns the TopologyChangeTs field value if set, zero value otherwise.
func (o *V2AssuranceTopologyOverviewPost200Response) GetTopologyChangeTs() []V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.TopologyChangeTs) {
		var ret []V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return o.TopologyChangeTs
}

// GetTopologyChangeTsOk returns a tuple with the TopologyChangeTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceTopologyOverviewPost200Response) GetTopologyChangeTsOk() ([]V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.TopologyChangeTs) {
		return nil, false
	}
	return o.TopologyChangeTs, true
}

// HasTopologyChangeTs returns a boolean if a field has been set.
func (o *V2AssuranceTopologyOverviewPost200Response) HasTopologyChangeTs() bool {
	if o != nil && !IsNil(o.TopologyChangeTs) {
		return true
	}

	return false
}

// SetTopologyChangeTs gets a reference to the given []V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the TopologyChangeTs field.
func (o *V2AssuranceTopologyOverviewPost200Response) SetTopologyChangeTs(v []V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.TopologyChangeTs = v
}

// GetTrafficRegions returns the TrafficRegions field value if set, zero value otherwise.
func (o *V2AssuranceTopologyOverviewPost200Response) GetTrafficRegions() []V2AssuranceTopologyOverviewPost200ResponseTrafficRegionsInner {
	if o == nil || IsNil(o.TrafficRegions) {
		var ret []V2AssuranceTopologyOverviewPost200ResponseTrafficRegionsInner
		return ret
	}
	return o.TrafficRegions
}

// GetTrafficRegionsOk returns a tuple with the TrafficRegions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceTopologyOverviewPost200Response) GetTrafficRegionsOk() ([]V2AssuranceTopologyOverviewPost200ResponseTrafficRegionsInner, bool) {
	if o == nil || IsNil(o.TrafficRegions) {
		return nil, false
	}
	return o.TrafficRegions, true
}

// HasTrafficRegions returns a boolean if a field has been set.
func (o *V2AssuranceTopologyOverviewPost200Response) HasTrafficRegions() bool {
	if o != nil && !IsNil(o.TrafficRegions) {
		return true
	}

	return false
}

// SetTrafficRegions gets a reference to the given []V2AssuranceTopologyOverviewPost200ResponseTrafficRegionsInner and assigns it to the TrafficRegions field.
func (o *V2AssuranceTopologyOverviewPost200Response) SetTrafficRegions(v []V2AssuranceTopologyOverviewPost200ResponseTrafficRegionsInner) {
	o.TrafficRegions = v
}

func (o V2AssuranceTopologyOverviewPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AssuranceTopologyOverviewPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumApplications) {
		toSerialize["numApplications"] = o.NumApplications
	}
	if !IsNil(o.NumFlows) {
		toSerialize["numFlows"] = o.NumFlows
	}
	if !IsNil(o.Topology) {
		toSerialize["topology"] = o.Topology
	}
	if !IsNil(o.TopologyChangeTs) {
		toSerialize["topologyChangeTs"] = o.TopologyChangeTs
	}
	if !IsNil(o.TrafficRegions) {
		toSerialize["trafficRegions"] = o.TrafficRegions
	}
	return toSerialize, nil
}

type NullableV2AssuranceTopologyOverviewPost200Response struct {
	value *V2AssuranceTopologyOverviewPost200Response
	isSet bool
}

func (v NullableV2AssuranceTopologyOverviewPost200Response) Get() *V2AssuranceTopologyOverviewPost200Response {
	return v.value
}

func (v *NullableV2AssuranceTopologyOverviewPost200Response) Set(val *V2AssuranceTopologyOverviewPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssuranceTopologyOverviewPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssuranceTopologyOverviewPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssuranceTopologyOverviewPost200Response(val *V2AssuranceTopologyOverviewPost200Response) *NullableV2AssuranceTopologyOverviewPost200Response {
	return &NullableV2AssuranceTopologyOverviewPost200Response{value: val, isSet: true}
}

func (v NullableV2AssuranceTopologyOverviewPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssuranceTopologyOverviewPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


