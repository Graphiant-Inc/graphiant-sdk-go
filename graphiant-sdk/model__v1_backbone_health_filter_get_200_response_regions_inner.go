/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1BackboneHealthFilterGet200ResponseRegionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BackboneHealthFilterGet200ResponseRegionsInner{}

// V1BackboneHealthFilterGet200ResponseRegionsInner struct for V1BackboneHealthFilterGet200ResponseRegionsInner
type V1BackboneHealthFilterGet200ResponseRegionsInner struct {
	Region *V2AssuranceTopologyInventoryPost200ResponseRegionsInner `json:"region,omitempty"`
}

// NewV1BackboneHealthFilterGet200ResponseRegionsInner instantiates a new V1BackboneHealthFilterGet200ResponseRegionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BackboneHealthFilterGet200ResponseRegionsInner() *V1BackboneHealthFilterGet200ResponseRegionsInner {
	this := V1BackboneHealthFilterGet200ResponseRegionsInner{}
	return &this
}

// NewV1BackboneHealthFilterGet200ResponseRegionsInnerWithDefaults instantiates a new V1BackboneHealthFilterGet200ResponseRegionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BackboneHealthFilterGet200ResponseRegionsInnerWithDefaults() *V1BackboneHealthFilterGet200ResponseRegionsInner {
	this := V1BackboneHealthFilterGet200ResponseRegionsInner{}
	return &this
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *V1BackboneHealthFilterGet200ResponseRegionsInner) GetRegion() V2AssuranceTopologyInventoryPost200ResponseRegionsInner {
	if o == nil || IsNil(o.Region) {
		var ret V2AssuranceTopologyInventoryPost200ResponseRegionsInner
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthFilterGet200ResponseRegionsInner) GetRegionOk() (*V2AssuranceTopologyInventoryPost200ResponseRegionsInner, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *V1BackboneHealthFilterGet200ResponseRegionsInner) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given V2AssuranceTopologyInventoryPost200ResponseRegionsInner and assigns it to the Region field.
func (o *V1BackboneHealthFilterGet200ResponseRegionsInner) SetRegion(v V2AssuranceTopologyInventoryPost200ResponseRegionsInner) {
	o.Region = &v
}

func (o V1BackboneHealthFilterGet200ResponseRegionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BackboneHealthFilterGet200ResponseRegionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableV1BackboneHealthFilterGet200ResponseRegionsInner struct {
	value *V1BackboneHealthFilterGet200ResponseRegionsInner
	isSet bool
}

func (v NullableV1BackboneHealthFilterGet200ResponseRegionsInner) Get() *V1BackboneHealthFilterGet200ResponseRegionsInner {
	return v.value
}

func (v *NullableV1BackboneHealthFilterGet200ResponseRegionsInner) Set(val *V1BackboneHealthFilterGet200ResponseRegionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BackboneHealthFilterGet200ResponseRegionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BackboneHealthFilterGet200ResponseRegionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BackboneHealthFilterGet200ResponseRegionsInner(val *V1BackboneHealthFilterGet200ResponseRegionsInner) *NullableV1BackboneHealthFilterGet200ResponseRegionsInner {
	return &NullableV1BackboneHealthFilterGet200ResponseRegionsInner{value: val, isSet: true}
}

func (v NullableV1BackboneHealthFilterGet200ResponseRegionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BackboneHealthFilterGet200ResponseRegionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


