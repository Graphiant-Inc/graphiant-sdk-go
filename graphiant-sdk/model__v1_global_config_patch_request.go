/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GlobalConfigPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GlobalConfigPatchRequest{}

// V1GlobalConfigPatchRequest struct for V1GlobalConfigPatchRequest
type V1GlobalConfigPatchRequest struct {
	GlobalPrefixSets *map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue `json:"globalPrefixSets,omitempty"`
	IpfixExporters *map[string]V1GlobalConfigPatchRequestIpfixExportersValue `json:"ipfixExporters,omitempty"`
	PrefixSets *map[string]V1GlobalConfigPatchRequestPrefixSetsValue `json:"prefixSets,omitempty"`
	RoutingPolicies *map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue `json:"routingPolicies,omitempty"`
	Snmps *map[string]V1GlobalConfigPatchRequestSnmpsValue `json:"snmps,omitempty"`
	SyslogServers *map[string]V1GlobalConfigPatchRequestSyslogServersValue `json:"syslogServers,omitempty"`
	TrafficPolicies *V1GlobalConfigPatchRequestTrafficPolicies `json:"trafficPolicies,omitempty"`
	VpnProfiles *map[string]V1GlobalConfigPatchRequestVpnProfilesValue `json:"vpnProfiles,omitempty"`
}

// NewV1GlobalConfigPatchRequest instantiates a new V1GlobalConfigPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GlobalConfigPatchRequest() *V1GlobalConfigPatchRequest {
	this := V1GlobalConfigPatchRequest{}
	return &this
}

// NewV1GlobalConfigPatchRequestWithDefaults instantiates a new V1GlobalConfigPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GlobalConfigPatchRequestWithDefaults() *V1GlobalConfigPatchRequest {
	this := V1GlobalConfigPatchRequest{}
	return &this
}

// GetGlobalPrefixSets returns the GlobalPrefixSets field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequest) GetGlobalPrefixSets() map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue {
	if o == nil || IsNil(o.GlobalPrefixSets) {
		var ret map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue
		return ret
	}
	return *o.GlobalPrefixSets
}

// GetGlobalPrefixSetsOk returns a tuple with the GlobalPrefixSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequest) GetGlobalPrefixSetsOk() (*map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue, bool) {
	if o == nil || IsNil(o.GlobalPrefixSets) {
		return nil, false
	}
	return o.GlobalPrefixSets, true
}

// HasGlobalPrefixSets returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequest) HasGlobalPrefixSets() bool {
	if o != nil && !IsNil(o.GlobalPrefixSets) {
		return true
	}

	return false
}

// SetGlobalPrefixSets gets a reference to the given map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue and assigns it to the GlobalPrefixSets field.
func (o *V1GlobalConfigPatchRequest) SetGlobalPrefixSets(v map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue) {
	o.GlobalPrefixSets = &v
}

// GetIpfixExporters returns the IpfixExporters field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequest) GetIpfixExporters() map[string]V1GlobalConfigPatchRequestIpfixExportersValue {
	if o == nil || IsNil(o.IpfixExporters) {
		var ret map[string]V1GlobalConfigPatchRequestIpfixExportersValue
		return ret
	}
	return *o.IpfixExporters
}

// GetIpfixExportersOk returns a tuple with the IpfixExporters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequest) GetIpfixExportersOk() (*map[string]V1GlobalConfigPatchRequestIpfixExportersValue, bool) {
	if o == nil || IsNil(o.IpfixExporters) {
		return nil, false
	}
	return o.IpfixExporters, true
}

// HasIpfixExporters returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequest) HasIpfixExporters() bool {
	if o != nil && !IsNil(o.IpfixExporters) {
		return true
	}

	return false
}

// SetIpfixExporters gets a reference to the given map[string]V1GlobalConfigPatchRequestIpfixExportersValue and assigns it to the IpfixExporters field.
func (o *V1GlobalConfigPatchRequest) SetIpfixExporters(v map[string]V1GlobalConfigPatchRequestIpfixExportersValue) {
	o.IpfixExporters = &v
}

// GetPrefixSets returns the PrefixSets field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequest) GetPrefixSets() map[string]V1GlobalConfigPatchRequestPrefixSetsValue {
	if o == nil || IsNil(o.PrefixSets) {
		var ret map[string]V1GlobalConfigPatchRequestPrefixSetsValue
		return ret
	}
	return *o.PrefixSets
}

// GetPrefixSetsOk returns a tuple with the PrefixSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequest) GetPrefixSetsOk() (*map[string]V1GlobalConfigPatchRequestPrefixSetsValue, bool) {
	if o == nil || IsNil(o.PrefixSets) {
		return nil, false
	}
	return o.PrefixSets, true
}

// HasPrefixSets returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequest) HasPrefixSets() bool {
	if o != nil && !IsNil(o.PrefixSets) {
		return true
	}

	return false
}

// SetPrefixSets gets a reference to the given map[string]V1GlobalConfigPatchRequestPrefixSetsValue and assigns it to the PrefixSets field.
func (o *V1GlobalConfigPatchRequest) SetPrefixSets(v map[string]V1GlobalConfigPatchRequestPrefixSetsValue) {
	o.PrefixSets = &v
}

// GetRoutingPolicies returns the RoutingPolicies field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequest) GetRoutingPolicies() map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue {
	if o == nil || IsNil(o.RoutingPolicies) {
		var ret map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue
		return ret
	}
	return *o.RoutingPolicies
}

// GetRoutingPoliciesOk returns a tuple with the RoutingPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequest) GetRoutingPoliciesOk() (*map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue, bool) {
	if o == nil || IsNil(o.RoutingPolicies) {
		return nil, false
	}
	return o.RoutingPolicies, true
}

// HasRoutingPolicies returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequest) HasRoutingPolicies() bool {
	if o != nil && !IsNil(o.RoutingPolicies) {
		return true
	}

	return false
}

// SetRoutingPolicies gets a reference to the given map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue and assigns it to the RoutingPolicies field.
func (o *V1GlobalConfigPatchRequest) SetRoutingPolicies(v map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue) {
	o.RoutingPolicies = &v
}

// GetSnmps returns the Snmps field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequest) GetSnmps() map[string]V1GlobalConfigPatchRequestSnmpsValue {
	if o == nil || IsNil(o.Snmps) {
		var ret map[string]V1GlobalConfigPatchRequestSnmpsValue
		return ret
	}
	return *o.Snmps
}

// GetSnmpsOk returns a tuple with the Snmps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequest) GetSnmpsOk() (*map[string]V1GlobalConfigPatchRequestSnmpsValue, bool) {
	if o == nil || IsNil(o.Snmps) {
		return nil, false
	}
	return o.Snmps, true
}

// HasSnmps returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequest) HasSnmps() bool {
	if o != nil && !IsNil(o.Snmps) {
		return true
	}

	return false
}

// SetSnmps gets a reference to the given map[string]V1GlobalConfigPatchRequestSnmpsValue and assigns it to the Snmps field.
func (o *V1GlobalConfigPatchRequest) SetSnmps(v map[string]V1GlobalConfigPatchRequestSnmpsValue) {
	o.Snmps = &v
}

// GetSyslogServers returns the SyslogServers field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequest) GetSyslogServers() map[string]V1GlobalConfigPatchRequestSyslogServersValue {
	if o == nil || IsNil(o.SyslogServers) {
		var ret map[string]V1GlobalConfigPatchRequestSyslogServersValue
		return ret
	}
	return *o.SyslogServers
}

// GetSyslogServersOk returns a tuple with the SyslogServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequest) GetSyslogServersOk() (*map[string]V1GlobalConfigPatchRequestSyslogServersValue, bool) {
	if o == nil || IsNil(o.SyslogServers) {
		return nil, false
	}
	return o.SyslogServers, true
}

// HasSyslogServers returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequest) HasSyslogServers() bool {
	if o != nil && !IsNil(o.SyslogServers) {
		return true
	}

	return false
}

// SetSyslogServers gets a reference to the given map[string]V1GlobalConfigPatchRequestSyslogServersValue and assigns it to the SyslogServers field.
func (o *V1GlobalConfigPatchRequest) SetSyslogServers(v map[string]V1GlobalConfigPatchRequestSyslogServersValue) {
	o.SyslogServers = &v
}

// GetTrafficPolicies returns the TrafficPolicies field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequest) GetTrafficPolicies() V1GlobalConfigPatchRequestTrafficPolicies {
	if o == nil || IsNil(o.TrafficPolicies) {
		var ret V1GlobalConfigPatchRequestTrafficPolicies
		return ret
	}
	return *o.TrafficPolicies
}

// GetTrafficPoliciesOk returns a tuple with the TrafficPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequest) GetTrafficPoliciesOk() (*V1GlobalConfigPatchRequestTrafficPolicies, bool) {
	if o == nil || IsNil(o.TrafficPolicies) {
		return nil, false
	}
	return o.TrafficPolicies, true
}

// HasTrafficPolicies returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequest) HasTrafficPolicies() bool {
	if o != nil && !IsNil(o.TrafficPolicies) {
		return true
	}

	return false
}

// SetTrafficPolicies gets a reference to the given V1GlobalConfigPatchRequestTrafficPolicies and assigns it to the TrafficPolicies field.
func (o *V1GlobalConfigPatchRequest) SetTrafficPolicies(v V1GlobalConfigPatchRequestTrafficPolicies) {
	o.TrafficPolicies = &v
}

// GetVpnProfiles returns the VpnProfiles field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequest) GetVpnProfiles() map[string]V1GlobalConfigPatchRequestVpnProfilesValue {
	if o == nil || IsNil(o.VpnProfiles) {
		var ret map[string]V1GlobalConfigPatchRequestVpnProfilesValue
		return ret
	}
	return *o.VpnProfiles
}

// GetVpnProfilesOk returns a tuple with the VpnProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequest) GetVpnProfilesOk() (*map[string]V1GlobalConfigPatchRequestVpnProfilesValue, bool) {
	if o == nil || IsNil(o.VpnProfiles) {
		return nil, false
	}
	return o.VpnProfiles, true
}

// HasVpnProfiles returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequest) HasVpnProfiles() bool {
	if o != nil && !IsNil(o.VpnProfiles) {
		return true
	}

	return false
}

// SetVpnProfiles gets a reference to the given map[string]V1GlobalConfigPatchRequestVpnProfilesValue and assigns it to the VpnProfiles field.
func (o *V1GlobalConfigPatchRequest) SetVpnProfiles(v map[string]V1GlobalConfigPatchRequestVpnProfilesValue) {
	o.VpnProfiles = &v
}

func (o V1GlobalConfigPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GlobalConfigPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GlobalPrefixSets) {
		toSerialize["globalPrefixSets"] = o.GlobalPrefixSets
	}
	if !IsNil(o.IpfixExporters) {
		toSerialize["ipfixExporters"] = o.IpfixExporters
	}
	if !IsNil(o.PrefixSets) {
		toSerialize["prefixSets"] = o.PrefixSets
	}
	if !IsNil(o.RoutingPolicies) {
		toSerialize["routingPolicies"] = o.RoutingPolicies
	}
	if !IsNil(o.Snmps) {
		toSerialize["snmps"] = o.Snmps
	}
	if !IsNil(o.SyslogServers) {
		toSerialize["syslogServers"] = o.SyslogServers
	}
	if !IsNil(o.TrafficPolicies) {
		toSerialize["trafficPolicies"] = o.TrafficPolicies
	}
	if !IsNil(o.VpnProfiles) {
		toSerialize["vpnProfiles"] = o.VpnProfiles
	}
	return toSerialize, nil
}

type NullableV1GlobalConfigPatchRequest struct {
	value *V1GlobalConfigPatchRequest
	isSet bool
}

func (v NullableV1GlobalConfigPatchRequest) Get() *V1GlobalConfigPatchRequest {
	return v.value
}

func (v *NullableV1GlobalConfigPatchRequest) Set(val *V1GlobalConfigPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GlobalConfigPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GlobalConfigPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GlobalConfigPatchRequest(val *V1GlobalConfigPatchRequest) *NullableV1GlobalConfigPatchRequest {
	return &NullableV1GlobalConfigPatchRequest{value: val, isSet: true}
}

func (v NullableV1GlobalConfigPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GlobalConfigPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


