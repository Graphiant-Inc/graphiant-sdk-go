/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2{}

// V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 struct for V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2
type V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 struct {
	PrimaryIpv4Server *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner `json:"primaryIpv4Server,omitempty"`
	PrimaryIpv6Server *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner `json:"primaryIpv6Server,omitempty"`
	SecondaryIpv4Server *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner `json:"secondaryIpv4Server,omitempty"`
	SecondaryIpv6Server *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner `json:"secondaryIpv6Server,omitempty"`
}

// NewV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 instantiates a new V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2() *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 {
	this := V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2{}
	return &this
}

// NewV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2WithDefaults instantiates a new V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2WithDefaults() *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 {
	this := V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2{}
	return &this
}

// GetPrimaryIpv4Server returns the PrimaryIpv4Server field value if set, zero value otherwise.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) GetPrimaryIpv4Server() V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner {
	if o == nil || IsNil(o.PrimaryIpv4Server) {
		var ret V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner
		return ret
	}
	return *o.PrimaryIpv4Server
}

// GetPrimaryIpv4ServerOk returns a tuple with the PrimaryIpv4Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) GetPrimaryIpv4ServerOk() (*V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner, bool) {
	if o == nil || IsNil(o.PrimaryIpv4Server) {
		return nil, false
	}
	return o.PrimaryIpv4Server, true
}

// HasPrimaryIpv4Server returns a boolean if a field has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) HasPrimaryIpv4Server() bool {
	if o != nil && !IsNil(o.PrimaryIpv4Server) {
		return true
	}

	return false
}

// SetPrimaryIpv4Server gets a reference to the given V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner and assigns it to the PrimaryIpv4Server field.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) SetPrimaryIpv4Server(v V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner) {
	o.PrimaryIpv4Server = &v
}

// GetPrimaryIpv6Server returns the PrimaryIpv6Server field value if set, zero value otherwise.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) GetPrimaryIpv6Server() V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner {
	if o == nil || IsNil(o.PrimaryIpv6Server) {
		var ret V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner
		return ret
	}
	return *o.PrimaryIpv6Server
}

// GetPrimaryIpv6ServerOk returns a tuple with the PrimaryIpv6Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) GetPrimaryIpv6ServerOk() (*V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner, bool) {
	if o == nil || IsNil(o.PrimaryIpv6Server) {
		return nil, false
	}
	return o.PrimaryIpv6Server, true
}

// HasPrimaryIpv6Server returns a boolean if a field has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) HasPrimaryIpv6Server() bool {
	if o != nil && !IsNil(o.PrimaryIpv6Server) {
		return true
	}

	return false
}

// SetPrimaryIpv6Server gets a reference to the given V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner and assigns it to the PrimaryIpv6Server field.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) SetPrimaryIpv6Server(v V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner) {
	o.PrimaryIpv6Server = &v
}

// GetSecondaryIpv4Server returns the SecondaryIpv4Server field value if set, zero value otherwise.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) GetSecondaryIpv4Server() V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner {
	if o == nil || IsNil(o.SecondaryIpv4Server) {
		var ret V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner
		return ret
	}
	return *o.SecondaryIpv4Server
}

// GetSecondaryIpv4ServerOk returns a tuple with the SecondaryIpv4Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) GetSecondaryIpv4ServerOk() (*V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner, bool) {
	if o == nil || IsNil(o.SecondaryIpv4Server) {
		return nil, false
	}
	return o.SecondaryIpv4Server, true
}

// HasSecondaryIpv4Server returns a boolean if a field has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) HasSecondaryIpv4Server() bool {
	if o != nil && !IsNil(o.SecondaryIpv4Server) {
		return true
	}

	return false
}

// SetSecondaryIpv4Server gets a reference to the given V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner and assigns it to the SecondaryIpv4Server field.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) SetSecondaryIpv4Server(v V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner) {
	o.SecondaryIpv4Server = &v
}

// GetSecondaryIpv6Server returns the SecondaryIpv6Server field value if set, zero value otherwise.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) GetSecondaryIpv6Server() V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner {
	if o == nil || IsNil(o.SecondaryIpv6Server) {
		var ret V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner
		return ret
	}
	return *o.SecondaryIpv6Server
}

// GetSecondaryIpv6ServerOk returns a tuple with the SecondaryIpv6Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) GetSecondaryIpv6ServerOk() (*V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner, bool) {
	if o == nil || IsNil(o.SecondaryIpv6Server) {
		return nil, false
	}
	return o.SecondaryIpv6Server, true
}

// HasSecondaryIpv6Server returns a boolean if a field has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) HasSecondaryIpv6Server() bool {
	if o != nil && !IsNil(o.SecondaryIpv6Server) {
		return true
	}

	return false
}

// SetSecondaryIpv6Server gets a reference to the given V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner and assigns it to the SecondaryIpv6Server field.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) SetSecondaryIpv6Server(v V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner) {
	o.SecondaryIpv6Server = &v
}

func (o V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrimaryIpv4Server) {
		toSerialize["primaryIpv4Server"] = o.PrimaryIpv4Server
	}
	if !IsNil(o.PrimaryIpv6Server) {
		toSerialize["primaryIpv6Server"] = o.PrimaryIpv6Server
	}
	if !IsNil(o.SecondaryIpv4Server) {
		toSerialize["secondaryIpv4Server"] = o.SecondaryIpv4Server
	}
	if !IsNil(o.SecondaryIpv6Server) {
		toSerialize["secondaryIpv6Server"] = o.SecondaryIpv6Server
	}
	return toSerialize, nil
}

type NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 struct {
	value *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2
	isSet bool
}

func (v NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) Get() *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 {
	return v.value
}

func (v *NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) Set(val *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2(val *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) *NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 {
	return &NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2{value: val, isSet: true}
}

func (v NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


