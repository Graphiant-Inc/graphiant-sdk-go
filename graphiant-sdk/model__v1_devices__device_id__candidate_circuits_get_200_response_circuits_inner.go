/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner{}

// V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner struct for V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner
type V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner struct {
	Circuit *string `json:"circuit,omitempty"`
	Interface *string `json:"interface,omitempty"`
	LoopbackInterface *string `json:"loopbackInterface,omitempty"`
	Vrf *string `json:"vrf,omitempty"`
}

// NewV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner instantiates a new V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner() *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner {
	this := V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner{}
	return &this
}

// NewV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInnerWithDefaults instantiates a new V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInnerWithDefaults() *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner {
	this := V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner{}
	return &this
}

// GetCircuit returns the Circuit field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) GetCircuit() string {
	if o == nil || IsNil(o.Circuit) {
		var ret string
		return ret
	}
	return *o.Circuit
}

// GetCircuitOk returns a tuple with the Circuit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) GetCircuitOk() (*string, bool) {
	if o == nil || IsNil(o.Circuit) {
		return nil, false
	}
	return o.Circuit, true
}

// HasCircuit returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) HasCircuit() bool {
	if o != nil && !IsNil(o.Circuit) {
		return true
	}

	return false
}

// SetCircuit gets a reference to the given string and assigns it to the Circuit field.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) SetCircuit(v string) {
	o.Circuit = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) GetInterface() string {
	if o == nil || IsNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) GetInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) SetInterface(v string) {
	o.Interface = &v
}

// GetLoopbackInterface returns the LoopbackInterface field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) GetLoopbackInterface() string {
	if o == nil || IsNil(o.LoopbackInterface) {
		var ret string
		return ret
	}
	return *o.LoopbackInterface
}

// GetLoopbackInterfaceOk returns a tuple with the LoopbackInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) GetLoopbackInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.LoopbackInterface) {
		return nil, false
	}
	return o.LoopbackInterface, true
}

// HasLoopbackInterface returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) HasLoopbackInterface() bool {
	if o != nil && !IsNil(o.LoopbackInterface) {
		return true
	}

	return false
}

// SetLoopbackInterface gets a reference to the given string and assigns it to the LoopbackInterface field.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) SetLoopbackInterface(v string) {
	o.LoopbackInterface = &v
}

// GetVrf returns the Vrf field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) GetVrf() string {
	if o == nil || IsNil(o.Vrf) {
		var ret string
		return ret
	}
	return *o.Vrf
}

// GetVrfOk returns a tuple with the Vrf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) GetVrfOk() (*string, bool) {
	if o == nil || IsNil(o.Vrf) {
		return nil, false
	}
	return o.Vrf, true
}

// HasVrf returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) HasVrf() bool {
	if o != nil && !IsNil(o.Vrf) {
		return true
	}

	return false
}

// SetVrf gets a reference to the given string and assigns it to the Vrf field.
func (o *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) SetVrf(v string) {
	o.Vrf = &v
}

func (o V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Circuit) {
		toSerialize["circuit"] = o.Circuit
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !IsNil(o.LoopbackInterface) {
		toSerialize["loopbackInterface"] = o.LoopbackInterface
	}
	if !IsNil(o.Vrf) {
		toSerialize["vrf"] = o.Vrf
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner struct {
	value *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner
	isSet bool
}

func (v NullableV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) Get() *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner {
	return v.value
}

func (v *NullableV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) Set(val *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner(val *V1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) *NullableV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner {
	return &NullableV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdCandidateCircuitsGet200ResponseCircuitsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


