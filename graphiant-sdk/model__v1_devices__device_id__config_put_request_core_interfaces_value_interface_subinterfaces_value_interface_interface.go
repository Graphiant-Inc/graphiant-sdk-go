/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface{}

// V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface struct for V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface
type V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface struct {
	AdminStatus *bool `json:"adminStatus,omitempty"`
	Alias *string `json:"alias,omitempty"`
	Description *string `json:"description,omitempty"`
	Duplex *string `json:"duplex,omitempty"`
	Ipv4 *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw `json:"ipv4,omitempty"`
	Ipv6 *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw `json:"ipv6,omitempty"`
	MaxTransmissionUnit *int32 `json:"maxTransmissionUnit,omitempty"`
	MplsEnabled *bool `json:"mplsEnabled,omitempty"`
	TcpMssV4 *int32 `json:"tcpMssV4,omitempty"`
	TcpMssV6 *int32 `json:"tcpMssV6,omitempty"`
	XTalkFilter *bool `json:"xTalkFilter,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterfaceWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface{}
	return &this
}

// GetAdminStatus returns the AdminStatus field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetAdminStatus() bool {
	if o == nil || IsNil(o.AdminStatus) {
		var ret bool
		return ret
	}
	return *o.AdminStatus
}

// GetAdminStatusOk returns a tuple with the AdminStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetAdminStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.AdminStatus) {
		return nil, false
	}
	return o.AdminStatus, true
}

// HasAdminStatus returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasAdminStatus() bool {
	if o != nil && !IsNil(o.AdminStatus) {
		return true
	}

	return false
}

// SetAdminStatus gets a reference to the given bool and assigns it to the AdminStatus field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetAdminStatus(v bool) {
	o.AdminStatus = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetAlias(v string) {
	o.Alias = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetDescription(v string) {
	o.Description = &v
}

// GetDuplex returns the Duplex field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetDuplex() string {
	if o == nil || IsNil(o.Duplex) {
		var ret string
		return ret
	}
	return *o.Duplex
}

// GetDuplexOk returns a tuple with the Duplex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetDuplexOk() (*string, bool) {
	if o == nil || IsNil(o.Duplex) {
		return nil, false
	}
	return o.Duplex, true
}

// HasDuplex returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasDuplex() bool {
	if o != nil && !IsNil(o.Duplex) {
		return true
	}

	return false
}

// SetDuplex gets a reference to the given string and assigns it to the Duplex field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetDuplex(v string) {
	o.Duplex = &v
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetIpv4() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw {
	if o == nil || IsNil(o.Ipv4) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw
		return ret
	}
	return *o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetIpv4Ok() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw and assigns it to the Ipv4 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetIpv4(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw) {
	o.Ipv4 = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetIpv6() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw {
	if o == nil || IsNil(o.Ipv6) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetIpv6Ok() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw and assigns it to the Ipv6 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetIpv6(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGw) {
	o.Ipv6 = &v
}

// GetMaxTransmissionUnit returns the MaxTransmissionUnit field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetMaxTransmissionUnit() int32 {
	if o == nil || IsNil(o.MaxTransmissionUnit) {
		var ret int32
		return ret
	}
	return *o.MaxTransmissionUnit
}

// GetMaxTransmissionUnitOk returns a tuple with the MaxTransmissionUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetMaxTransmissionUnitOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTransmissionUnit) {
		return nil, false
	}
	return o.MaxTransmissionUnit, true
}

// HasMaxTransmissionUnit returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasMaxTransmissionUnit() bool {
	if o != nil && !IsNil(o.MaxTransmissionUnit) {
		return true
	}

	return false
}

// SetMaxTransmissionUnit gets a reference to the given int32 and assigns it to the MaxTransmissionUnit field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetMaxTransmissionUnit(v int32) {
	o.MaxTransmissionUnit = &v
}

// GetMplsEnabled returns the MplsEnabled field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetMplsEnabled() bool {
	if o == nil || IsNil(o.MplsEnabled) {
		var ret bool
		return ret
	}
	return *o.MplsEnabled
}

// GetMplsEnabledOk returns a tuple with the MplsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetMplsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MplsEnabled) {
		return nil, false
	}
	return o.MplsEnabled, true
}

// HasMplsEnabled returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasMplsEnabled() bool {
	if o != nil && !IsNil(o.MplsEnabled) {
		return true
	}

	return false
}

// SetMplsEnabled gets a reference to the given bool and assigns it to the MplsEnabled field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetMplsEnabled(v bool) {
	o.MplsEnabled = &v
}

// GetTcpMssV4 returns the TcpMssV4 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetTcpMssV4() int32 {
	if o == nil || IsNil(o.TcpMssV4) {
		var ret int32
		return ret
	}
	return *o.TcpMssV4
}

// GetTcpMssV4Ok returns a tuple with the TcpMssV4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetTcpMssV4Ok() (*int32, bool) {
	if o == nil || IsNil(o.TcpMssV4) {
		return nil, false
	}
	return o.TcpMssV4, true
}

// HasTcpMssV4 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasTcpMssV4() bool {
	if o != nil && !IsNil(o.TcpMssV4) {
		return true
	}

	return false
}

// SetTcpMssV4 gets a reference to the given int32 and assigns it to the TcpMssV4 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetTcpMssV4(v int32) {
	o.TcpMssV4 = &v
}

// GetTcpMssV6 returns the TcpMssV6 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetTcpMssV6() int32 {
	if o == nil || IsNil(o.TcpMssV6) {
		var ret int32
		return ret
	}
	return *o.TcpMssV6
}

// GetTcpMssV6Ok returns a tuple with the TcpMssV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetTcpMssV6Ok() (*int32, bool) {
	if o == nil || IsNil(o.TcpMssV6) {
		return nil, false
	}
	return o.TcpMssV6, true
}

// HasTcpMssV6 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasTcpMssV6() bool {
	if o != nil && !IsNil(o.TcpMssV6) {
		return true
	}

	return false
}

// SetTcpMssV6 gets a reference to the given int32 and assigns it to the TcpMssV6 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetTcpMssV6(v int32) {
	o.TcpMssV6 = &v
}

// GetXTalkFilter returns the XTalkFilter field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetXTalkFilter() bool {
	if o == nil || IsNil(o.XTalkFilter) {
		var ret bool
		return ret
	}
	return *o.XTalkFilter
}

// GetXTalkFilterOk returns a tuple with the XTalkFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) GetXTalkFilterOk() (*bool, bool) {
	if o == nil || IsNil(o.XTalkFilter) {
		return nil, false
	}
	return o.XTalkFilter, true
}

// HasXTalkFilter returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) HasXTalkFilter() bool {
	if o != nil && !IsNil(o.XTalkFilter) {
		return true
	}

	return false
}

// SetXTalkFilter gets a reference to the given bool and assigns it to the XTalkFilter field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) SetXTalkFilter(v bool) {
	o.XTalkFilter = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminStatus) {
		toSerialize["adminStatus"] = o.AdminStatus
	}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Duplex) {
		toSerialize["duplex"] = o.Duplex
	}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	if !IsNil(o.MaxTransmissionUnit) {
		toSerialize["maxTransmissionUnit"] = o.MaxTransmissionUnit
	}
	if !IsNil(o.MplsEnabled) {
		toSerialize["mplsEnabled"] = o.MplsEnabled
	}
	if !IsNil(o.TcpMssV4) {
		toSerialize["tcpMssV4"] = o.TcpMssV4
	}
	if !IsNil(o.TcpMssV6) {
		toSerialize["tcpMssV6"] = o.TcpMssV6
	}
	if !IsNil(o.XTalkFilter) {
		toSerialize["xTalkFilter"] = o.XTalkFilter
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) Get() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) Set(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValueInterfaceInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


