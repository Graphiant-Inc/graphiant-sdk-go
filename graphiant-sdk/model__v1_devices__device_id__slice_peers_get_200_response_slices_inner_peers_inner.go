/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner{}

// V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner struct for V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner
type V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner struct {
	BgpConnection *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerBgpConnection `json:"bgpConnection,omitempty"`
	ConnectionQuality *string `json:"connectionQuality,omitempty"`
	DeviceId *int64 `json:"deviceId,omitempty"`
	Gdi *int32 `json:"gdi,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	IpsecConnection *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection `json:"ipsecConnection,omitempty"`
	State *string `json:"state,omitempty"`
	WanAddresses []string `json:"wanAddresses,omitempty"`
}

// NewV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner instantiates a new V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner() *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner {
	this := V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner{}
	return &this
}

// NewV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerWithDefaults instantiates a new V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerWithDefaults() *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner {
	this := V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner{}
	return &this
}

// GetBgpConnection returns the BgpConnection field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetBgpConnection() V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerBgpConnection {
	if o == nil || IsNil(o.BgpConnection) {
		var ret V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerBgpConnection
		return ret
	}
	return *o.BgpConnection
}

// GetBgpConnectionOk returns a tuple with the BgpConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetBgpConnectionOk() (*V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerBgpConnection, bool) {
	if o == nil || IsNil(o.BgpConnection) {
		return nil, false
	}
	return o.BgpConnection, true
}

// HasBgpConnection returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) HasBgpConnection() bool {
	if o != nil && !IsNil(o.BgpConnection) {
		return true
	}

	return false
}

// SetBgpConnection gets a reference to the given V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerBgpConnection and assigns it to the BgpConnection field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) SetBgpConnection(v V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerBgpConnection) {
	o.BgpConnection = &v
}

// GetConnectionQuality returns the ConnectionQuality field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetConnectionQuality() string {
	if o == nil || IsNil(o.ConnectionQuality) {
		var ret string
		return ret
	}
	return *o.ConnectionQuality
}

// GetConnectionQualityOk returns a tuple with the ConnectionQuality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetConnectionQualityOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionQuality) {
		return nil, false
	}
	return o.ConnectionQuality, true
}

// HasConnectionQuality returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) HasConnectionQuality() bool {
	if o != nil && !IsNil(o.ConnectionQuality) {
		return true
	}

	return false
}

// SetConnectionQuality gets a reference to the given string and assigns it to the ConnectionQuality field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) SetConnectionQuality(v string) {
	o.ConnectionQuality = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetGdi returns the Gdi field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetGdi() int32 {
	if o == nil || IsNil(o.Gdi) {
		var ret int32
		return ret
	}
	return *o.Gdi
}

// GetGdiOk returns a tuple with the Gdi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetGdiOk() (*int32, bool) {
	if o == nil || IsNil(o.Gdi) {
		return nil, false
	}
	return o.Gdi, true
}

// HasGdi returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) HasGdi() bool {
	if o != nil && !IsNil(o.Gdi) {
		return true
	}

	return false
}

// SetGdi gets a reference to the given int32 and assigns it to the Gdi field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) SetGdi(v int32) {
	o.Gdi = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) SetHostname(v string) {
	o.Hostname = &v
}

// GetIpsecConnection returns the IpsecConnection field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetIpsecConnection() V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection {
	if o == nil || IsNil(o.IpsecConnection) {
		var ret V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection
		return ret
	}
	return *o.IpsecConnection
}

// GetIpsecConnectionOk returns a tuple with the IpsecConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetIpsecConnectionOk() (*V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection, bool) {
	if o == nil || IsNil(o.IpsecConnection) {
		return nil, false
	}
	return o.IpsecConnection, true
}

// HasIpsecConnection returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) HasIpsecConnection() bool {
	if o != nil && !IsNil(o.IpsecConnection) {
		return true
	}

	return false
}

// SetIpsecConnection gets a reference to the given V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection and assigns it to the IpsecConnection field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) SetIpsecConnection(v V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) {
	o.IpsecConnection = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) SetState(v string) {
	o.State = &v
}

// GetWanAddresses returns the WanAddresses field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetWanAddresses() []string {
	if o == nil || IsNil(o.WanAddresses) {
		var ret []string
		return ret
	}
	return o.WanAddresses
}

// GetWanAddressesOk returns a tuple with the WanAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) GetWanAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.WanAddresses) {
		return nil, false
	}
	return o.WanAddresses, true
}

// HasWanAddresses returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) HasWanAddresses() bool {
	if o != nil && !IsNil(o.WanAddresses) {
		return true
	}

	return false
}

// SetWanAddresses gets a reference to the given []string and assigns it to the WanAddresses field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) SetWanAddresses(v []string) {
	o.WanAddresses = v
}

func (o V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BgpConnection) {
		toSerialize["bgpConnection"] = o.BgpConnection
	}
	if !IsNil(o.ConnectionQuality) {
		toSerialize["connectionQuality"] = o.ConnectionQuality
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.Gdi) {
		toSerialize["gdi"] = o.Gdi
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.IpsecConnection) {
		toSerialize["ipsecConnection"] = o.IpsecConnection
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.WanAddresses) {
		toSerialize["wanAddresses"] = o.WanAddresses
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner struct {
	value *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner
	isSet bool
}

func (v NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) Get() *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner {
	return v.value
}

func (v *NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) Set(val *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner(val *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) *NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner {
	return &NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


