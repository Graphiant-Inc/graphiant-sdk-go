/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup{}

// V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup struct for V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup
type V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup struct {
	Alert *bool `json:"alert,omitempty"`
	Expression *string `json:"expression,omitempty"`
	Name *string `json:"name,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Template *string `json:"template,omitempty"`
	TriggerSeconds *int32 `json:"triggerSeconds,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup instantiates a new V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup() *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup {
	this := V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroupWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroupWithDefaults() *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup {
	this := V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup{}
	return &this
}

// GetAlert returns the Alert field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetAlert() bool {
	if o == nil || IsNil(o.Alert) {
		var ret bool
		return ret
	}
	return *o.Alert
}

// GetAlertOk returns a tuple with the Alert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetAlertOk() (*bool, bool) {
	if o == nil || IsNil(o.Alert) {
		return nil, false
	}
	return o.Alert, true
}

// HasAlert returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) HasAlert() bool {
	if o != nil && !IsNil(o.Alert) {
		return true
	}

	return false
}

// SetAlert gets a reference to the given bool and assigns it to the Alert field.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) SetAlert(v bool) {
	o.Alert = &v
}

// GetExpression returns the Expression field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetExpression() string {
	if o == nil || IsNil(o.Expression) {
		var ret string
		return ret
	}
	return *o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetExpressionOk() (*string, bool) {
	if o == nil || IsNil(o.Expression) {
		return nil, false
	}
	return o.Expression, true
}

// HasExpression returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) HasExpression() bool {
	if o != nil && !IsNil(o.Expression) {
		return true
	}

	return false
}

// SetExpression gets a reference to the given string and assigns it to the Expression field.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) SetExpression(v string) {
	o.Expression = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) SetName(v string) {
	o.Name = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) SetSeverity(v string) {
	o.Severity = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetTemplate() string {
	if o == nil || IsNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) SetTemplate(v string) {
	o.Template = &v
}

// GetTriggerSeconds returns the TriggerSeconds field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetTriggerSeconds() int32 {
	if o == nil || IsNil(o.TriggerSeconds) {
		var ret int32
		return ret
	}
	return *o.TriggerSeconds
}

// GetTriggerSecondsOk returns a tuple with the TriggerSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) GetTriggerSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.TriggerSeconds) {
		return nil, false
	}
	return o.TriggerSeconds, true
}

// HasTriggerSeconds returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) HasTriggerSeconds() bool {
	if o != nil && !IsNil(o.TriggerSeconds) {
		return true
	}

	return false
}

// SetTriggerSeconds gets a reference to the given int32 and assigns it to the TriggerSeconds field.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) SetTriggerSeconds(v int32) {
	o.TriggerSeconds = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alert) {
		toSerialize["alert"] = o.Alert
	}
	if !IsNil(o.Expression) {
		toSerialize["expression"] = o.Expression
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.TriggerSeconds) {
		toSerialize["triggerSeconds"] = o.TriggerSeconds
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup struct {
	value *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) Get() *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) Set(val *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup(val *V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) *NullableV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup {
	return &NullableV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValueRuleGroupRulesValueRuleGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


