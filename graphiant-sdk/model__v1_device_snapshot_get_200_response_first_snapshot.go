/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DeviceSnapshotGet200ResponseFirstSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeviceSnapshotGet200ResponseFirstSnapshot{}

// V1DeviceSnapshotGet200ResponseFirstSnapshot struct for V1DeviceSnapshotGet200ResponseFirstSnapshot
type V1DeviceSnapshotGet200ResponseFirstSnapshot struct {
	Author *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor `json:"author,omitempty"`
	Category *string `json:"category,omitempty"`
	CreatedOn *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"createdOn,omitempty"`
	Data *V1DeviceSnapshotGet200ResponseFirstSnapshotData `json:"data,omitempty"`
	Golden *bool `json:"golden,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewV1DeviceSnapshotGet200ResponseFirstSnapshot instantiates a new V1DeviceSnapshotGet200ResponseFirstSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeviceSnapshotGet200ResponseFirstSnapshot() *V1DeviceSnapshotGet200ResponseFirstSnapshot {
	this := V1DeviceSnapshotGet200ResponseFirstSnapshot{}
	return &this
}

// NewV1DeviceSnapshotGet200ResponseFirstSnapshotWithDefaults instantiates a new V1DeviceSnapshotGet200ResponseFirstSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeviceSnapshotGet200ResponseFirstSnapshotWithDefaults() *V1DeviceSnapshotGet200ResponseFirstSnapshot {
	this := V1DeviceSnapshotGet200ResponseFirstSnapshot{}
	return &this
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetAuthor() V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor {
	if o == nil || IsNil(o.Author) {
		var ret V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetAuthorOk() (*V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor and assigns it to the Author field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) SetAuthor(v V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) {
	o.Author = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) SetCategory(v string) {
	o.Category = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetCreatedOn() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.CreatedOn) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetCreatedOnOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the CreatedOn field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) SetCreatedOn(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.CreatedOn = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetData() V1DeviceSnapshotGet200ResponseFirstSnapshotData {
	if o == nil || IsNil(o.Data) {
		var ret V1DeviceSnapshotGet200ResponseFirstSnapshotData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetDataOk() (*V1DeviceSnapshotGet200ResponseFirstSnapshotData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given V1DeviceSnapshotGet200ResponseFirstSnapshotData and assigns it to the Data field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) SetData(v V1DeviceSnapshotGet200ResponseFirstSnapshotData) {
	o.Data = &v
}

// GetGolden returns the Golden field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetGolden() bool {
	if o == nil || IsNil(o.Golden) {
		var ret bool
		return ret
	}
	return *o.Golden
}

// GetGoldenOk returns a tuple with the Golden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetGoldenOk() (*bool, bool) {
	if o == nil || IsNil(o.Golden) {
		return nil, false
	}
	return o.Golden, true
}

// HasGolden returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) HasGolden() bool {
	if o != nil && !IsNil(o.Golden) {
		return true
	}

	return false
}

// SetGolden gets a reference to the given bool and assigns it to the Golden field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) SetGolden(v bool) {
	o.Golden = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshot) SetName(v string) {
	o.Name = &v
}

func (o V1DeviceSnapshotGet200ResponseFirstSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeviceSnapshotGet200ResponseFirstSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Golden) {
		toSerialize["golden"] = o.Golden
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableV1DeviceSnapshotGet200ResponseFirstSnapshot struct {
	value *V1DeviceSnapshotGet200ResponseFirstSnapshot
	isSet bool
}

func (v NullableV1DeviceSnapshotGet200ResponseFirstSnapshot) Get() *V1DeviceSnapshotGet200ResponseFirstSnapshot {
	return v.value
}

func (v *NullableV1DeviceSnapshotGet200ResponseFirstSnapshot) Set(val *V1DeviceSnapshotGet200ResponseFirstSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeviceSnapshotGet200ResponseFirstSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeviceSnapshotGet200ResponseFirstSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeviceSnapshotGet200ResponseFirstSnapshot(val *V1DeviceSnapshotGet200ResponseFirstSnapshot) *NullableV1DeviceSnapshotGet200ResponseFirstSnapshot {
	return &NullableV1DeviceSnapshotGet200ResponseFirstSnapshot{value: val, isSet: true}
}

func (v NullableV1DeviceSnapshotGet200ResponseFirstSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeviceSnapshotGet200ResponseFirstSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


