/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreCoreVrf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreCoreVrf{}

// V1DevicesDeviceIdConfigPutRequestCoreCoreVrf struct for V1DevicesDeviceIdConfigPutRequestCoreCoreVrf
type V1DevicesDeviceIdConfigPutRequestCoreCoreVrf struct {
	BgpAggregations *map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpAggregationsValue `json:"bgpAggregations,omitempty"`
	BgpNeighbors *map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValue `json:"bgpNeighbors,omitempty"`
	BgpRedistribution *map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpRedistributionValue `json:"bgpRedistribution,omitempty"`
	DhcpSubnets *map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValue `json:"dhcpSubnets,omitempty"`
	EbgpMultipath *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfEbgpMultipath `json:"ebgpMultipath,omitempty"`
	IpfixExporters *map[string]V1GlobalConfigPatchRequestIpfixExportersValue `json:"ipfixExporters,omitempty"`
	NatRuleset *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset `json:"natRuleset,omitempty"`
	Networks []string `json:"networks,omitempty"`
	Ospfv2 *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2 `json:"ospfv2,omitempty"`
	Ospfv3 *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2 `json:"ospfv3,omitempty"`
	OverlayFilters *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOverlayFilters `json:"overlayFilters,omitempty"`
	StaticRoutes *map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValue `json:"staticRoutes,omitempty"`
	SyslogTargets *map[string]V1GlobalConfigPatchRequestSyslogServersValue `json:"syslogTargets,omitempty"`
	TrafficRuleset *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset `json:"trafficRuleset,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrf instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrf() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrf{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrf{}
	return &this
}

// GetBgpAggregations returns the BgpAggregations field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetBgpAggregations() map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpAggregationsValue {
	if o == nil || IsNil(o.BgpAggregations) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpAggregationsValue
		return ret
	}
	return *o.BgpAggregations
}

// GetBgpAggregationsOk returns a tuple with the BgpAggregations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetBgpAggregationsOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpAggregationsValue, bool) {
	if o == nil || IsNil(o.BgpAggregations) {
		return nil, false
	}
	return o.BgpAggregations, true
}

// HasBgpAggregations returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasBgpAggregations() bool {
	if o != nil && !IsNil(o.BgpAggregations) {
		return true
	}

	return false
}

// SetBgpAggregations gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpAggregationsValue and assigns it to the BgpAggregations field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetBgpAggregations(v map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpAggregationsValue) {
	o.BgpAggregations = &v
}

// GetBgpNeighbors returns the BgpNeighbors field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetBgpNeighbors() map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValue {
	if o == nil || IsNil(o.BgpNeighbors) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValue
		return ret
	}
	return *o.BgpNeighbors
}

// GetBgpNeighborsOk returns a tuple with the BgpNeighbors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetBgpNeighborsOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValue, bool) {
	if o == nil || IsNil(o.BgpNeighbors) {
		return nil, false
	}
	return o.BgpNeighbors, true
}

// HasBgpNeighbors returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasBgpNeighbors() bool {
	if o != nil && !IsNil(o.BgpNeighbors) {
		return true
	}

	return false
}

// SetBgpNeighbors gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValue and assigns it to the BgpNeighbors field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetBgpNeighbors(v map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpNeighborsValue) {
	o.BgpNeighbors = &v
}

// GetBgpRedistribution returns the BgpRedistribution field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetBgpRedistribution() map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpRedistributionValue {
	if o == nil || IsNil(o.BgpRedistribution) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpRedistributionValue
		return ret
	}
	return *o.BgpRedistribution
}

// GetBgpRedistributionOk returns a tuple with the BgpRedistribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetBgpRedistributionOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpRedistributionValue, bool) {
	if o == nil || IsNil(o.BgpRedistribution) {
		return nil, false
	}
	return o.BgpRedistribution, true
}

// HasBgpRedistribution returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasBgpRedistribution() bool {
	if o != nil && !IsNil(o.BgpRedistribution) {
		return true
	}

	return false
}

// SetBgpRedistribution gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpRedistributionValue and assigns it to the BgpRedistribution field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetBgpRedistribution(v map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfBgpRedistributionValue) {
	o.BgpRedistribution = &v
}

// GetDhcpSubnets returns the DhcpSubnets field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetDhcpSubnets() map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValue {
	if o == nil || IsNil(o.DhcpSubnets) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValue
		return ret
	}
	return *o.DhcpSubnets
}

// GetDhcpSubnetsOk returns a tuple with the DhcpSubnets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetDhcpSubnetsOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValue, bool) {
	if o == nil || IsNil(o.DhcpSubnets) {
		return nil, false
	}
	return o.DhcpSubnets, true
}

// HasDhcpSubnets returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasDhcpSubnets() bool {
	if o != nil && !IsNil(o.DhcpSubnets) {
		return true
	}

	return false
}

// SetDhcpSubnets gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValue and assigns it to the DhcpSubnets field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetDhcpSubnets(v map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValue) {
	o.DhcpSubnets = &v
}

// GetEbgpMultipath returns the EbgpMultipath field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetEbgpMultipath() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfEbgpMultipath {
	if o == nil || IsNil(o.EbgpMultipath) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfEbgpMultipath
		return ret
	}
	return *o.EbgpMultipath
}

// GetEbgpMultipathOk returns a tuple with the EbgpMultipath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetEbgpMultipathOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfEbgpMultipath, bool) {
	if o == nil || IsNil(o.EbgpMultipath) {
		return nil, false
	}
	return o.EbgpMultipath, true
}

// HasEbgpMultipath returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasEbgpMultipath() bool {
	if o != nil && !IsNil(o.EbgpMultipath) {
		return true
	}

	return false
}

// SetEbgpMultipath gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfEbgpMultipath and assigns it to the EbgpMultipath field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetEbgpMultipath(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfEbgpMultipath) {
	o.EbgpMultipath = &v
}

// GetIpfixExporters returns the IpfixExporters field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetIpfixExporters() map[string]V1GlobalConfigPatchRequestIpfixExportersValue {
	if o == nil || IsNil(o.IpfixExporters) {
		var ret map[string]V1GlobalConfigPatchRequestIpfixExportersValue
		return ret
	}
	return *o.IpfixExporters
}

// GetIpfixExportersOk returns a tuple with the IpfixExporters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetIpfixExportersOk() (*map[string]V1GlobalConfigPatchRequestIpfixExportersValue, bool) {
	if o == nil || IsNil(o.IpfixExporters) {
		return nil, false
	}
	return o.IpfixExporters, true
}

// HasIpfixExporters returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasIpfixExporters() bool {
	if o != nil && !IsNil(o.IpfixExporters) {
		return true
	}

	return false
}

// SetIpfixExporters gets a reference to the given map[string]V1GlobalConfigPatchRequestIpfixExportersValue and assigns it to the IpfixExporters field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetIpfixExporters(v map[string]V1GlobalConfigPatchRequestIpfixExportersValue) {
	o.IpfixExporters = &v
}

// GetNatRuleset returns the NatRuleset field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetNatRuleset() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset {
	if o == nil || IsNil(o.NatRuleset) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset
		return ret
	}
	return *o.NatRuleset
}

// GetNatRulesetOk returns a tuple with the NatRuleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetNatRulesetOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset, bool) {
	if o == nil || IsNil(o.NatRuleset) {
		return nil, false
	}
	return o.NatRuleset, true
}

// HasNatRuleset returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasNatRuleset() bool {
	if o != nil && !IsNil(o.NatRuleset) {
		return true
	}

	return false
}

// SetNatRuleset gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset and assigns it to the NatRuleset field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetNatRuleset(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset) {
	o.NatRuleset = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetNetworks() []string {
	if o == nil || IsNil(o.Networks) {
		var ret []string
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetNetworksOk() ([]string, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []string and assigns it to the Networks field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetNetworks(v []string) {
	o.Networks = v
}

// GetOspfv2 returns the Ospfv2 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetOspfv2() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2 {
	if o == nil || IsNil(o.Ospfv2) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2
		return ret
	}
	return *o.Ospfv2
}

// GetOspfv2Ok returns a tuple with the Ospfv2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetOspfv2Ok() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2, bool) {
	if o == nil || IsNil(o.Ospfv2) {
		return nil, false
	}
	return o.Ospfv2, true
}

// HasOspfv2 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasOspfv2() bool {
	if o != nil && !IsNil(o.Ospfv2) {
		return true
	}

	return false
}

// SetOspfv2 gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2 and assigns it to the Ospfv2 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetOspfv2(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2) {
	o.Ospfv2 = &v
}

// GetOspfv3 returns the Ospfv3 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetOspfv3() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2 {
	if o == nil || IsNil(o.Ospfv3) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2
		return ret
	}
	return *o.Ospfv3
}

// GetOspfv3Ok returns a tuple with the Ospfv3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetOspfv3Ok() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2, bool) {
	if o == nil || IsNil(o.Ospfv3) {
		return nil, false
	}
	return o.Ospfv3, true
}

// HasOspfv3 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasOspfv3() bool {
	if o != nil && !IsNil(o.Ospfv3) {
		return true
	}

	return false
}

// SetOspfv3 gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2 and assigns it to the Ospfv3 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetOspfv3(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2) {
	o.Ospfv3 = &v
}

// GetOverlayFilters returns the OverlayFilters field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetOverlayFilters() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOverlayFilters {
	if o == nil || IsNil(o.OverlayFilters) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOverlayFilters
		return ret
	}
	return *o.OverlayFilters
}

// GetOverlayFiltersOk returns a tuple with the OverlayFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetOverlayFiltersOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOverlayFilters, bool) {
	if o == nil || IsNil(o.OverlayFilters) {
		return nil, false
	}
	return o.OverlayFilters, true
}

// HasOverlayFilters returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasOverlayFilters() bool {
	if o != nil && !IsNil(o.OverlayFilters) {
		return true
	}

	return false
}

// SetOverlayFilters gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOverlayFilters and assigns it to the OverlayFilters field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetOverlayFilters(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOverlayFilters) {
	o.OverlayFilters = &v
}

// GetStaticRoutes returns the StaticRoutes field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetStaticRoutes() map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValue {
	if o == nil || IsNil(o.StaticRoutes) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValue
		return ret
	}
	return *o.StaticRoutes
}

// GetStaticRoutesOk returns a tuple with the StaticRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetStaticRoutesOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValue, bool) {
	if o == nil || IsNil(o.StaticRoutes) {
		return nil, false
	}
	return o.StaticRoutes, true
}

// HasStaticRoutes returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasStaticRoutes() bool {
	if o != nil && !IsNil(o.StaticRoutes) {
		return true
	}

	return false
}

// SetStaticRoutes gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValue and assigns it to the StaticRoutes field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetStaticRoutes(v map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValue) {
	o.StaticRoutes = &v
}

// GetSyslogTargets returns the SyslogTargets field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetSyslogTargets() map[string]V1GlobalConfigPatchRequestSyslogServersValue {
	if o == nil || IsNil(o.SyslogTargets) {
		var ret map[string]V1GlobalConfigPatchRequestSyslogServersValue
		return ret
	}
	return *o.SyslogTargets
}

// GetSyslogTargetsOk returns a tuple with the SyslogTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetSyslogTargetsOk() (*map[string]V1GlobalConfigPatchRequestSyslogServersValue, bool) {
	if o == nil || IsNil(o.SyslogTargets) {
		return nil, false
	}
	return o.SyslogTargets, true
}

// HasSyslogTargets returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasSyslogTargets() bool {
	if o != nil && !IsNil(o.SyslogTargets) {
		return true
	}

	return false
}

// SetSyslogTargets gets a reference to the given map[string]V1GlobalConfigPatchRequestSyslogServersValue and assigns it to the SyslogTargets field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetSyslogTargets(v map[string]V1GlobalConfigPatchRequestSyslogServersValue) {
	o.SyslogTargets = &v
}

// GetTrafficRuleset returns the TrafficRuleset field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetTrafficRuleset() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset {
	if o == nil || IsNil(o.TrafficRuleset) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset
		return ret
	}
	return *o.TrafficRuleset
}

// GetTrafficRulesetOk returns a tuple with the TrafficRuleset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) GetTrafficRulesetOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset, bool) {
	if o == nil || IsNil(o.TrafficRuleset) {
		return nil, false
	}
	return o.TrafficRuleset, true
}

// HasTrafficRuleset returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) HasTrafficRuleset() bool {
	if o != nil && !IsNil(o.TrafficRuleset) {
		return true
	}

	return false
}

// SetTrafficRuleset gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset and assigns it to the TrafficRuleset field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) SetTrafficRuleset(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfNatRuleset) {
	o.TrafficRuleset = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BgpAggregations) {
		toSerialize["bgpAggregations"] = o.BgpAggregations
	}
	if !IsNil(o.BgpNeighbors) {
		toSerialize["bgpNeighbors"] = o.BgpNeighbors
	}
	if !IsNil(o.BgpRedistribution) {
		toSerialize["bgpRedistribution"] = o.BgpRedistribution
	}
	if !IsNil(o.DhcpSubnets) {
		toSerialize["dhcpSubnets"] = o.DhcpSubnets
	}
	if !IsNil(o.EbgpMultipath) {
		toSerialize["ebgpMultipath"] = o.EbgpMultipath
	}
	if !IsNil(o.IpfixExporters) {
		toSerialize["ipfixExporters"] = o.IpfixExporters
	}
	if !IsNil(o.NatRuleset) {
		toSerialize["natRuleset"] = o.NatRuleset
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.Ospfv2) {
		toSerialize["ospfv2"] = o.Ospfv2
	}
	if !IsNil(o.Ospfv3) {
		toSerialize["ospfv3"] = o.Ospfv3
	}
	if !IsNil(o.OverlayFilters) {
		toSerialize["overlayFilters"] = o.OverlayFilters
	}
	if !IsNil(o.StaticRoutes) {
		toSerialize["staticRoutes"] = o.StaticRoutes
	}
	if !IsNil(o.SyslogTargets) {
		toSerialize["syslogTargets"] = o.SyslogTargets
	}
	if !IsNil(o.TrafficRuleset) {
		toSerialize["trafficRuleset"] = o.TrafficRuleset
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrf struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrf) Get() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrf) Set(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrf) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrf(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrf {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrf{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


