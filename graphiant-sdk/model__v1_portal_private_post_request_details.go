/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1PortalPrivatePostRequestDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1PortalPrivatePostRequestDetails{}

// V1PortalPrivatePostRequestDetails struct for V1PortalPrivatePostRequestDetails
type V1PortalPrivatePostRequestDetails struct {
	ApiKey *string `json:"apiKey,omitempty"`
	IsDisable *bool `json:"isDisable,omitempty"`
	Name *string `json:"name,omitempty"`
	OnboardingGwAddr *string `json:"onboardingGwAddr,omitempty"`
	PortalUrl *string `json:"portalUrl,omitempty"`
	PublicPortalUrl *string `json:"publicPortalUrl,omitempty"`
	RootCa *string `json:"rootCa,omitempty"`
}

// NewV1PortalPrivatePostRequestDetails instantiates a new V1PortalPrivatePostRequestDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1PortalPrivatePostRequestDetails() *V1PortalPrivatePostRequestDetails {
	this := V1PortalPrivatePostRequestDetails{}
	return &this
}

// NewV1PortalPrivatePostRequestDetailsWithDefaults instantiates a new V1PortalPrivatePostRequestDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1PortalPrivatePostRequestDetailsWithDefaults() *V1PortalPrivatePostRequestDetails {
	this := V1PortalPrivatePostRequestDetails{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *V1PortalPrivatePostRequestDetails) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PortalPrivatePostRequestDetails) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *V1PortalPrivatePostRequestDetails) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *V1PortalPrivatePostRequestDetails) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetIsDisable returns the IsDisable field value if set, zero value otherwise.
func (o *V1PortalPrivatePostRequestDetails) GetIsDisable() bool {
	if o == nil || IsNil(o.IsDisable) {
		var ret bool
		return ret
	}
	return *o.IsDisable
}

// GetIsDisableOk returns a tuple with the IsDisable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PortalPrivatePostRequestDetails) GetIsDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDisable) {
		return nil, false
	}
	return o.IsDisable, true
}

// HasIsDisable returns a boolean if a field has been set.
func (o *V1PortalPrivatePostRequestDetails) HasIsDisable() bool {
	if o != nil && !IsNil(o.IsDisable) {
		return true
	}

	return false
}

// SetIsDisable gets a reference to the given bool and assigns it to the IsDisable field.
func (o *V1PortalPrivatePostRequestDetails) SetIsDisable(v bool) {
	o.IsDisable = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1PortalPrivatePostRequestDetails) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PortalPrivatePostRequestDetails) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1PortalPrivatePostRequestDetails) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1PortalPrivatePostRequestDetails) SetName(v string) {
	o.Name = &v
}

// GetOnboardingGwAddr returns the OnboardingGwAddr field value if set, zero value otherwise.
func (o *V1PortalPrivatePostRequestDetails) GetOnboardingGwAddr() string {
	if o == nil || IsNil(o.OnboardingGwAddr) {
		var ret string
		return ret
	}
	return *o.OnboardingGwAddr
}

// GetOnboardingGwAddrOk returns a tuple with the OnboardingGwAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PortalPrivatePostRequestDetails) GetOnboardingGwAddrOk() (*string, bool) {
	if o == nil || IsNil(o.OnboardingGwAddr) {
		return nil, false
	}
	return o.OnboardingGwAddr, true
}

// HasOnboardingGwAddr returns a boolean if a field has been set.
func (o *V1PortalPrivatePostRequestDetails) HasOnboardingGwAddr() bool {
	if o != nil && !IsNil(o.OnboardingGwAddr) {
		return true
	}

	return false
}

// SetOnboardingGwAddr gets a reference to the given string and assigns it to the OnboardingGwAddr field.
func (o *V1PortalPrivatePostRequestDetails) SetOnboardingGwAddr(v string) {
	o.OnboardingGwAddr = &v
}

// GetPortalUrl returns the PortalUrl field value if set, zero value otherwise.
func (o *V1PortalPrivatePostRequestDetails) GetPortalUrl() string {
	if o == nil || IsNil(o.PortalUrl) {
		var ret string
		return ret
	}
	return *o.PortalUrl
}

// GetPortalUrlOk returns a tuple with the PortalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PortalPrivatePostRequestDetails) GetPortalUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PortalUrl) {
		return nil, false
	}
	return o.PortalUrl, true
}

// HasPortalUrl returns a boolean if a field has been set.
func (o *V1PortalPrivatePostRequestDetails) HasPortalUrl() bool {
	if o != nil && !IsNil(o.PortalUrl) {
		return true
	}

	return false
}

// SetPortalUrl gets a reference to the given string and assigns it to the PortalUrl field.
func (o *V1PortalPrivatePostRequestDetails) SetPortalUrl(v string) {
	o.PortalUrl = &v
}

// GetPublicPortalUrl returns the PublicPortalUrl field value if set, zero value otherwise.
func (o *V1PortalPrivatePostRequestDetails) GetPublicPortalUrl() string {
	if o == nil || IsNil(o.PublicPortalUrl) {
		var ret string
		return ret
	}
	return *o.PublicPortalUrl
}

// GetPublicPortalUrlOk returns a tuple with the PublicPortalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PortalPrivatePostRequestDetails) GetPublicPortalUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PublicPortalUrl) {
		return nil, false
	}
	return o.PublicPortalUrl, true
}

// HasPublicPortalUrl returns a boolean if a field has been set.
func (o *V1PortalPrivatePostRequestDetails) HasPublicPortalUrl() bool {
	if o != nil && !IsNil(o.PublicPortalUrl) {
		return true
	}

	return false
}

// SetPublicPortalUrl gets a reference to the given string and assigns it to the PublicPortalUrl field.
func (o *V1PortalPrivatePostRequestDetails) SetPublicPortalUrl(v string) {
	o.PublicPortalUrl = &v
}

// GetRootCa returns the RootCa field value if set, zero value otherwise.
func (o *V1PortalPrivatePostRequestDetails) GetRootCa() string {
	if o == nil || IsNil(o.RootCa) {
		var ret string
		return ret
	}
	return *o.RootCa
}

// GetRootCaOk returns a tuple with the RootCa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PortalPrivatePostRequestDetails) GetRootCaOk() (*string, bool) {
	if o == nil || IsNil(o.RootCa) {
		return nil, false
	}
	return o.RootCa, true
}

// HasRootCa returns a boolean if a field has been set.
func (o *V1PortalPrivatePostRequestDetails) HasRootCa() bool {
	if o != nil && !IsNil(o.RootCa) {
		return true
	}

	return false
}

// SetRootCa gets a reference to the given string and assigns it to the RootCa field.
func (o *V1PortalPrivatePostRequestDetails) SetRootCa(v string) {
	o.RootCa = &v
}

func (o V1PortalPrivatePostRequestDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1PortalPrivatePostRequestDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKey) {
		toSerialize["apiKey"] = o.ApiKey
	}
	if !IsNil(o.IsDisable) {
		toSerialize["isDisable"] = o.IsDisable
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OnboardingGwAddr) {
		toSerialize["onboardingGwAddr"] = o.OnboardingGwAddr
	}
	if !IsNil(o.PortalUrl) {
		toSerialize["portalUrl"] = o.PortalUrl
	}
	if !IsNil(o.PublicPortalUrl) {
		toSerialize["publicPortalUrl"] = o.PublicPortalUrl
	}
	if !IsNil(o.RootCa) {
		toSerialize["rootCa"] = o.RootCa
	}
	return toSerialize, nil
}

type NullableV1PortalPrivatePostRequestDetails struct {
	value *V1PortalPrivatePostRequestDetails
	isSet bool
}

func (v NullableV1PortalPrivatePostRequestDetails) Get() *V1PortalPrivatePostRequestDetails {
	return v.value
}

func (v *NullableV1PortalPrivatePostRequestDetails) Set(val *V1PortalPrivatePostRequestDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableV1PortalPrivatePostRequestDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableV1PortalPrivatePostRequestDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1PortalPrivatePostRequestDetails(val *V1PortalPrivatePostRequestDetails) *NullableV1PortalPrivatePostRequestDetails {
	return &NullableV1PortalPrivatePostRequestDetails{value: val, isSet: true}
}

func (v NullableV1PortalPrivatePostRequestDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1PortalPrivatePostRequestDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


