/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop{}

// V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop struct for V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop
type V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop struct {
	Address *string `json:"address,omitempty"`
	Circuit *string `json:"circuit,omitempty"`
	Interface *string `json:"interface,omitempty"`
	NextHopAddress *string `json:"nextHopAddress,omitempty"`
	ThirdPartyIpsecTunnel *string `json:"thirdPartyIpsecTunnel,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHopWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHopWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) SetAddress(v string) {
	o.Address = &v
}

// GetCircuit returns the Circuit field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) GetCircuit() string {
	if o == nil || IsNil(o.Circuit) {
		var ret string
		return ret
	}
	return *o.Circuit
}

// GetCircuitOk returns a tuple with the Circuit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) GetCircuitOk() (*string, bool) {
	if o == nil || IsNil(o.Circuit) {
		return nil, false
	}
	return o.Circuit, true
}

// HasCircuit returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) HasCircuit() bool {
	if o != nil && !IsNil(o.Circuit) {
		return true
	}

	return false
}

// SetCircuit gets a reference to the given string and assigns it to the Circuit field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) SetCircuit(v string) {
	o.Circuit = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) GetInterface() string {
	if o == nil || IsNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) GetInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) SetInterface(v string) {
	o.Interface = &v
}

// GetNextHopAddress returns the NextHopAddress field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) GetNextHopAddress() string {
	if o == nil || IsNil(o.NextHopAddress) {
		var ret string
		return ret
	}
	return *o.NextHopAddress
}

// GetNextHopAddressOk returns a tuple with the NextHopAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) GetNextHopAddressOk() (*string, bool) {
	if o == nil || IsNil(o.NextHopAddress) {
		return nil, false
	}
	return o.NextHopAddress, true
}

// HasNextHopAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) HasNextHopAddress() bool {
	if o != nil && !IsNil(o.NextHopAddress) {
		return true
	}

	return false
}

// SetNextHopAddress gets a reference to the given string and assigns it to the NextHopAddress field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) SetNextHopAddress(v string) {
	o.NextHopAddress = &v
}

// GetThirdPartyIpsecTunnel returns the ThirdPartyIpsecTunnel field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) GetThirdPartyIpsecTunnel() string {
	if o == nil || IsNil(o.ThirdPartyIpsecTunnel) {
		var ret string
		return ret
	}
	return *o.ThirdPartyIpsecTunnel
}

// GetThirdPartyIpsecTunnelOk returns a tuple with the ThirdPartyIpsecTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) GetThirdPartyIpsecTunnelOk() (*string, bool) {
	if o == nil || IsNil(o.ThirdPartyIpsecTunnel) {
		return nil, false
	}
	return o.ThirdPartyIpsecTunnel, true
}

// HasThirdPartyIpsecTunnel returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) HasThirdPartyIpsecTunnel() bool {
	if o != nil && !IsNil(o.ThirdPartyIpsecTunnel) {
		return true
	}

	return false
}

// SetThirdPartyIpsecTunnel gets a reference to the given string and assigns it to the ThirdPartyIpsecTunnel field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) SetThirdPartyIpsecTunnel(v string) {
	o.ThirdPartyIpsecTunnel = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Circuit) {
		toSerialize["circuit"] = o.Circuit
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !IsNil(o.NextHopAddress) {
		toSerialize["nextHopAddress"] = o.NextHopAddress
	}
	if !IsNil(o.ThirdPartyIpsecTunnel) {
		toSerialize["thirdPartyIpsecTunnel"] = o.ThirdPartyIpsecTunnel
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) Get() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) Set(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfStaticRoutesValueRouteNextHop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


