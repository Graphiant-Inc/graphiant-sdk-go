/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule{}

// V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule struct for V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule
type V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule struct {
	Action *string `json:"action,omitempty"`
	DeviceId *int64 `json:"deviceId,omitempty"`
	DownloadProgress *int32 `json:"downloadProgress,omitempty"`
	FailureReason *string `json:"failureReason,omitempty"`
	State *string `json:"state,omitempty"`
	Ts *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"ts,omitempty"`
	Version *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion `json:"version,omitempty"`
}

// NewV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule instantiates a new V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule() *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule {
	this := V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule{}
	return &this
}

// NewV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryScheduleWithDefaults instantiates a new V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryScheduleWithDefaults() *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule {
	this := V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) SetAction(v string) {
	o.Action = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetDownloadProgress returns the DownloadProgress field value if set, zero value otherwise.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetDownloadProgress() int32 {
	if o == nil || IsNil(o.DownloadProgress) {
		var ret int32
		return ret
	}
	return *o.DownloadProgress
}

// GetDownloadProgressOk returns a tuple with the DownloadProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetDownloadProgressOk() (*int32, bool) {
	if o == nil || IsNil(o.DownloadProgress) {
		return nil, false
	}
	return o.DownloadProgress, true
}

// HasDownloadProgress returns a boolean if a field has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) HasDownloadProgress() bool {
	if o != nil && !IsNil(o.DownloadProgress) {
		return true
	}

	return false
}

// SetDownloadProgress gets a reference to the given int32 and assigns it to the DownloadProgress field.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) SetDownloadProgress(v int32) {
	o.DownloadProgress = &v
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetFailureReason() string {
	if o == nil || IsNil(o.FailureReason) {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetFailureReasonOk() (*string, bool) {
	if o == nil || IsNil(o.FailureReason) {
		return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) HasFailureReason() bool {
	if o != nil && !IsNil(o.FailureReason) {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) SetFailureReason(v string) {
	o.FailureReason = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) SetState(v string) {
	o.State = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.Ts) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the Ts field.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) SetTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.Ts = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetVersion() V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion {
	if o == nil || IsNil(o.Version) {
		var ret V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) GetVersionOk() (*V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion and assigns it to the Version field.
func (o *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) SetVersion(v V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion) {
	o.Version = &v
}

func (o V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.DownloadProgress) {
		toSerialize["downloadProgress"] = o.DownloadProgress
	}
	if !IsNil(o.FailureReason) {
		toSerialize["failureReason"] = o.FailureReason
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule struct {
	value *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule
	isSet bool
}

func (v NullableV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) Get() *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule {
	return v.value
}

func (v *NullableV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) Set(val *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule(val *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) *NullableV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule {
	return &NullableV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule{value: val, isSet: true}
}

func (v NullableV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummarySchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


