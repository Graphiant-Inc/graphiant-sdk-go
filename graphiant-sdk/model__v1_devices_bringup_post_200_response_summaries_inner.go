/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesBringupPost200ResponseSummariesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesBringupPost200ResponseSummariesInner{}

// V1DevicesBringupPost200ResponseSummariesInner struct for V1DevicesBringupPost200ResponseSummariesInner
type V1DevicesBringupPost200ResponseSummariesInner struct {
	DeviceId *int64 `json:"deviceId,omitempty"`
	DiscoveredLocation *string `json:"discoveredLocation,omitempty"`
	FirstAppearedOn *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"firstAppearedOn,omitempty"`
	IpDetected *string `json:"ipDetected,omitempty"`
	IsNew *bool `json:"isNew,omitempty"`
	State *string `json:"state,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewV1DevicesBringupPost200ResponseSummariesInner instantiates a new V1DevicesBringupPost200ResponseSummariesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesBringupPost200ResponseSummariesInner() *V1DevicesBringupPost200ResponseSummariesInner {
	this := V1DevicesBringupPost200ResponseSummariesInner{}
	return &this
}

// NewV1DevicesBringupPost200ResponseSummariesInnerWithDefaults instantiates a new V1DevicesBringupPost200ResponseSummariesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesBringupPost200ResponseSummariesInnerWithDefaults() *V1DevicesBringupPost200ResponseSummariesInner {
	this := V1DevicesBringupPost200ResponseSummariesInner{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1DevicesBringupPost200ResponseSummariesInner) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetDiscoveredLocation returns the DiscoveredLocation field value if set, zero value otherwise.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetDiscoveredLocation() string {
	if o == nil || IsNil(o.DiscoveredLocation) {
		var ret string
		return ret
	}
	return *o.DiscoveredLocation
}

// GetDiscoveredLocationOk returns a tuple with the DiscoveredLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetDiscoveredLocationOk() (*string, bool) {
	if o == nil || IsNil(o.DiscoveredLocation) {
		return nil, false
	}
	return o.DiscoveredLocation, true
}

// HasDiscoveredLocation returns a boolean if a field has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) HasDiscoveredLocation() bool {
	if o != nil && !IsNil(o.DiscoveredLocation) {
		return true
	}

	return false
}

// SetDiscoveredLocation gets a reference to the given string and assigns it to the DiscoveredLocation field.
func (o *V1DevicesBringupPost200ResponseSummariesInner) SetDiscoveredLocation(v string) {
	o.DiscoveredLocation = &v
}

// GetFirstAppearedOn returns the FirstAppearedOn field value if set, zero value otherwise.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetFirstAppearedOn() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.FirstAppearedOn) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.FirstAppearedOn
}

// GetFirstAppearedOnOk returns a tuple with the FirstAppearedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetFirstAppearedOnOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.FirstAppearedOn) {
		return nil, false
	}
	return o.FirstAppearedOn, true
}

// HasFirstAppearedOn returns a boolean if a field has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) HasFirstAppearedOn() bool {
	if o != nil && !IsNil(o.FirstAppearedOn) {
		return true
	}

	return false
}

// SetFirstAppearedOn gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the FirstAppearedOn field.
func (o *V1DevicesBringupPost200ResponseSummariesInner) SetFirstAppearedOn(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.FirstAppearedOn = &v
}

// GetIpDetected returns the IpDetected field value if set, zero value otherwise.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetIpDetected() string {
	if o == nil || IsNil(o.IpDetected) {
		var ret string
		return ret
	}
	return *o.IpDetected
}

// GetIpDetectedOk returns a tuple with the IpDetected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetIpDetectedOk() (*string, bool) {
	if o == nil || IsNil(o.IpDetected) {
		return nil, false
	}
	return o.IpDetected, true
}

// HasIpDetected returns a boolean if a field has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) HasIpDetected() bool {
	if o != nil && !IsNil(o.IpDetected) {
		return true
	}

	return false
}

// SetIpDetected gets a reference to the given string and assigns it to the IpDetected field.
func (o *V1DevicesBringupPost200ResponseSummariesInner) SetIpDetected(v string) {
	o.IpDetected = &v
}

// GetIsNew returns the IsNew field value if set, zero value otherwise.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetIsNew() bool {
	if o == nil || IsNil(o.IsNew) {
		var ret bool
		return ret
	}
	return *o.IsNew
}

// GetIsNewOk returns a tuple with the IsNew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetIsNewOk() (*bool, bool) {
	if o == nil || IsNil(o.IsNew) {
		return nil, false
	}
	return o.IsNew, true
}

// HasIsNew returns a boolean if a field has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) HasIsNew() bool {
	if o != nil && !IsNil(o.IsNew) {
		return true
	}

	return false
}

// SetIsNew gets a reference to the given bool and assigns it to the IsNew field.
func (o *V1DevicesBringupPost200ResponseSummariesInner) SetIsNew(v bool) {
	o.IsNew = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *V1DevicesBringupPost200ResponseSummariesInner) SetState(v string) {
	o.State = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1DevicesBringupPost200ResponseSummariesInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1DevicesBringupPost200ResponseSummariesInner) SetStatus(v string) {
	o.Status = &v
}

func (o V1DevicesBringupPost200ResponseSummariesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesBringupPost200ResponseSummariesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.DiscoveredLocation) {
		toSerialize["discoveredLocation"] = o.DiscoveredLocation
	}
	if !IsNil(o.FirstAppearedOn) {
		toSerialize["firstAppearedOn"] = o.FirstAppearedOn
	}
	if !IsNil(o.IpDetected) {
		toSerialize["ipDetected"] = o.IpDetected
	}
	if !IsNil(o.IsNew) {
		toSerialize["isNew"] = o.IsNew
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV1DevicesBringupPost200ResponseSummariesInner struct {
	value *V1DevicesBringupPost200ResponseSummariesInner
	isSet bool
}

func (v NullableV1DevicesBringupPost200ResponseSummariesInner) Get() *V1DevicesBringupPost200ResponseSummariesInner {
	return v.value
}

func (v *NullableV1DevicesBringupPost200ResponseSummariesInner) Set(val *V1DevicesBringupPost200ResponseSummariesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesBringupPost200ResponseSummariesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesBringupPost200ResponseSummariesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesBringupPost200ResponseSummariesInner(val *V1DevicesBringupPost200ResponseSummariesInner) *NullableV1DevicesBringupPost200ResponseSummariesInner {
	return &NullableV1DevicesBringupPost200ResponseSummariesInner{value: val, isSet: true}
}

func (v NullableV1DevicesBringupPost200ResponseSummariesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesBringupPost200ResponseSummariesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


