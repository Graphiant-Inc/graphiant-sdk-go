/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec{}

// V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec struct for V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec
type V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec struct {
	AntiReplayWindowSize *int32 `json:"antiReplayWindowSize,omitempty"`
	DhGroup *string `json:"dhGroup,omitempty"`
	DpdInterval *int32 `json:"dpdInterval,omitempty"`
	EncryptionAlg *string `json:"encryptionAlg,omitempty"`
	Esn *bool `json:"esn,omitempty"`
	IkeIntegrity *string `json:"ikeIntegrity,omitempty"`
	Initiator *bool `json:"initiator,omitempty"`
	IpsecEncryptionAlg *string `json:"ipsecEncryptionAlg,omitempty"`
	IpsecIntegrity *string `json:"ipsecIntegrity,omitempty"`
	Label *string `json:"label,omitempty"`
	LocalAddress *string `json:"localAddress,omitempty"`
	LocalCircuit *string `json:"localCircuit,omitempty"`
	LocalIkePeerIdentity *string `json:"localIkePeerIdentity,omitempty"`
	PerfectForwardSecrecy *string `json:"perfectForwardSecrecy,omitempty"`
	PresharedKey *string `json:"presharedKey,omitempty"`
	ReauthInterval *int32 `json:"reauthInterval,omitempty"`
	RekeyInterval *int32 `json:"rekeyInterval,omitempty"`
	RemoteAddress *string `json:"remoteAddress,omitempty"`
	RemoteIkePeerIdentity *string `json:"remoteIkePeerIdentity,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsecWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsecWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec{}
	return &this
}

// GetAntiReplayWindowSize returns the AntiReplayWindowSize field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetAntiReplayWindowSize() int32 {
	if o == nil || IsNil(o.AntiReplayWindowSize) {
		var ret int32
		return ret
	}
	return *o.AntiReplayWindowSize
}

// GetAntiReplayWindowSizeOk returns a tuple with the AntiReplayWindowSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetAntiReplayWindowSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.AntiReplayWindowSize) {
		return nil, false
	}
	return o.AntiReplayWindowSize, true
}

// HasAntiReplayWindowSize returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasAntiReplayWindowSize() bool {
	if o != nil && !IsNil(o.AntiReplayWindowSize) {
		return true
	}

	return false
}

// SetAntiReplayWindowSize gets a reference to the given int32 and assigns it to the AntiReplayWindowSize field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetAntiReplayWindowSize(v int32) {
	o.AntiReplayWindowSize = &v
}

// GetDhGroup returns the DhGroup field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetDhGroup() string {
	if o == nil || IsNil(o.DhGroup) {
		var ret string
		return ret
	}
	return *o.DhGroup
}

// GetDhGroupOk returns a tuple with the DhGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetDhGroupOk() (*string, bool) {
	if o == nil || IsNil(o.DhGroup) {
		return nil, false
	}
	return o.DhGroup, true
}

// HasDhGroup returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasDhGroup() bool {
	if o != nil && !IsNil(o.DhGroup) {
		return true
	}

	return false
}

// SetDhGroup gets a reference to the given string and assigns it to the DhGroup field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetDhGroup(v string) {
	o.DhGroup = &v
}

// GetDpdInterval returns the DpdInterval field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetDpdInterval() int32 {
	if o == nil || IsNil(o.DpdInterval) {
		var ret int32
		return ret
	}
	return *o.DpdInterval
}

// GetDpdIntervalOk returns a tuple with the DpdInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetDpdIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.DpdInterval) {
		return nil, false
	}
	return o.DpdInterval, true
}

// HasDpdInterval returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasDpdInterval() bool {
	if o != nil && !IsNil(o.DpdInterval) {
		return true
	}

	return false
}

// SetDpdInterval gets a reference to the given int32 and assigns it to the DpdInterval field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetDpdInterval(v int32) {
	o.DpdInterval = &v
}

// GetEncryptionAlg returns the EncryptionAlg field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetEncryptionAlg() string {
	if o == nil || IsNil(o.EncryptionAlg) {
		var ret string
		return ret
	}
	return *o.EncryptionAlg
}

// GetEncryptionAlgOk returns a tuple with the EncryptionAlg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetEncryptionAlgOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionAlg) {
		return nil, false
	}
	return o.EncryptionAlg, true
}

// HasEncryptionAlg returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasEncryptionAlg() bool {
	if o != nil && !IsNil(o.EncryptionAlg) {
		return true
	}

	return false
}

// SetEncryptionAlg gets a reference to the given string and assigns it to the EncryptionAlg field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetEncryptionAlg(v string) {
	o.EncryptionAlg = &v
}

// GetEsn returns the Esn field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetEsn() bool {
	if o == nil || IsNil(o.Esn) {
		var ret bool
		return ret
	}
	return *o.Esn
}

// GetEsnOk returns a tuple with the Esn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetEsnOk() (*bool, bool) {
	if o == nil || IsNil(o.Esn) {
		return nil, false
	}
	return o.Esn, true
}

// HasEsn returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasEsn() bool {
	if o != nil && !IsNil(o.Esn) {
		return true
	}

	return false
}

// SetEsn gets a reference to the given bool and assigns it to the Esn field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetEsn(v bool) {
	o.Esn = &v
}

// GetIkeIntegrity returns the IkeIntegrity field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetIkeIntegrity() string {
	if o == nil || IsNil(o.IkeIntegrity) {
		var ret string
		return ret
	}
	return *o.IkeIntegrity
}

// GetIkeIntegrityOk returns a tuple with the IkeIntegrity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetIkeIntegrityOk() (*string, bool) {
	if o == nil || IsNil(o.IkeIntegrity) {
		return nil, false
	}
	return o.IkeIntegrity, true
}

// HasIkeIntegrity returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasIkeIntegrity() bool {
	if o != nil && !IsNil(o.IkeIntegrity) {
		return true
	}

	return false
}

// SetIkeIntegrity gets a reference to the given string and assigns it to the IkeIntegrity field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetIkeIntegrity(v string) {
	o.IkeIntegrity = &v
}

// GetInitiator returns the Initiator field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetInitiator() bool {
	if o == nil || IsNil(o.Initiator) {
		var ret bool
		return ret
	}
	return *o.Initiator
}

// GetInitiatorOk returns a tuple with the Initiator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetInitiatorOk() (*bool, bool) {
	if o == nil || IsNil(o.Initiator) {
		return nil, false
	}
	return o.Initiator, true
}

// HasInitiator returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasInitiator() bool {
	if o != nil && !IsNil(o.Initiator) {
		return true
	}

	return false
}

// SetInitiator gets a reference to the given bool and assigns it to the Initiator field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetInitiator(v bool) {
	o.Initiator = &v
}

// GetIpsecEncryptionAlg returns the IpsecEncryptionAlg field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetIpsecEncryptionAlg() string {
	if o == nil || IsNil(o.IpsecEncryptionAlg) {
		var ret string
		return ret
	}
	return *o.IpsecEncryptionAlg
}

// GetIpsecEncryptionAlgOk returns a tuple with the IpsecEncryptionAlg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetIpsecEncryptionAlgOk() (*string, bool) {
	if o == nil || IsNil(o.IpsecEncryptionAlg) {
		return nil, false
	}
	return o.IpsecEncryptionAlg, true
}

// HasIpsecEncryptionAlg returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasIpsecEncryptionAlg() bool {
	if o != nil && !IsNil(o.IpsecEncryptionAlg) {
		return true
	}

	return false
}

// SetIpsecEncryptionAlg gets a reference to the given string and assigns it to the IpsecEncryptionAlg field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetIpsecEncryptionAlg(v string) {
	o.IpsecEncryptionAlg = &v
}

// GetIpsecIntegrity returns the IpsecIntegrity field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetIpsecIntegrity() string {
	if o == nil || IsNil(o.IpsecIntegrity) {
		var ret string
		return ret
	}
	return *o.IpsecIntegrity
}

// GetIpsecIntegrityOk returns a tuple with the IpsecIntegrity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetIpsecIntegrityOk() (*string, bool) {
	if o == nil || IsNil(o.IpsecIntegrity) {
		return nil, false
	}
	return o.IpsecIntegrity, true
}

// HasIpsecIntegrity returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasIpsecIntegrity() bool {
	if o != nil && !IsNil(o.IpsecIntegrity) {
		return true
	}

	return false
}

// SetIpsecIntegrity gets a reference to the given string and assigns it to the IpsecIntegrity field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetIpsecIntegrity(v string) {
	o.IpsecIntegrity = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetLabel(v string) {
	o.Label = &v
}

// GetLocalAddress returns the LocalAddress field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetLocalAddress() string {
	if o == nil || IsNil(o.LocalAddress) {
		var ret string
		return ret
	}
	return *o.LocalAddress
}

// GetLocalAddressOk returns a tuple with the LocalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetLocalAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LocalAddress) {
		return nil, false
	}
	return o.LocalAddress, true
}

// HasLocalAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasLocalAddress() bool {
	if o != nil && !IsNil(o.LocalAddress) {
		return true
	}

	return false
}

// SetLocalAddress gets a reference to the given string and assigns it to the LocalAddress field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetLocalAddress(v string) {
	o.LocalAddress = &v
}

// GetLocalCircuit returns the LocalCircuit field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetLocalCircuit() string {
	if o == nil || IsNil(o.LocalCircuit) {
		var ret string
		return ret
	}
	return *o.LocalCircuit
}

// GetLocalCircuitOk returns a tuple with the LocalCircuit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetLocalCircuitOk() (*string, bool) {
	if o == nil || IsNil(o.LocalCircuit) {
		return nil, false
	}
	return o.LocalCircuit, true
}

// HasLocalCircuit returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasLocalCircuit() bool {
	if o != nil && !IsNil(o.LocalCircuit) {
		return true
	}

	return false
}

// SetLocalCircuit gets a reference to the given string and assigns it to the LocalCircuit field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetLocalCircuit(v string) {
	o.LocalCircuit = &v
}

// GetLocalIkePeerIdentity returns the LocalIkePeerIdentity field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetLocalIkePeerIdentity() string {
	if o == nil || IsNil(o.LocalIkePeerIdentity) {
		var ret string
		return ret
	}
	return *o.LocalIkePeerIdentity
}

// GetLocalIkePeerIdentityOk returns a tuple with the LocalIkePeerIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetLocalIkePeerIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.LocalIkePeerIdentity) {
		return nil, false
	}
	return o.LocalIkePeerIdentity, true
}

// HasLocalIkePeerIdentity returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasLocalIkePeerIdentity() bool {
	if o != nil && !IsNil(o.LocalIkePeerIdentity) {
		return true
	}

	return false
}

// SetLocalIkePeerIdentity gets a reference to the given string and assigns it to the LocalIkePeerIdentity field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetLocalIkePeerIdentity(v string) {
	o.LocalIkePeerIdentity = &v
}

// GetPerfectForwardSecrecy returns the PerfectForwardSecrecy field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetPerfectForwardSecrecy() string {
	if o == nil || IsNil(o.PerfectForwardSecrecy) {
		var ret string
		return ret
	}
	return *o.PerfectForwardSecrecy
}

// GetPerfectForwardSecrecyOk returns a tuple with the PerfectForwardSecrecy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetPerfectForwardSecrecyOk() (*string, bool) {
	if o == nil || IsNil(o.PerfectForwardSecrecy) {
		return nil, false
	}
	return o.PerfectForwardSecrecy, true
}

// HasPerfectForwardSecrecy returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasPerfectForwardSecrecy() bool {
	if o != nil && !IsNil(o.PerfectForwardSecrecy) {
		return true
	}

	return false
}

// SetPerfectForwardSecrecy gets a reference to the given string and assigns it to the PerfectForwardSecrecy field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetPerfectForwardSecrecy(v string) {
	o.PerfectForwardSecrecy = &v
}

// GetPresharedKey returns the PresharedKey field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetPresharedKey() string {
	if o == nil || IsNil(o.PresharedKey) {
		var ret string
		return ret
	}
	return *o.PresharedKey
}

// GetPresharedKeyOk returns a tuple with the PresharedKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetPresharedKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PresharedKey) {
		return nil, false
	}
	return o.PresharedKey, true
}

// HasPresharedKey returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasPresharedKey() bool {
	if o != nil && !IsNil(o.PresharedKey) {
		return true
	}

	return false
}

// SetPresharedKey gets a reference to the given string and assigns it to the PresharedKey field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetPresharedKey(v string) {
	o.PresharedKey = &v
}

// GetReauthInterval returns the ReauthInterval field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetReauthInterval() int32 {
	if o == nil || IsNil(o.ReauthInterval) {
		var ret int32
		return ret
	}
	return *o.ReauthInterval
}

// GetReauthIntervalOk returns a tuple with the ReauthInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetReauthIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.ReauthInterval) {
		return nil, false
	}
	return o.ReauthInterval, true
}

// HasReauthInterval returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasReauthInterval() bool {
	if o != nil && !IsNil(o.ReauthInterval) {
		return true
	}

	return false
}

// SetReauthInterval gets a reference to the given int32 and assigns it to the ReauthInterval field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetReauthInterval(v int32) {
	o.ReauthInterval = &v
}

// GetRekeyInterval returns the RekeyInterval field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetRekeyInterval() int32 {
	if o == nil || IsNil(o.RekeyInterval) {
		var ret int32
		return ret
	}
	return *o.RekeyInterval
}

// GetRekeyIntervalOk returns a tuple with the RekeyInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetRekeyIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.RekeyInterval) {
		return nil, false
	}
	return o.RekeyInterval, true
}

// HasRekeyInterval returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasRekeyInterval() bool {
	if o != nil && !IsNil(o.RekeyInterval) {
		return true
	}

	return false
}

// SetRekeyInterval gets a reference to the given int32 and assigns it to the RekeyInterval field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetRekeyInterval(v int32) {
	o.RekeyInterval = &v
}

// GetRemoteAddress returns the RemoteAddress field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetRemoteAddress() string {
	if o == nil || IsNil(o.RemoteAddress) {
		var ret string
		return ret
	}
	return *o.RemoteAddress
}

// GetRemoteAddressOk returns a tuple with the RemoteAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetRemoteAddressOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteAddress) {
		return nil, false
	}
	return o.RemoteAddress, true
}

// HasRemoteAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasRemoteAddress() bool {
	if o != nil && !IsNil(o.RemoteAddress) {
		return true
	}

	return false
}

// SetRemoteAddress gets a reference to the given string and assigns it to the RemoteAddress field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetRemoteAddress(v string) {
	o.RemoteAddress = &v
}

// GetRemoteIkePeerIdentity returns the RemoteIkePeerIdentity field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetRemoteIkePeerIdentity() string {
	if o == nil || IsNil(o.RemoteIkePeerIdentity) {
		var ret string
		return ret
	}
	return *o.RemoteIkePeerIdentity
}

// GetRemoteIkePeerIdentityOk returns a tuple with the RemoteIkePeerIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) GetRemoteIkePeerIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIkePeerIdentity) {
		return nil, false
	}
	return o.RemoteIkePeerIdentity, true
}

// HasRemoteIkePeerIdentity returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) HasRemoteIkePeerIdentity() bool {
	if o != nil && !IsNil(o.RemoteIkePeerIdentity) {
		return true
	}

	return false
}

// SetRemoteIkePeerIdentity gets a reference to the given string and assigns it to the RemoteIkePeerIdentity field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) SetRemoteIkePeerIdentity(v string) {
	o.RemoteIkePeerIdentity = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AntiReplayWindowSize) {
		toSerialize["antiReplayWindowSize"] = o.AntiReplayWindowSize
	}
	if !IsNil(o.DhGroup) {
		toSerialize["dhGroup"] = o.DhGroup
	}
	if !IsNil(o.DpdInterval) {
		toSerialize["dpdInterval"] = o.DpdInterval
	}
	if !IsNil(o.EncryptionAlg) {
		toSerialize["encryptionAlg"] = o.EncryptionAlg
	}
	if !IsNil(o.Esn) {
		toSerialize["esn"] = o.Esn
	}
	if !IsNil(o.IkeIntegrity) {
		toSerialize["ikeIntegrity"] = o.IkeIntegrity
	}
	if !IsNil(o.Initiator) {
		toSerialize["initiator"] = o.Initiator
	}
	if !IsNil(o.IpsecEncryptionAlg) {
		toSerialize["ipsecEncryptionAlg"] = o.IpsecEncryptionAlg
	}
	if !IsNil(o.IpsecIntegrity) {
		toSerialize["ipsecIntegrity"] = o.IpsecIntegrity
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.LocalAddress) {
		toSerialize["localAddress"] = o.LocalAddress
	}
	if !IsNil(o.LocalCircuit) {
		toSerialize["localCircuit"] = o.LocalCircuit
	}
	if !IsNil(o.LocalIkePeerIdentity) {
		toSerialize["localIkePeerIdentity"] = o.LocalIkePeerIdentity
	}
	if !IsNil(o.PerfectForwardSecrecy) {
		toSerialize["perfectForwardSecrecy"] = o.PerfectForwardSecrecy
	}
	if !IsNil(o.PresharedKey) {
		toSerialize["presharedKey"] = o.PresharedKey
	}
	if !IsNil(o.ReauthInterval) {
		toSerialize["reauthInterval"] = o.ReauthInterval
	}
	if !IsNil(o.RekeyInterval) {
		toSerialize["rekeyInterval"] = o.RekeyInterval
	}
	if !IsNil(o.RemoteAddress) {
		toSerialize["remoteAddress"] = o.RemoteAddress
	}
	if !IsNil(o.RemoteIkePeerIdentity) {
		toSerialize["remoteIkePeerIdentity"] = o.RemoteIkePeerIdentity
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) Get() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) Set(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


