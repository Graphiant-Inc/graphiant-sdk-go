/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner{}

// V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner struct for V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner
type V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner struct {
	OutsideNatPrefix *string `json:"outsideNatPrefix,omitempty"`
	ServicePrefix *string `json:"servicePrefix,omitempty"`
}

// NewV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner instantiates a new V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner() *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner {
	this := V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner{}
	return &this
}

// NewV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInnerWithDefaults instantiates a new V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInnerWithDefaults() *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner {
	this := V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner{}
	return &this
}

// GetOutsideNatPrefix returns the OutsideNatPrefix field value if set, zero value otherwise.
func (o *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) GetOutsideNatPrefix() string {
	if o == nil || IsNil(o.OutsideNatPrefix) {
		var ret string
		return ret
	}
	return *o.OutsideNatPrefix
}

// GetOutsideNatPrefixOk returns a tuple with the OutsideNatPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) GetOutsideNatPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.OutsideNatPrefix) {
		return nil, false
	}
	return o.OutsideNatPrefix, true
}

// HasOutsideNatPrefix returns a boolean if a field has been set.
func (o *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) HasOutsideNatPrefix() bool {
	if o != nil && !IsNil(o.OutsideNatPrefix) {
		return true
	}

	return false
}

// SetOutsideNatPrefix gets a reference to the given string and assigns it to the OutsideNatPrefix field.
func (o *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) SetOutsideNatPrefix(v string) {
	o.OutsideNatPrefix = &v
}

// GetServicePrefix returns the ServicePrefix field value if set, zero value otherwise.
func (o *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) GetServicePrefix() string {
	if o == nil || IsNil(o.ServicePrefix) {
		var ret string
		return ret
	}
	return *o.ServicePrefix
}

// GetServicePrefixOk returns a tuple with the ServicePrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) GetServicePrefixOk() (*string, bool) {
	if o == nil || IsNil(o.ServicePrefix) {
		return nil, false
	}
	return o.ServicePrefix, true
}

// HasServicePrefix returns a boolean if a field has been set.
func (o *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) HasServicePrefix() bool {
	if o != nil && !IsNil(o.ServicePrefix) {
		return true
	}

	return false
}

// SetServicePrefix gets a reference to the given string and assigns it to the ServicePrefix field.
func (o *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) SetServicePrefix(v string) {
	o.ServicePrefix = &v
}

func (o V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OutsideNatPrefix) {
		toSerialize["outsideNatPrefix"] = o.OutsideNatPrefix
	}
	if !IsNil(o.ServicePrefix) {
		toSerialize["servicePrefix"] = o.ServicePrefix
	}
	return toSerialize, nil
}

type NullableV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner struct {
	value *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner
	isSet bool
}

func (v NullableV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) Get() *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner {
	return v.value
}

func (v *NullableV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) Set(val *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner(val *V1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) *NullableV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner {
	return &NullableV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner{value: val, isSet: true}
}

func (v NullableV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExtranetsB2bConsumerPostRequestPolicyInnerRulesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


