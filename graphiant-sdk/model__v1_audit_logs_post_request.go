/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1AuditLogsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AuditLogsPostRequest{}

// V1AuditLogsPostRequest struct for V1AuditLogsPostRequest
type V1AuditLogsPostRequest struct {
	CursorRef *string `json:"cursorRef,omitempty"`
	HistogramBucketSizeSec *int32 `json:"histogramBucketSizeSec,omitempty"`
	NumLogs *int32 `json:"numLogs,omitempty"`
	OldTs *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"oldTs,omitempty"`
	RecentTs *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"recentTs,omitempty"`
	Selectors []V1AuditLogsPostRequestSelectorsInner `json:"selectors,omitempty"`
}

// NewV1AuditLogsPostRequest instantiates a new V1AuditLogsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AuditLogsPostRequest() *V1AuditLogsPostRequest {
	this := V1AuditLogsPostRequest{}
	return &this
}

// NewV1AuditLogsPostRequestWithDefaults instantiates a new V1AuditLogsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AuditLogsPostRequestWithDefaults() *V1AuditLogsPostRequest {
	this := V1AuditLogsPostRequest{}
	return &this
}

// GetCursorRef returns the CursorRef field value if set, zero value otherwise.
func (o *V1AuditLogsPostRequest) GetCursorRef() string {
	if o == nil || IsNil(o.CursorRef) {
		var ret string
		return ret
	}
	return *o.CursorRef
}

// GetCursorRefOk returns a tuple with the CursorRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditLogsPostRequest) GetCursorRefOk() (*string, bool) {
	if o == nil || IsNil(o.CursorRef) {
		return nil, false
	}
	return o.CursorRef, true
}

// HasCursorRef returns a boolean if a field has been set.
func (o *V1AuditLogsPostRequest) HasCursorRef() bool {
	if o != nil && !IsNil(o.CursorRef) {
		return true
	}

	return false
}

// SetCursorRef gets a reference to the given string and assigns it to the CursorRef field.
func (o *V1AuditLogsPostRequest) SetCursorRef(v string) {
	o.CursorRef = &v
}

// GetHistogramBucketSizeSec returns the HistogramBucketSizeSec field value if set, zero value otherwise.
func (o *V1AuditLogsPostRequest) GetHistogramBucketSizeSec() int32 {
	if o == nil || IsNil(o.HistogramBucketSizeSec) {
		var ret int32
		return ret
	}
	return *o.HistogramBucketSizeSec
}

// GetHistogramBucketSizeSecOk returns a tuple with the HistogramBucketSizeSec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditLogsPostRequest) GetHistogramBucketSizeSecOk() (*int32, bool) {
	if o == nil || IsNil(o.HistogramBucketSizeSec) {
		return nil, false
	}
	return o.HistogramBucketSizeSec, true
}

// HasHistogramBucketSizeSec returns a boolean if a field has been set.
func (o *V1AuditLogsPostRequest) HasHistogramBucketSizeSec() bool {
	if o != nil && !IsNil(o.HistogramBucketSizeSec) {
		return true
	}

	return false
}

// SetHistogramBucketSizeSec gets a reference to the given int32 and assigns it to the HistogramBucketSizeSec field.
func (o *V1AuditLogsPostRequest) SetHistogramBucketSizeSec(v int32) {
	o.HistogramBucketSizeSec = &v
}

// GetNumLogs returns the NumLogs field value if set, zero value otherwise.
func (o *V1AuditLogsPostRequest) GetNumLogs() int32 {
	if o == nil || IsNil(o.NumLogs) {
		var ret int32
		return ret
	}
	return *o.NumLogs
}

// GetNumLogsOk returns a tuple with the NumLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditLogsPostRequest) GetNumLogsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumLogs) {
		return nil, false
	}
	return o.NumLogs, true
}

// HasNumLogs returns a boolean if a field has been set.
func (o *V1AuditLogsPostRequest) HasNumLogs() bool {
	if o != nil && !IsNil(o.NumLogs) {
		return true
	}

	return false
}

// SetNumLogs gets a reference to the given int32 and assigns it to the NumLogs field.
func (o *V1AuditLogsPostRequest) SetNumLogs(v int32) {
	o.NumLogs = &v
}

// GetOldTs returns the OldTs field value if set, zero value otherwise.
func (o *V1AuditLogsPostRequest) GetOldTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.OldTs) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.OldTs
}

// GetOldTsOk returns a tuple with the OldTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditLogsPostRequest) GetOldTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.OldTs) {
		return nil, false
	}
	return o.OldTs, true
}

// HasOldTs returns a boolean if a field has been set.
func (o *V1AuditLogsPostRequest) HasOldTs() bool {
	if o != nil && !IsNil(o.OldTs) {
		return true
	}

	return false
}

// SetOldTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the OldTs field.
func (o *V1AuditLogsPostRequest) SetOldTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.OldTs = &v
}

// GetRecentTs returns the RecentTs field value if set, zero value otherwise.
func (o *V1AuditLogsPostRequest) GetRecentTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.RecentTs) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.RecentTs
}

// GetRecentTsOk returns a tuple with the RecentTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditLogsPostRequest) GetRecentTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.RecentTs) {
		return nil, false
	}
	return o.RecentTs, true
}

// HasRecentTs returns a boolean if a field has been set.
func (o *V1AuditLogsPostRequest) HasRecentTs() bool {
	if o != nil && !IsNil(o.RecentTs) {
		return true
	}

	return false
}

// SetRecentTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the RecentTs field.
func (o *V1AuditLogsPostRequest) SetRecentTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.RecentTs = &v
}

// GetSelectors returns the Selectors field value if set, zero value otherwise.
func (o *V1AuditLogsPostRequest) GetSelectors() []V1AuditLogsPostRequestSelectorsInner {
	if o == nil || IsNil(o.Selectors) {
		var ret []V1AuditLogsPostRequestSelectorsInner
		return ret
	}
	return o.Selectors
}

// GetSelectorsOk returns a tuple with the Selectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditLogsPostRequest) GetSelectorsOk() ([]V1AuditLogsPostRequestSelectorsInner, bool) {
	if o == nil || IsNil(o.Selectors) {
		return nil, false
	}
	return o.Selectors, true
}

// HasSelectors returns a boolean if a field has been set.
func (o *V1AuditLogsPostRequest) HasSelectors() bool {
	if o != nil && !IsNil(o.Selectors) {
		return true
	}

	return false
}

// SetSelectors gets a reference to the given []V1AuditLogsPostRequestSelectorsInner and assigns it to the Selectors field.
func (o *V1AuditLogsPostRequest) SetSelectors(v []V1AuditLogsPostRequestSelectorsInner) {
	o.Selectors = v
}

func (o V1AuditLogsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AuditLogsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CursorRef) {
		toSerialize["cursorRef"] = o.CursorRef
	}
	if !IsNil(o.HistogramBucketSizeSec) {
		toSerialize["histogramBucketSizeSec"] = o.HistogramBucketSizeSec
	}
	if !IsNil(o.NumLogs) {
		toSerialize["numLogs"] = o.NumLogs
	}
	if !IsNil(o.OldTs) {
		toSerialize["oldTs"] = o.OldTs
	}
	if !IsNil(o.RecentTs) {
		toSerialize["recentTs"] = o.RecentTs
	}
	if !IsNil(o.Selectors) {
		toSerialize["selectors"] = o.Selectors
	}
	return toSerialize, nil
}

type NullableV1AuditLogsPostRequest struct {
	value *V1AuditLogsPostRequest
	isSet bool
}

func (v NullableV1AuditLogsPostRequest) Get() *V1AuditLogsPostRequest {
	return v.value
}

func (v *NullableV1AuditLogsPostRequest) Set(val *V1AuditLogsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AuditLogsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AuditLogsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AuditLogsPostRequest(val *V1AuditLogsPostRequest) *NullableV1AuditLogsPostRequest {
	return &NullableV1AuditLogsPostRequest{value: val, isSet: true}
}

func (v NullableV1AuditLogsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AuditLogsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


