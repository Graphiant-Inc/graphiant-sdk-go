/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCorePrometheus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCorePrometheus{}

// V1DevicesDeviceIdConfigPutRequestCorePrometheus struct for V1DevicesDeviceIdConfigPutRequestCorePrometheus
type V1DevicesDeviceIdConfigPutRequestCorePrometheus struct {
	RuleGroups *map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValue `json:"ruleGroups,omitempty"`
	Sink *V1DevicesDeviceIdConfigPutRequestCorePrometheusSink `json:"sink,omitempty"`
	SysdbMonitors *map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusSysdbMonitorsValue `json:"sysdbMonitors,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCorePrometheus instantiates a new V1DevicesDeviceIdConfigPutRequestCorePrometheus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCorePrometheus() *V1DevicesDeviceIdConfigPutRequestCorePrometheus {
	this := V1DevicesDeviceIdConfigPutRequestCorePrometheus{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCorePrometheusWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCorePrometheus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCorePrometheusWithDefaults() *V1DevicesDeviceIdConfigPutRequestCorePrometheus {
	this := V1DevicesDeviceIdConfigPutRequestCorePrometheus{}
	return &this
}

// GetRuleGroups returns the RuleGroups field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) GetRuleGroups() map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValue {
	if o == nil || IsNil(o.RuleGroups) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValue
		return ret
	}
	return *o.RuleGroups
}

// GetRuleGroupsOk returns a tuple with the RuleGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) GetRuleGroupsOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValue, bool) {
	if o == nil || IsNil(o.RuleGroups) {
		return nil, false
	}
	return o.RuleGroups, true
}

// HasRuleGroups returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) HasRuleGroups() bool {
	if o != nil && !IsNil(o.RuleGroups) {
		return true
	}

	return false
}

// SetRuleGroups gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValue and assigns it to the RuleGroups field.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) SetRuleGroups(v map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusRuleGroupsValue) {
	o.RuleGroups = &v
}

// GetSink returns the Sink field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) GetSink() V1DevicesDeviceIdConfigPutRequestCorePrometheusSink {
	if o == nil || IsNil(o.Sink) {
		var ret V1DevicesDeviceIdConfigPutRequestCorePrometheusSink
		return ret
	}
	return *o.Sink
}

// GetSinkOk returns a tuple with the Sink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) GetSinkOk() (*V1DevicesDeviceIdConfigPutRequestCorePrometheusSink, bool) {
	if o == nil || IsNil(o.Sink) {
		return nil, false
	}
	return o.Sink, true
}

// HasSink returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) HasSink() bool {
	if o != nil && !IsNil(o.Sink) {
		return true
	}

	return false
}

// SetSink gets a reference to the given V1DevicesDeviceIdConfigPutRequestCorePrometheusSink and assigns it to the Sink field.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) SetSink(v V1DevicesDeviceIdConfigPutRequestCorePrometheusSink) {
	o.Sink = &v
}

// GetSysdbMonitors returns the SysdbMonitors field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) GetSysdbMonitors() map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusSysdbMonitorsValue {
	if o == nil || IsNil(o.SysdbMonitors) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusSysdbMonitorsValue
		return ret
	}
	return *o.SysdbMonitors
}

// GetSysdbMonitorsOk returns a tuple with the SysdbMonitors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) GetSysdbMonitorsOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusSysdbMonitorsValue, bool) {
	if o == nil || IsNil(o.SysdbMonitors) {
		return nil, false
	}
	return o.SysdbMonitors, true
}

// HasSysdbMonitors returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) HasSysdbMonitors() bool {
	if o != nil && !IsNil(o.SysdbMonitors) {
		return true
	}

	return false
}

// SetSysdbMonitors gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusSysdbMonitorsValue and assigns it to the SysdbMonitors field.
func (o *V1DevicesDeviceIdConfigPutRequestCorePrometheus) SetSysdbMonitors(v map[string]V1DevicesDeviceIdConfigPutRequestCorePrometheusSysdbMonitorsValue) {
	o.SysdbMonitors = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCorePrometheus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCorePrometheus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RuleGroups) {
		toSerialize["ruleGroups"] = o.RuleGroups
	}
	if !IsNil(o.Sink) {
		toSerialize["sink"] = o.Sink
	}
	if !IsNil(o.SysdbMonitors) {
		toSerialize["sysdbMonitors"] = o.SysdbMonitors
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCorePrometheus struct {
	value *V1DevicesDeviceIdConfigPutRequestCorePrometheus
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCorePrometheus) Get() *V1DevicesDeviceIdConfigPutRequestCorePrometheus {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCorePrometheus) Set(val *V1DevicesDeviceIdConfigPutRequestCorePrometheus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCorePrometheus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCorePrometheus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCorePrometheus(val *V1DevicesDeviceIdConfigPutRequestCorePrometheus) *NullableV1DevicesDeviceIdConfigPutRequestCorePrometheus {
	return &NullableV1DevicesDeviceIdConfigPutRequestCorePrometheus{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCorePrometheus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCorePrometheus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


