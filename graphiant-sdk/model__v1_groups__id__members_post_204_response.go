/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GroupsIdMembersPost204Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GroupsIdMembersPost204Response{}

// V1GroupsIdMembersPost204Response struct for V1GroupsIdMembersPost204Response
type V1GroupsIdMembersPost204Response struct {
	AffectedUsers []string `json:"affectedUsers,omitempty"`
	EnterpriseGroup *bool `json:"enterpriseGroup,omitempty"`
}

// NewV1GroupsIdMembersPost204Response instantiates a new V1GroupsIdMembersPost204Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GroupsIdMembersPost204Response() *V1GroupsIdMembersPost204Response {
	this := V1GroupsIdMembersPost204Response{}
	return &this
}

// NewV1GroupsIdMembersPost204ResponseWithDefaults instantiates a new V1GroupsIdMembersPost204Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GroupsIdMembersPost204ResponseWithDefaults() *V1GroupsIdMembersPost204Response {
	this := V1GroupsIdMembersPost204Response{}
	return &this
}

// GetAffectedUsers returns the AffectedUsers field value if set, zero value otherwise.
func (o *V1GroupsIdMembersPost204Response) GetAffectedUsers() []string {
	if o == nil || IsNil(o.AffectedUsers) {
		var ret []string
		return ret
	}
	return o.AffectedUsers
}

// GetAffectedUsersOk returns a tuple with the AffectedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsIdMembersPost204Response) GetAffectedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.AffectedUsers) {
		return nil, false
	}
	return o.AffectedUsers, true
}

// HasAffectedUsers returns a boolean if a field has been set.
func (o *V1GroupsIdMembersPost204Response) HasAffectedUsers() bool {
	if o != nil && !IsNil(o.AffectedUsers) {
		return true
	}

	return false
}

// SetAffectedUsers gets a reference to the given []string and assigns it to the AffectedUsers field.
func (o *V1GroupsIdMembersPost204Response) SetAffectedUsers(v []string) {
	o.AffectedUsers = v
}

// GetEnterpriseGroup returns the EnterpriseGroup field value if set, zero value otherwise.
func (o *V1GroupsIdMembersPost204Response) GetEnterpriseGroup() bool {
	if o == nil || IsNil(o.EnterpriseGroup) {
		var ret bool
		return ret
	}
	return *o.EnterpriseGroup
}

// GetEnterpriseGroupOk returns a tuple with the EnterpriseGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GroupsIdMembersPost204Response) GetEnterpriseGroupOk() (*bool, bool) {
	if o == nil || IsNil(o.EnterpriseGroup) {
		return nil, false
	}
	return o.EnterpriseGroup, true
}

// HasEnterpriseGroup returns a boolean if a field has been set.
func (o *V1GroupsIdMembersPost204Response) HasEnterpriseGroup() bool {
	if o != nil && !IsNil(o.EnterpriseGroup) {
		return true
	}

	return false
}

// SetEnterpriseGroup gets a reference to the given bool and assigns it to the EnterpriseGroup field.
func (o *V1GroupsIdMembersPost204Response) SetEnterpriseGroup(v bool) {
	o.EnterpriseGroup = &v
}

func (o V1GroupsIdMembersPost204Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GroupsIdMembersPost204Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffectedUsers) {
		toSerialize["affectedUsers"] = o.AffectedUsers
	}
	if !IsNil(o.EnterpriseGroup) {
		toSerialize["enterpriseGroup"] = o.EnterpriseGroup
	}
	return toSerialize, nil
}

type NullableV1GroupsIdMembersPost204Response struct {
	value *V1GroupsIdMembersPost204Response
	isSet bool
}

func (v NullableV1GroupsIdMembersPost204Response) Get() *V1GroupsIdMembersPost204Response {
	return v.value
}

func (v *NullableV1GroupsIdMembersPost204Response) Set(val *V1GroupsIdMembersPost204Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GroupsIdMembersPost204Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GroupsIdMembersPost204Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GroupsIdMembersPost204Response(val *V1GroupsIdMembersPost204Response) *NullableV1GroupsIdMembersPost204Response {
	return &NullableV1GroupsIdMembersPost204Response{value: val, isSet: true}
}

func (v NullableV1GroupsIdMembersPost204Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GroupsIdMembersPost204Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


