/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner{}

// V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner struct for V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner
type V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner struct {
	Address *string `json:"address,omitempty"`
	Cost *int32 `json:"cost,omitempty"`
	DeadTimer *int32 `json:"deadTimer,omitempty"`
	LastStateChange *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"lastStateChange,omitempty"`
	RouterId *string `json:"routerId,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner instantiates a new V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner() *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner {
	this := V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner{}
	return &this
}

// NewV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInnerWithDefaults instantiates a new V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInnerWithDefaults() *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner {
	this := V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) SetAddress(v string) {
	o.Address = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetCost() int32 {
	if o == nil || IsNil(o.Cost) {
		var ret int32
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetCostOk() (*int32, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given int32 and assigns it to the Cost field.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) SetCost(v int32) {
	o.Cost = &v
}

// GetDeadTimer returns the DeadTimer field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetDeadTimer() int32 {
	if o == nil || IsNil(o.DeadTimer) {
		var ret int32
		return ret
	}
	return *o.DeadTimer
}

// GetDeadTimerOk returns a tuple with the DeadTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetDeadTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.DeadTimer) {
		return nil, false
	}
	return o.DeadTimer, true
}

// HasDeadTimer returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) HasDeadTimer() bool {
	if o != nil && !IsNil(o.DeadTimer) {
		return true
	}

	return false
}

// SetDeadTimer gets a reference to the given int32 and assigns it to the DeadTimer field.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) SetDeadTimer(v int32) {
	o.DeadTimer = &v
}

// GetLastStateChange returns the LastStateChange field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetLastStateChange() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.LastStateChange) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.LastStateChange
}

// GetLastStateChangeOk returns a tuple with the LastStateChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetLastStateChangeOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.LastStateChange) {
		return nil, false
	}
	return o.LastStateChange, true
}

// HasLastStateChange returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) HasLastStateChange() bool {
	if o != nil && !IsNil(o.LastStateChange) {
		return true
	}

	return false
}

// SetLastStateChange gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the LastStateChange field.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) SetLastStateChange(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.LastStateChange = &v
}

// GetRouterId returns the RouterId field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetRouterId() string {
	if o == nil || IsNil(o.RouterId) {
		var ret string
		return ret
	}
	return *o.RouterId
}

// GetRouterIdOk returns a tuple with the RouterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetRouterIdOk() (*string, bool) {
	if o == nil || IsNil(o.RouterId) {
		return nil, false
	}
	return o.RouterId, true
}

// HasRouterId returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) HasRouterId() bool {
	if o != nil && !IsNil(o.RouterId) {
		return true
	}

	return false
}

// SetRouterId gets a reference to the given string and assigns it to the RouterId field.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) SetRouterId(v string) {
	o.RouterId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) SetState(v string) {
	o.State = &v
}

func (o V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.DeadTimer) {
		toSerialize["deadTimer"] = o.DeadTimer
	}
	if !IsNil(o.LastStateChange) {
		toSerialize["lastStateChange"] = o.LastStateChange
	}
	if !IsNil(o.RouterId) {
		toSerialize["routerId"] = o.RouterId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner struct {
	value *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner
	isSet bool
}

func (v NullableV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) Get() *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner {
	return v.value
}

func (v *NullableV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) Set(val *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner(val *V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) *NullableV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner {
	return &NullableV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner{value: val, isSet: true}
}

func (v NullableV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


