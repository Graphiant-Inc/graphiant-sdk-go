/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1ExtranetsB2bPost200ResponsePolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ExtranetsB2bPost200ResponsePolicy{}

// V1ExtranetsB2bPost200ResponsePolicy struct for V1ExtranetsB2bPost200ResponsePolicy
type V1ExtranetsB2bPost200ResponsePolicy struct {
	DnsName *string `json:"dnsName,omitempty"`
	InboundSecurityRules []V1ExtranetsB2bConsumerPost200ResponsePolicyInnerInboundSecurityRulesInner `json:"inboundSecurityRules,omitempty"`
	Policy *V1ExtranetsB2bPostRequestPolicy `json:"policy,omitempty"`
	ServiceName *string `json:"serviceName,omitempty"`
	TrafficRules []V1ExtranetsB2bConsumerPost200ResponsePolicyInnerTrafficRulesInner `json:"trafficRules,omitempty"`
}

// NewV1ExtranetsB2bPost200ResponsePolicy instantiates a new V1ExtranetsB2bPost200ResponsePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExtranetsB2bPost200ResponsePolicy() *V1ExtranetsB2bPost200ResponsePolicy {
	this := V1ExtranetsB2bPost200ResponsePolicy{}
	return &this
}

// NewV1ExtranetsB2bPost200ResponsePolicyWithDefaults instantiates a new V1ExtranetsB2bPost200ResponsePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExtranetsB2bPost200ResponsePolicyWithDefaults() *V1ExtranetsB2bPost200ResponsePolicy {
	this := V1ExtranetsB2bPost200ResponsePolicy{}
	return &this
}

// GetDnsName returns the DnsName field value if set, zero value otherwise.
func (o *V1ExtranetsB2bPost200ResponsePolicy) GetDnsName() string {
	if o == nil || IsNil(o.DnsName) {
		var ret string
		return ret
	}
	return *o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsB2bPost200ResponsePolicy) GetDnsNameOk() (*string, bool) {
	if o == nil || IsNil(o.DnsName) {
		return nil, false
	}
	return o.DnsName, true
}

// HasDnsName returns a boolean if a field has been set.
func (o *V1ExtranetsB2bPost200ResponsePolicy) HasDnsName() bool {
	if o != nil && !IsNil(o.DnsName) {
		return true
	}

	return false
}

// SetDnsName gets a reference to the given string and assigns it to the DnsName field.
func (o *V1ExtranetsB2bPost200ResponsePolicy) SetDnsName(v string) {
	o.DnsName = &v
}

// GetInboundSecurityRules returns the InboundSecurityRules field value if set, zero value otherwise.
func (o *V1ExtranetsB2bPost200ResponsePolicy) GetInboundSecurityRules() []V1ExtranetsB2bConsumerPost200ResponsePolicyInnerInboundSecurityRulesInner {
	if o == nil || IsNil(o.InboundSecurityRules) {
		var ret []V1ExtranetsB2bConsumerPost200ResponsePolicyInnerInboundSecurityRulesInner
		return ret
	}
	return o.InboundSecurityRules
}

// GetInboundSecurityRulesOk returns a tuple with the InboundSecurityRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsB2bPost200ResponsePolicy) GetInboundSecurityRulesOk() ([]V1ExtranetsB2bConsumerPost200ResponsePolicyInnerInboundSecurityRulesInner, bool) {
	if o == nil || IsNil(o.InboundSecurityRules) {
		return nil, false
	}
	return o.InboundSecurityRules, true
}

// HasInboundSecurityRules returns a boolean if a field has been set.
func (o *V1ExtranetsB2bPost200ResponsePolicy) HasInboundSecurityRules() bool {
	if o != nil && !IsNil(o.InboundSecurityRules) {
		return true
	}

	return false
}

// SetInboundSecurityRules gets a reference to the given []V1ExtranetsB2bConsumerPost200ResponsePolicyInnerInboundSecurityRulesInner and assigns it to the InboundSecurityRules field.
func (o *V1ExtranetsB2bPost200ResponsePolicy) SetInboundSecurityRules(v []V1ExtranetsB2bConsumerPost200ResponsePolicyInnerInboundSecurityRulesInner) {
	o.InboundSecurityRules = v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *V1ExtranetsB2bPost200ResponsePolicy) GetPolicy() V1ExtranetsB2bPostRequestPolicy {
	if o == nil || IsNil(o.Policy) {
		var ret V1ExtranetsB2bPostRequestPolicy
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsB2bPost200ResponsePolicy) GetPolicyOk() (*V1ExtranetsB2bPostRequestPolicy, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *V1ExtranetsB2bPost200ResponsePolicy) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given V1ExtranetsB2bPostRequestPolicy and assigns it to the Policy field.
func (o *V1ExtranetsB2bPost200ResponsePolicy) SetPolicy(v V1ExtranetsB2bPostRequestPolicy) {
	o.Policy = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *V1ExtranetsB2bPost200ResponsePolicy) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsB2bPost200ResponsePolicy) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *V1ExtranetsB2bPost200ResponsePolicy) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *V1ExtranetsB2bPost200ResponsePolicy) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetTrafficRules returns the TrafficRules field value if set, zero value otherwise.
func (o *V1ExtranetsB2bPost200ResponsePolicy) GetTrafficRules() []V1ExtranetsB2bConsumerPost200ResponsePolicyInnerTrafficRulesInner {
	if o == nil || IsNil(o.TrafficRules) {
		var ret []V1ExtranetsB2bConsumerPost200ResponsePolicyInnerTrafficRulesInner
		return ret
	}
	return o.TrafficRules
}

// GetTrafficRulesOk returns a tuple with the TrafficRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsB2bPost200ResponsePolicy) GetTrafficRulesOk() ([]V1ExtranetsB2bConsumerPost200ResponsePolicyInnerTrafficRulesInner, bool) {
	if o == nil || IsNil(o.TrafficRules) {
		return nil, false
	}
	return o.TrafficRules, true
}

// HasTrafficRules returns a boolean if a field has been set.
func (o *V1ExtranetsB2bPost200ResponsePolicy) HasTrafficRules() bool {
	if o != nil && !IsNil(o.TrafficRules) {
		return true
	}

	return false
}

// SetTrafficRules gets a reference to the given []V1ExtranetsB2bConsumerPost200ResponsePolicyInnerTrafficRulesInner and assigns it to the TrafficRules field.
func (o *V1ExtranetsB2bPost200ResponsePolicy) SetTrafficRules(v []V1ExtranetsB2bConsumerPost200ResponsePolicyInnerTrafficRulesInner) {
	o.TrafficRules = v
}

func (o V1ExtranetsB2bPost200ResponsePolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ExtranetsB2bPost200ResponsePolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsName) {
		toSerialize["dnsName"] = o.DnsName
	}
	if !IsNil(o.InboundSecurityRules) {
		toSerialize["inboundSecurityRules"] = o.InboundSecurityRules
	}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	if !IsNil(o.ServiceName) {
		toSerialize["serviceName"] = o.ServiceName
	}
	if !IsNil(o.TrafficRules) {
		toSerialize["trafficRules"] = o.TrafficRules
	}
	return toSerialize, nil
}

type NullableV1ExtranetsB2bPost200ResponsePolicy struct {
	value *V1ExtranetsB2bPost200ResponsePolicy
	isSet bool
}

func (v NullableV1ExtranetsB2bPost200ResponsePolicy) Get() *V1ExtranetsB2bPost200ResponsePolicy {
	return v.value
}

func (v *NullableV1ExtranetsB2bPost200ResponsePolicy) Set(val *V1ExtranetsB2bPost200ResponsePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExtranetsB2bPost200ResponsePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExtranetsB2bPost200ResponsePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExtranetsB2bPost200ResponsePolicy(val *V1ExtranetsB2bPost200ResponsePolicy) *NullableV1ExtranetsB2bPost200ResponsePolicy {
	return &NullableV1ExtranetsB2bPost200ResponsePolicy{value: val, isSet: true}
}

func (v NullableV1ExtranetsB2bPost200ResponsePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExtranetsB2bPost200ResponsePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


