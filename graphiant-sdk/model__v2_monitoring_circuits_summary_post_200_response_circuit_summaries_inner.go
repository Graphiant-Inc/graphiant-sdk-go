/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner{}

// V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner struct for V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner
type V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner struct {
	AverageDelay *float32 `json:"averageDelay,omitempty"`
	AverageJitter *float32 `json:"averageJitter,omitempty"`
	AverageLinkDownSpeedKbps *float32 `json:"averageLinkDownSpeedKbps,omitempty"`
	AverageLinkUpSpeedKbps *float32 `json:"averageLinkUpSpeedKbps,omitempty"`
	AverageLoss *float32 `json:"averageLoss,omitempty"`
	AvgMos *float32 `json:"avgMos,omitempty"`
	CircuitName *string `json:"circuitName,omitempty"`
	ConfigLinkDownSpeedMbps *int32 `json:"configLinkDownSpeedMbps,omitempty"`
	ConfigLinkUpSpeedMbps *int32 `json:"configLinkUpSpeedMbps,omitempty"`
	ConnectionStatus *string `json:"connectionStatus,omitempty"`
	CurrentLinkDownSpeedKbps *float32 `json:"currentLinkDownSpeedKbps,omitempty"`
	CurrentLinkUpSpeedKbps *float32 `json:"currentLinkUpSpeedKbps,omitempty"`
	Delay *int64 `json:"delay,omitempty"`
	Jitter *int64 `json:"jitter,omitempty"`
	LastResort *bool `json:"lastResort,omitempty"`
	Loss *float32 `json:"loss,omitempty"`
	MaxDelay *float32 `json:"maxDelay,omitempty"`
	MaxJitter *float32 `json:"maxJitter,omitempty"`
	MaxLoss *float32 `json:"maxLoss,omitempty"`
	MaxMos *float32 `json:"maxMos,omitempty"`
	MinDelay *float32 `json:"minDelay,omitempty"`
	MinJitter *float32 `json:"minJitter,omitempty"`
	MinLoss *float32 `json:"minLoss,omitempty"`
	MinMos *float32 `json:"minMos,omitempty"`
	Mos *float32 `json:"mos,omitempty"`
}

// NewV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner instantiates a new V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner() *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner {
	this := V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner{}
	return &this
}

// NewV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInnerWithDefaults instantiates a new V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInnerWithDefaults() *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner {
	this := V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner{}
	return &this
}

// GetAverageDelay returns the AverageDelay field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAverageDelay() float32 {
	if o == nil || IsNil(o.AverageDelay) {
		var ret float32
		return ret
	}
	return *o.AverageDelay
}

// GetAverageDelayOk returns a tuple with the AverageDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAverageDelayOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageDelay) {
		return nil, false
	}
	return o.AverageDelay, true
}

// HasAverageDelay returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasAverageDelay() bool {
	if o != nil && !IsNil(o.AverageDelay) {
		return true
	}

	return false
}

// SetAverageDelay gets a reference to the given float32 and assigns it to the AverageDelay field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetAverageDelay(v float32) {
	o.AverageDelay = &v
}

// GetAverageJitter returns the AverageJitter field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAverageJitter() float32 {
	if o == nil || IsNil(o.AverageJitter) {
		var ret float32
		return ret
	}
	return *o.AverageJitter
}

// GetAverageJitterOk returns a tuple with the AverageJitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAverageJitterOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageJitter) {
		return nil, false
	}
	return o.AverageJitter, true
}

// HasAverageJitter returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasAverageJitter() bool {
	if o != nil && !IsNil(o.AverageJitter) {
		return true
	}

	return false
}

// SetAverageJitter gets a reference to the given float32 and assigns it to the AverageJitter field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetAverageJitter(v float32) {
	o.AverageJitter = &v
}

// GetAverageLinkDownSpeedKbps returns the AverageLinkDownSpeedKbps field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAverageLinkDownSpeedKbps() float32 {
	if o == nil || IsNil(o.AverageLinkDownSpeedKbps) {
		var ret float32
		return ret
	}
	return *o.AverageLinkDownSpeedKbps
}

// GetAverageLinkDownSpeedKbpsOk returns a tuple with the AverageLinkDownSpeedKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAverageLinkDownSpeedKbpsOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageLinkDownSpeedKbps) {
		return nil, false
	}
	return o.AverageLinkDownSpeedKbps, true
}

// HasAverageLinkDownSpeedKbps returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasAverageLinkDownSpeedKbps() bool {
	if o != nil && !IsNil(o.AverageLinkDownSpeedKbps) {
		return true
	}

	return false
}

// SetAverageLinkDownSpeedKbps gets a reference to the given float32 and assigns it to the AverageLinkDownSpeedKbps field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetAverageLinkDownSpeedKbps(v float32) {
	o.AverageLinkDownSpeedKbps = &v
}

// GetAverageLinkUpSpeedKbps returns the AverageLinkUpSpeedKbps field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAverageLinkUpSpeedKbps() float32 {
	if o == nil || IsNil(o.AverageLinkUpSpeedKbps) {
		var ret float32
		return ret
	}
	return *o.AverageLinkUpSpeedKbps
}

// GetAverageLinkUpSpeedKbpsOk returns a tuple with the AverageLinkUpSpeedKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAverageLinkUpSpeedKbpsOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageLinkUpSpeedKbps) {
		return nil, false
	}
	return o.AverageLinkUpSpeedKbps, true
}

// HasAverageLinkUpSpeedKbps returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasAverageLinkUpSpeedKbps() bool {
	if o != nil && !IsNil(o.AverageLinkUpSpeedKbps) {
		return true
	}

	return false
}

// SetAverageLinkUpSpeedKbps gets a reference to the given float32 and assigns it to the AverageLinkUpSpeedKbps field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetAverageLinkUpSpeedKbps(v float32) {
	o.AverageLinkUpSpeedKbps = &v
}

// GetAverageLoss returns the AverageLoss field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAverageLoss() float32 {
	if o == nil || IsNil(o.AverageLoss) {
		var ret float32
		return ret
	}
	return *o.AverageLoss
}

// GetAverageLossOk returns a tuple with the AverageLoss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAverageLossOk() (*float32, bool) {
	if o == nil || IsNil(o.AverageLoss) {
		return nil, false
	}
	return o.AverageLoss, true
}

// HasAverageLoss returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasAverageLoss() bool {
	if o != nil && !IsNil(o.AverageLoss) {
		return true
	}

	return false
}

// SetAverageLoss gets a reference to the given float32 and assigns it to the AverageLoss field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetAverageLoss(v float32) {
	o.AverageLoss = &v
}

// GetAvgMos returns the AvgMos field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAvgMos() float32 {
	if o == nil || IsNil(o.AvgMos) {
		var ret float32
		return ret
	}
	return *o.AvgMos
}

// GetAvgMosOk returns a tuple with the AvgMos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetAvgMosOk() (*float32, bool) {
	if o == nil || IsNil(o.AvgMos) {
		return nil, false
	}
	return o.AvgMos, true
}

// HasAvgMos returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasAvgMos() bool {
	if o != nil && !IsNil(o.AvgMos) {
		return true
	}

	return false
}

// SetAvgMos gets a reference to the given float32 and assigns it to the AvgMos field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetAvgMos(v float32) {
	o.AvgMos = &v
}

// GetCircuitName returns the CircuitName field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetCircuitName() string {
	if o == nil || IsNil(o.CircuitName) {
		var ret string
		return ret
	}
	return *o.CircuitName
}

// GetCircuitNameOk returns a tuple with the CircuitName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetCircuitNameOk() (*string, bool) {
	if o == nil || IsNil(o.CircuitName) {
		return nil, false
	}
	return o.CircuitName, true
}

// HasCircuitName returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasCircuitName() bool {
	if o != nil && !IsNil(o.CircuitName) {
		return true
	}

	return false
}

// SetCircuitName gets a reference to the given string and assigns it to the CircuitName field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetCircuitName(v string) {
	o.CircuitName = &v
}

// GetConfigLinkDownSpeedMbps returns the ConfigLinkDownSpeedMbps field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetConfigLinkDownSpeedMbps() int32 {
	if o == nil || IsNil(o.ConfigLinkDownSpeedMbps) {
		var ret int32
		return ret
	}
	return *o.ConfigLinkDownSpeedMbps
}

// GetConfigLinkDownSpeedMbpsOk returns a tuple with the ConfigLinkDownSpeedMbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetConfigLinkDownSpeedMbpsOk() (*int32, bool) {
	if o == nil || IsNil(o.ConfigLinkDownSpeedMbps) {
		return nil, false
	}
	return o.ConfigLinkDownSpeedMbps, true
}

// HasConfigLinkDownSpeedMbps returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasConfigLinkDownSpeedMbps() bool {
	if o != nil && !IsNil(o.ConfigLinkDownSpeedMbps) {
		return true
	}

	return false
}

// SetConfigLinkDownSpeedMbps gets a reference to the given int32 and assigns it to the ConfigLinkDownSpeedMbps field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetConfigLinkDownSpeedMbps(v int32) {
	o.ConfigLinkDownSpeedMbps = &v
}

// GetConfigLinkUpSpeedMbps returns the ConfigLinkUpSpeedMbps field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetConfigLinkUpSpeedMbps() int32 {
	if o == nil || IsNil(o.ConfigLinkUpSpeedMbps) {
		var ret int32
		return ret
	}
	return *o.ConfigLinkUpSpeedMbps
}

// GetConfigLinkUpSpeedMbpsOk returns a tuple with the ConfigLinkUpSpeedMbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetConfigLinkUpSpeedMbpsOk() (*int32, bool) {
	if o == nil || IsNil(o.ConfigLinkUpSpeedMbps) {
		return nil, false
	}
	return o.ConfigLinkUpSpeedMbps, true
}

// HasConfigLinkUpSpeedMbps returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasConfigLinkUpSpeedMbps() bool {
	if o != nil && !IsNil(o.ConfigLinkUpSpeedMbps) {
		return true
	}

	return false
}

// SetConfigLinkUpSpeedMbps gets a reference to the given int32 and assigns it to the ConfigLinkUpSpeedMbps field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetConfigLinkUpSpeedMbps(v int32) {
	o.ConfigLinkUpSpeedMbps = &v
}

// GetConnectionStatus returns the ConnectionStatus field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetConnectionStatus() string {
	if o == nil || IsNil(o.ConnectionStatus) {
		var ret string
		return ret
	}
	return *o.ConnectionStatus
}

// GetConnectionStatusOk returns a tuple with the ConnectionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetConnectionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionStatus) {
		return nil, false
	}
	return o.ConnectionStatus, true
}

// HasConnectionStatus returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasConnectionStatus() bool {
	if o != nil && !IsNil(o.ConnectionStatus) {
		return true
	}

	return false
}

// SetConnectionStatus gets a reference to the given string and assigns it to the ConnectionStatus field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetConnectionStatus(v string) {
	o.ConnectionStatus = &v
}

// GetCurrentLinkDownSpeedKbps returns the CurrentLinkDownSpeedKbps field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetCurrentLinkDownSpeedKbps() float32 {
	if o == nil || IsNil(o.CurrentLinkDownSpeedKbps) {
		var ret float32
		return ret
	}
	return *o.CurrentLinkDownSpeedKbps
}

// GetCurrentLinkDownSpeedKbpsOk returns a tuple with the CurrentLinkDownSpeedKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetCurrentLinkDownSpeedKbpsOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentLinkDownSpeedKbps) {
		return nil, false
	}
	return o.CurrentLinkDownSpeedKbps, true
}

// HasCurrentLinkDownSpeedKbps returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasCurrentLinkDownSpeedKbps() bool {
	if o != nil && !IsNil(o.CurrentLinkDownSpeedKbps) {
		return true
	}

	return false
}

// SetCurrentLinkDownSpeedKbps gets a reference to the given float32 and assigns it to the CurrentLinkDownSpeedKbps field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetCurrentLinkDownSpeedKbps(v float32) {
	o.CurrentLinkDownSpeedKbps = &v
}

// GetCurrentLinkUpSpeedKbps returns the CurrentLinkUpSpeedKbps field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetCurrentLinkUpSpeedKbps() float32 {
	if o == nil || IsNil(o.CurrentLinkUpSpeedKbps) {
		var ret float32
		return ret
	}
	return *o.CurrentLinkUpSpeedKbps
}

// GetCurrentLinkUpSpeedKbpsOk returns a tuple with the CurrentLinkUpSpeedKbps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetCurrentLinkUpSpeedKbpsOk() (*float32, bool) {
	if o == nil || IsNil(o.CurrentLinkUpSpeedKbps) {
		return nil, false
	}
	return o.CurrentLinkUpSpeedKbps, true
}

// HasCurrentLinkUpSpeedKbps returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasCurrentLinkUpSpeedKbps() bool {
	if o != nil && !IsNil(o.CurrentLinkUpSpeedKbps) {
		return true
	}

	return false
}

// SetCurrentLinkUpSpeedKbps gets a reference to the given float32 and assigns it to the CurrentLinkUpSpeedKbps field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetCurrentLinkUpSpeedKbps(v float32) {
	o.CurrentLinkUpSpeedKbps = &v
}

// GetDelay returns the Delay field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetDelay() int64 {
	if o == nil || IsNil(o.Delay) {
		var ret int64
		return ret
	}
	return *o.Delay
}

// GetDelayOk returns a tuple with the Delay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetDelayOk() (*int64, bool) {
	if o == nil || IsNil(o.Delay) {
		return nil, false
	}
	return o.Delay, true
}

// HasDelay returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasDelay() bool {
	if o != nil && !IsNil(o.Delay) {
		return true
	}

	return false
}

// SetDelay gets a reference to the given int64 and assigns it to the Delay field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetDelay(v int64) {
	o.Delay = &v
}

// GetJitter returns the Jitter field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetJitter() int64 {
	if o == nil || IsNil(o.Jitter) {
		var ret int64
		return ret
	}
	return *o.Jitter
}

// GetJitterOk returns a tuple with the Jitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetJitterOk() (*int64, bool) {
	if o == nil || IsNil(o.Jitter) {
		return nil, false
	}
	return o.Jitter, true
}

// HasJitter returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasJitter() bool {
	if o != nil && !IsNil(o.Jitter) {
		return true
	}

	return false
}

// SetJitter gets a reference to the given int64 and assigns it to the Jitter field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetJitter(v int64) {
	o.Jitter = &v
}

// GetLastResort returns the LastResort field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetLastResort() bool {
	if o == nil || IsNil(o.LastResort) {
		var ret bool
		return ret
	}
	return *o.LastResort
}

// GetLastResortOk returns a tuple with the LastResort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetLastResortOk() (*bool, bool) {
	if o == nil || IsNil(o.LastResort) {
		return nil, false
	}
	return o.LastResort, true
}

// HasLastResort returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasLastResort() bool {
	if o != nil && !IsNil(o.LastResort) {
		return true
	}

	return false
}

// SetLastResort gets a reference to the given bool and assigns it to the LastResort field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetLastResort(v bool) {
	o.LastResort = &v
}

// GetLoss returns the Loss field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetLoss() float32 {
	if o == nil || IsNil(o.Loss) {
		var ret float32
		return ret
	}
	return *o.Loss
}

// GetLossOk returns a tuple with the Loss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetLossOk() (*float32, bool) {
	if o == nil || IsNil(o.Loss) {
		return nil, false
	}
	return o.Loss, true
}

// HasLoss returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasLoss() bool {
	if o != nil && !IsNil(o.Loss) {
		return true
	}

	return false
}

// SetLoss gets a reference to the given float32 and assigns it to the Loss field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetLoss(v float32) {
	o.Loss = &v
}

// GetMaxDelay returns the MaxDelay field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMaxDelay() float32 {
	if o == nil || IsNil(o.MaxDelay) {
		var ret float32
		return ret
	}
	return *o.MaxDelay
}

// GetMaxDelayOk returns a tuple with the MaxDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMaxDelayOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxDelay) {
		return nil, false
	}
	return o.MaxDelay, true
}

// HasMaxDelay returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasMaxDelay() bool {
	if o != nil && !IsNil(o.MaxDelay) {
		return true
	}

	return false
}

// SetMaxDelay gets a reference to the given float32 and assigns it to the MaxDelay field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetMaxDelay(v float32) {
	o.MaxDelay = &v
}

// GetMaxJitter returns the MaxJitter field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMaxJitter() float32 {
	if o == nil || IsNil(o.MaxJitter) {
		var ret float32
		return ret
	}
	return *o.MaxJitter
}

// GetMaxJitterOk returns a tuple with the MaxJitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMaxJitterOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxJitter) {
		return nil, false
	}
	return o.MaxJitter, true
}

// HasMaxJitter returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasMaxJitter() bool {
	if o != nil && !IsNil(o.MaxJitter) {
		return true
	}

	return false
}

// SetMaxJitter gets a reference to the given float32 and assigns it to the MaxJitter field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetMaxJitter(v float32) {
	o.MaxJitter = &v
}

// GetMaxLoss returns the MaxLoss field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMaxLoss() float32 {
	if o == nil || IsNil(o.MaxLoss) {
		var ret float32
		return ret
	}
	return *o.MaxLoss
}

// GetMaxLossOk returns a tuple with the MaxLoss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMaxLossOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxLoss) {
		return nil, false
	}
	return o.MaxLoss, true
}

// HasMaxLoss returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasMaxLoss() bool {
	if o != nil && !IsNil(o.MaxLoss) {
		return true
	}

	return false
}

// SetMaxLoss gets a reference to the given float32 and assigns it to the MaxLoss field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetMaxLoss(v float32) {
	o.MaxLoss = &v
}

// GetMaxMos returns the MaxMos field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMaxMos() float32 {
	if o == nil || IsNil(o.MaxMos) {
		var ret float32
		return ret
	}
	return *o.MaxMos
}

// GetMaxMosOk returns a tuple with the MaxMos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMaxMosOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxMos) {
		return nil, false
	}
	return o.MaxMos, true
}

// HasMaxMos returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasMaxMos() bool {
	if o != nil && !IsNil(o.MaxMos) {
		return true
	}

	return false
}

// SetMaxMos gets a reference to the given float32 and assigns it to the MaxMos field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetMaxMos(v float32) {
	o.MaxMos = &v
}

// GetMinDelay returns the MinDelay field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMinDelay() float32 {
	if o == nil || IsNil(o.MinDelay) {
		var ret float32
		return ret
	}
	return *o.MinDelay
}

// GetMinDelayOk returns a tuple with the MinDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMinDelayOk() (*float32, bool) {
	if o == nil || IsNil(o.MinDelay) {
		return nil, false
	}
	return o.MinDelay, true
}

// HasMinDelay returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasMinDelay() bool {
	if o != nil && !IsNil(o.MinDelay) {
		return true
	}

	return false
}

// SetMinDelay gets a reference to the given float32 and assigns it to the MinDelay field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetMinDelay(v float32) {
	o.MinDelay = &v
}

// GetMinJitter returns the MinJitter field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMinJitter() float32 {
	if o == nil || IsNil(o.MinJitter) {
		var ret float32
		return ret
	}
	return *o.MinJitter
}

// GetMinJitterOk returns a tuple with the MinJitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMinJitterOk() (*float32, bool) {
	if o == nil || IsNil(o.MinJitter) {
		return nil, false
	}
	return o.MinJitter, true
}

// HasMinJitter returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasMinJitter() bool {
	if o != nil && !IsNil(o.MinJitter) {
		return true
	}

	return false
}

// SetMinJitter gets a reference to the given float32 and assigns it to the MinJitter field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetMinJitter(v float32) {
	o.MinJitter = &v
}

// GetMinLoss returns the MinLoss field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMinLoss() float32 {
	if o == nil || IsNil(o.MinLoss) {
		var ret float32
		return ret
	}
	return *o.MinLoss
}

// GetMinLossOk returns a tuple with the MinLoss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMinLossOk() (*float32, bool) {
	if o == nil || IsNil(o.MinLoss) {
		return nil, false
	}
	return o.MinLoss, true
}

// HasMinLoss returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasMinLoss() bool {
	if o != nil && !IsNil(o.MinLoss) {
		return true
	}

	return false
}

// SetMinLoss gets a reference to the given float32 and assigns it to the MinLoss field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetMinLoss(v float32) {
	o.MinLoss = &v
}

// GetMinMos returns the MinMos field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMinMos() float32 {
	if o == nil || IsNil(o.MinMos) {
		var ret float32
		return ret
	}
	return *o.MinMos
}

// GetMinMosOk returns a tuple with the MinMos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMinMosOk() (*float32, bool) {
	if o == nil || IsNil(o.MinMos) {
		return nil, false
	}
	return o.MinMos, true
}

// HasMinMos returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasMinMos() bool {
	if o != nil && !IsNil(o.MinMos) {
		return true
	}

	return false
}

// SetMinMos gets a reference to the given float32 and assigns it to the MinMos field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetMinMos(v float32) {
	o.MinMos = &v
}

// GetMos returns the Mos field value if set, zero value otherwise.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMos() float32 {
	if o == nil || IsNil(o.Mos) {
		var ret float32
		return ret
	}
	return *o.Mos
}

// GetMosOk returns a tuple with the Mos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) GetMosOk() (*float32, bool) {
	if o == nil || IsNil(o.Mos) {
		return nil, false
	}
	return o.Mos, true
}

// HasMos returns a boolean if a field has been set.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) HasMos() bool {
	if o != nil && !IsNil(o.Mos) {
		return true
	}

	return false
}

// SetMos gets a reference to the given float32 and assigns it to the Mos field.
func (o *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) SetMos(v float32) {
	o.Mos = &v
}

func (o V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AverageDelay) {
		toSerialize["averageDelay"] = o.AverageDelay
	}
	if !IsNil(o.AverageJitter) {
		toSerialize["averageJitter"] = o.AverageJitter
	}
	if !IsNil(o.AverageLinkDownSpeedKbps) {
		toSerialize["averageLinkDownSpeedKbps"] = o.AverageLinkDownSpeedKbps
	}
	if !IsNil(o.AverageLinkUpSpeedKbps) {
		toSerialize["averageLinkUpSpeedKbps"] = o.AverageLinkUpSpeedKbps
	}
	if !IsNil(o.AverageLoss) {
		toSerialize["averageLoss"] = o.AverageLoss
	}
	if !IsNil(o.AvgMos) {
		toSerialize["avgMos"] = o.AvgMos
	}
	if !IsNil(o.CircuitName) {
		toSerialize["circuitName"] = o.CircuitName
	}
	if !IsNil(o.ConfigLinkDownSpeedMbps) {
		toSerialize["configLinkDownSpeedMbps"] = o.ConfigLinkDownSpeedMbps
	}
	if !IsNil(o.ConfigLinkUpSpeedMbps) {
		toSerialize["configLinkUpSpeedMbps"] = o.ConfigLinkUpSpeedMbps
	}
	if !IsNil(o.ConnectionStatus) {
		toSerialize["connectionStatus"] = o.ConnectionStatus
	}
	if !IsNil(o.CurrentLinkDownSpeedKbps) {
		toSerialize["currentLinkDownSpeedKbps"] = o.CurrentLinkDownSpeedKbps
	}
	if !IsNil(o.CurrentLinkUpSpeedKbps) {
		toSerialize["currentLinkUpSpeedKbps"] = o.CurrentLinkUpSpeedKbps
	}
	if !IsNil(o.Delay) {
		toSerialize["delay"] = o.Delay
	}
	if !IsNil(o.Jitter) {
		toSerialize["jitter"] = o.Jitter
	}
	if !IsNil(o.LastResort) {
		toSerialize["lastResort"] = o.LastResort
	}
	if !IsNil(o.Loss) {
		toSerialize["loss"] = o.Loss
	}
	if !IsNil(o.MaxDelay) {
		toSerialize["maxDelay"] = o.MaxDelay
	}
	if !IsNil(o.MaxJitter) {
		toSerialize["maxJitter"] = o.MaxJitter
	}
	if !IsNil(o.MaxLoss) {
		toSerialize["maxLoss"] = o.MaxLoss
	}
	if !IsNil(o.MaxMos) {
		toSerialize["maxMos"] = o.MaxMos
	}
	if !IsNil(o.MinDelay) {
		toSerialize["minDelay"] = o.MinDelay
	}
	if !IsNil(o.MinJitter) {
		toSerialize["minJitter"] = o.MinJitter
	}
	if !IsNil(o.MinLoss) {
		toSerialize["minLoss"] = o.MinLoss
	}
	if !IsNil(o.MinMos) {
		toSerialize["minMos"] = o.MinMos
	}
	if !IsNil(o.Mos) {
		toSerialize["mos"] = o.Mos
	}
	return toSerialize, nil
}

type NullableV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner struct {
	value *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner
	isSet bool
}

func (v NullableV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) Get() *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner {
	return v.value
}

func (v *NullableV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) Set(val *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner(val *V2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) *NullableV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner {
	return &NullableV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner{value: val, isSet: true}
}

func (v NullableV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2MonitoringCircuitsSummaryPost200ResponseCircuitSummariesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


