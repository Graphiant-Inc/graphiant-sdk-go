/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesUpgradeSchedulePutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesUpgradeSchedulePutRequest{}

// V1DevicesUpgradeSchedulePutRequest struct for V1DevicesUpgradeSchedulePutRequest
type V1DevicesUpgradeSchedulePutRequest struct {
	Action *string `json:"action,omitempty"`
	DeviceIds []int64 `json:"deviceIds,omitempty"`
	Ts *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"ts,omitempty"`
	Version *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion `json:"version,omitempty"`
}

// NewV1DevicesUpgradeSchedulePutRequest instantiates a new V1DevicesUpgradeSchedulePutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesUpgradeSchedulePutRequest() *V1DevicesUpgradeSchedulePutRequest {
	this := V1DevicesUpgradeSchedulePutRequest{}
	return &this
}

// NewV1DevicesUpgradeSchedulePutRequestWithDefaults instantiates a new V1DevicesUpgradeSchedulePutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesUpgradeSchedulePutRequestWithDefaults() *V1DevicesUpgradeSchedulePutRequest {
	this := V1DevicesUpgradeSchedulePutRequest{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *V1DevicesUpgradeSchedulePutRequest) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesUpgradeSchedulePutRequest) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *V1DevicesUpgradeSchedulePutRequest) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *V1DevicesUpgradeSchedulePutRequest) SetAction(v string) {
	o.Action = &v
}

// GetDeviceIds returns the DeviceIds field value if set, zero value otherwise.
func (o *V1DevicesUpgradeSchedulePutRequest) GetDeviceIds() []int64 {
	if o == nil || IsNil(o.DeviceIds) {
		var ret []int64
		return ret
	}
	return o.DeviceIds
}

// GetDeviceIdsOk returns a tuple with the DeviceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesUpgradeSchedulePutRequest) GetDeviceIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.DeviceIds) {
		return nil, false
	}
	return o.DeviceIds, true
}

// HasDeviceIds returns a boolean if a field has been set.
func (o *V1DevicesUpgradeSchedulePutRequest) HasDeviceIds() bool {
	if o != nil && !IsNil(o.DeviceIds) {
		return true
	}

	return false
}

// SetDeviceIds gets a reference to the given []int64 and assigns it to the DeviceIds field.
func (o *V1DevicesUpgradeSchedulePutRequest) SetDeviceIds(v []int64) {
	o.DeviceIds = v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *V1DevicesUpgradeSchedulePutRequest) GetTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.Ts) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesUpgradeSchedulePutRequest) GetTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *V1DevicesUpgradeSchedulePutRequest) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the Ts field.
func (o *V1DevicesUpgradeSchedulePutRequest) SetTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.Ts = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V1DevicesUpgradeSchedulePutRequest) GetVersion() V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion {
	if o == nil || IsNil(o.Version) {
		var ret V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesUpgradeSchedulePutRequest) GetVersionOk() (*V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V1DevicesUpgradeSchedulePutRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion and assigns it to the Version field.
func (o *V1DevicesUpgradeSchedulePutRequest) SetVersion(v V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion) {
	o.Version = &v
}

func (o V1DevicesUpgradeSchedulePutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesUpgradeSchedulePutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.DeviceIds) {
		toSerialize["deviceIds"] = o.DeviceIds
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableV1DevicesUpgradeSchedulePutRequest struct {
	value *V1DevicesUpgradeSchedulePutRequest
	isSet bool
}

func (v NullableV1DevicesUpgradeSchedulePutRequest) Get() *V1DevicesUpgradeSchedulePutRequest {
	return v.value
}

func (v *NullableV1DevicesUpgradeSchedulePutRequest) Set(val *V1DevicesUpgradeSchedulePutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesUpgradeSchedulePutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesUpgradeSchedulePutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesUpgradeSchedulePutRequest(val *V1DevicesUpgradeSchedulePutRequest) *NullableV1DevicesUpgradeSchedulePutRequest {
	return &NullableV1DevicesUpgradeSchedulePutRequest{value: val, isSet: true}
}

func (v NullableV1DevicesUpgradeSchedulePutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesUpgradeSchedulePutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


