/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile{}

// V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile struct for V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile
type V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile struct {
	AntiReplayWindowSize *int32 `json:"antiReplayWindowSize,omitempty"`
	DpdInterval *int32 `json:"dpdInterval,omitempty"`
	Esn *bool `json:"esn,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IkeDhGroup *string `json:"ikeDhGroup,omitempty"`
	IkeEncryptionAlg *string `json:"ikeEncryptionAlg,omitempty"`
	IkeIntegrity *string `json:"ikeIntegrity,omitempty"`
	IpsecEncryptionAlg *string `json:"ipsecEncryptionAlg,omitempty"`
	IpsecIntegrity *string `json:"ipsecIntegrity,omitempty"`
	Name *string `json:"name,omitempty"`
	PerfectForwardSecrecy *string `json:"perfectForwardSecrecy,omitempty"`
	ReauthInterval *int32 `json:"reauthInterval,omitempty"`
	RekeyInterval *int32 `json:"rekeyInterval,omitempty"`
}

// NewV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile instantiates a new V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile() *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile {
	this := V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile{}
	return &this
}

// NewV1GlobalConfigPatchRequestVpnProfilesValueVpnProfileWithDefaults instantiates a new V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GlobalConfigPatchRequestVpnProfilesValueVpnProfileWithDefaults() *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile {
	this := V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile{}
	return &this
}

// GetAntiReplayWindowSize returns the AntiReplayWindowSize field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetAntiReplayWindowSize() int32 {
	if o == nil || IsNil(o.AntiReplayWindowSize) {
		var ret int32
		return ret
	}
	return *o.AntiReplayWindowSize
}

// GetAntiReplayWindowSizeOk returns a tuple with the AntiReplayWindowSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetAntiReplayWindowSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.AntiReplayWindowSize) {
		return nil, false
	}
	return o.AntiReplayWindowSize, true
}

// HasAntiReplayWindowSize returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasAntiReplayWindowSize() bool {
	if o != nil && !IsNil(o.AntiReplayWindowSize) {
		return true
	}

	return false
}

// SetAntiReplayWindowSize gets a reference to the given int32 and assigns it to the AntiReplayWindowSize field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetAntiReplayWindowSize(v int32) {
	o.AntiReplayWindowSize = &v
}

// GetDpdInterval returns the DpdInterval field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetDpdInterval() int32 {
	if o == nil || IsNil(o.DpdInterval) {
		var ret int32
		return ret
	}
	return *o.DpdInterval
}

// GetDpdIntervalOk returns a tuple with the DpdInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetDpdIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.DpdInterval) {
		return nil, false
	}
	return o.DpdInterval, true
}

// HasDpdInterval returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasDpdInterval() bool {
	if o != nil && !IsNil(o.DpdInterval) {
		return true
	}

	return false
}

// SetDpdInterval gets a reference to the given int32 and assigns it to the DpdInterval field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetDpdInterval(v int32) {
	o.DpdInterval = &v
}

// GetEsn returns the Esn field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetEsn() bool {
	if o == nil || IsNil(o.Esn) {
		var ret bool
		return ret
	}
	return *o.Esn
}

// GetEsnOk returns a tuple with the Esn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetEsnOk() (*bool, bool) {
	if o == nil || IsNil(o.Esn) {
		return nil, false
	}
	return o.Esn, true
}

// HasEsn returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasEsn() bool {
	if o != nil && !IsNil(o.Esn) {
		return true
	}

	return false
}

// SetEsn gets a reference to the given bool and assigns it to the Esn field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetEsn(v bool) {
	o.Esn = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetId(v int64) {
	o.Id = &v
}

// GetIkeDhGroup returns the IkeDhGroup field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIkeDhGroup() string {
	if o == nil || IsNil(o.IkeDhGroup) {
		var ret string
		return ret
	}
	return *o.IkeDhGroup
}

// GetIkeDhGroupOk returns a tuple with the IkeDhGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIkeDhGroupOk() (*string, bool) {
	if o == nil || IsNil(o.IkeDhGroup) {
		return nil, false
	}
	return o.IkeDhGroup, true
}

// HasIkeDhGroup returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasIkeDhGroup() bool {
	if o != nil && !IsNil(o.IkeDhGroup) {
		return true
	}

	return false
}

// SetIkeDhGroup gets a reference to the given string and assigns it to the IkeDhGroup field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetIkeDhGroup(v string) {
	o.IkeDhGroup = &v
}

// GetIkeEncryptionAlg returns the IkeEncryptionAlg field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIkeEncryptionAlg() string {
	if o == nil || IsNil(o.IkeEncryptionAlg) {
		var ret string
		return ret
	}
	return *o.IkeEncryptionAlg
}

// GetIkeEncryptionAlgOk returns a tuple with the IkeEncryptionAlg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIkeEncryptionAlgOk() (*string, bool) {
	if o == nil || IsNil(o.IkeEncryptionAlg) {
		return nil, false
	}
	return o.IkeEncryptionAlg, true
}

// HasIkeEncryptionAlg returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasIkeEncryptionAlg() bool {
	if o != nil && !IsNil(o.IkeEncryptionAlg) {
		return true
	}

	return false
}

// SetIkeEncryptionAlg gets a reference to the given string and assigns it to the IkeEncryptionAlg field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetIkeEncryptionAlg(v string) {
	o.IkeEncryptionAlg = &v
}

// GetIkeIntegrity returns the IkeIntegrity field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIkeIntegrity() string {
	if o == nil || IsNil(o.IkeIntegrity) {
		var ret string
		return ret
	}
	return *o.IkeIntegrity
}

// GetIkeIntegrityOk returns a tuple with the IkeIntegrity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIkeIntegrityOk() (*string, bool) {
	if o == nil || IsNil(o.IkeIntegrity) {
		return nil, false
	}
	return o.IkeIntegrity, true
}

// HasIkeIntegrity returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasIkeIntegrity() bool {
	if o != nil && !IsNil(o.IkeIntegrity) {
		return true
	}

	return false
}

// SetIkeIntegrity gets a reference to the given string and assigns it to the IkeIntegrity field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetIkeIntegrity(v string) {
	o.IkeIntegrity = &v
}

// GetIpsecEncryptionAlg returns the IpsecEncryptionAlg field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIpsecEncryptionAlg() string {
	if o == nil || IsNil(o.IpsecEncryptionAlg) {
		var ret string
		return ret
	}
	return *o.IpsecEncryptionAlg
}

// GetIpsecEncryptionAlgOk returns a tuple with the IpsecEncryptionAlg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIpsecEncryptionAlgOk() (*string, bool) {
	if o == nil || IsNil(o.IpsecEncryptionAlg) {
		return nil, false
	}
	return o.IpsecEncryptionAlg, true
}

// HasIpsecEncryptionAlg returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasIpsecEncryptionAlg() bool {
	if o != nil && !IsNil(o.IpsecEncryptionAlg) {
		return true
	}

	return false
}

// SetIpsecEncryptionAlg gets a reference to the given string and assigns it to the IpsecEncryptionAlg field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetIpsecEncryptionAlg(v string) {
	o.IpsecEncryptionAlg = &v
}

// GetIpsecIntegrity returns the IpsecIntegrity field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIpsecIntegrity() string {
	if o == nil || IsNil(o.IpsecIntegrity) {
		var ret string
		return ret
	}
	return *o.IpsecIntegrity
}

// GetIpsecIntegrityOk returns a tuple with the IpsecIntegrity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetIpsecIntegrityOk() (*string, bool) {
	if o == nil || IsNil(o.IpsecIntegrity) {
		return nil, false
	}
	return o.IpsecIntegrity, true
}

// HasIpsecIntegrity returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasIpsecIntegrity() bool {
	if o != nil && !IsNil(o.IpsecIntegrity) {
		return true
	}

	return false
}

// SetIpsecIntegrity gets a reference to the given string and assigns it to the IpsecIntegrity field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetIpsecIntegrity(v string) {
	o.IpsecIntegrity = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetName(v string) {
	o.Name = &v
}

// GetPerfectForwardSecrecy returns the PerfectForwardSecrecy field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetPerfectForwardSecrecy() string {
	if o == nil || IsNil(o.PerfectForwardSecrecy) {
		var ret string
		return ret
	}
	return *o.PerfectForwardSecrecy
}

// GetPerfectForwardSecrecyOk returns a tuple with the PerfectForwardSecrecy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetPerfectForwardSecrecyOk() (*string, bool) {
	if o == nil || IsNil(o.PerfectForwardSecrecy) {
		return nil, false
	}
	return o.PerfectForwardSecrecy, true
}

// HasPerfectForwardSecrecy returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasPerfectForwardSecrecy() bool {
	if o != nil && !IsNil(o.PerfectForwardSecrecy) {
		return true
	}

	return false
}

// SetPerfectForwardSecrecy gets a reference to the given string and assigns it to the PerfectForwardSecrecy field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetPerfectForwardSecrecy(v string) {
	o.PerfectForwardSecrecy = &v
}

// GetReauthInterval returns the ReauthInterval field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetReauthInterval() int32 {
	if o == nil || IsNil(o.ReauthInterval) {
		var ret int32
		return ret
	}
	return *o.ReauthInterval
}

// GetReauthIntervalOk returns a tuple with the ReauthInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetReauthIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.ReauthInterval) {
		return nil, false
	}
	return o.ReauthInterval, true
}

// HasReauthInterval returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasReauthInterval() bool {
	if o != nil && !IsNil(o.ReauthInterval) {
		return true
	}

	return false
}

// SetReauthInterval gets a reference to the given int32 and assigns it to the ReauthInterval field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetReauthInterval(v int32) {
	o.ReauthInterval = &v
}

// GetRekeyInterval returns the RekeyInterval field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetRekeyInterval() int32 {
	if o == nil || IsNil(o.RekeyInterval) {
		var ret int32
		return ret
	}
	return *o.RekeyInterval
}

// GetRekeyIntervalOk returns a tuple with the RekeyInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) GetRekeyIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.RekeyInterval) {
		return nil, false
	}
	return o.RekeyInterval, true
}

// HasRekeyInterval returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) HasRekeyInterval() bool {
	if o != nil && !IsNil(o.RekeyInterval) {
		return true
	}

	return false
}

// SetRekeyInterval gets a reference to the given int32 and assigns it to the RekeyInterval field.
func (o *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) SetRekeyInterval(v int32) {
	o.RekeyInterval = &v
}

func (o V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AntiReplayWindowSize) {
		toSerialize["antiReplayWindowSize"] = o.AntiReplayWindowSize
	}
	if !IsNil(o.DpdInterval) {
		toSerialize["dpdInterval"] = o.DpdInterval
	}
	if !IsNil(o.Esn) {
		toSerialize["esn"] = o.Esn
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IkeDhGroup) {
		toSerialize["ikeDhGroup"] = o.IkeDhGroup
	}
	if !IsNil(o.IkeEncryptionAlg) {
		toSerialize["ikeEncryptionAlg"] = o.IkeEncryptionAlg
	}
	if !IsNil(o.IkeIntegrity) {
		toSerialize["ikeIntegrity"] = o.IkeIntegrity
	}
	if !IsNil(o.IpsecEncryptionAlg) {
		toSerialize["ipsecEncryptionAlg"] = o.IpsecEncryptionAlg
	}
	if !IsNil(o.IpsecIntegrity) {
		toSerialize["ipsecIntegrity"] = o.IpsecIntegrity
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PerfectForwardSecrecy) {
		toSerialize["perfectForwardSecrecy"] = o.PerfectForwardSecrecy
	}
	if !IsNil(o.ReauthInterval) {
		toSerialize["reauthInterval"] = o.ReauthInterval
	}
	if !IsNil(o.RekeyInterval) {
		toSerialize["rekeyInterval"] = o.RekeyInterval
	}
	return toSerialize, nil
}

type NullableV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile struct {
	value *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile
	isSet bool
}

func (v NullableV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) Get() *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile {
	return v.value
}

func (v *NullableV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) Set(val *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile(val *V1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) *NullableV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile {
	return &NullableV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile{value: val, isSet: true}
}

func (v NullableV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GlobalConfigPatchRequestVpnProfilesValueVpnProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


