/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AssistantGetConversationsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AssistantGetConversationsPostRequest{}

// V2AssistantGetConversationsPostRequest struct for V2AssistantGetConversationsPostRequest
type V2AssistantGetConversationsPostRequest struct {
	TimeWindow *V2NotificationlistPostRequestTimeWindow `json:"timeWindow,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewV2AssistantGetConversationsPostRequest instantiates a new V2AssistantGetConversationsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssistantGetConversationsPostRequest() *V2AssistantGetConversationsPostRequest {
	this := V2AssistantGetConversationsPostRequest{}
	return &this
}

// NewV2AssistantGetConversationsPostRequestWithDefaults instantiates a new V2AssistantGetConversationsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssistantGetConversationsPostRequestWithDefaults() *V2AssistantGetConversationsPostRequest {
	this := V2AssistantGetConversationsPostRequest{}
	return &this
}

// GetTimeWindow returns the TimeWindow field value if set, zero value otherwise.
func (o *V2AssistantGetConversationsPostRequest) GetTimeWindow() V2NotificationlistPostRequestTimeWindow {
	if o == nil || IsNil(o.TimeWindow) {
		var ret V2NotificationlistPostRequestTimeWindow
		return ret
	}
	return *o.TimeWindow
}

// GetTimeWindowOk returns a tuple with the TimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantGetConversationsPostRequest) GetTimeWindowOk() (*V2NotificationlistPostRequestTimeWindow, bool) {
	if o == nil || IsNil(o.TimeWindow) {
		return nil, false
	}
	return o.TimeWindow, true
}

// HasTimeWindow returns a boolean if a field has been set.
func (o *V2AssistantGetConversationsPostRequest) HasTimeWindow() bool {
	if o != nil && !IsNil(o.TimeWindow) {
		return true
	}

	return false
}

// SetTimeWindow gets a reference to the given V2NotificationlistPostRequestTimeWindow and assigns it to the TimeWindow field.
func (o *V2AssistantGetConversationsPostRequest) SetTimeWindow(v V2NotificationlistPostRequestTimeWindow) {
	o.TimeWindow = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *V2AssistantGetConversationsPostRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantGetConversationsPostRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *V2AssistantGetConversationsPostRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *V2AssistantGetConversationsPostRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o V2AssistantGetConversationsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AssistantGetConversationsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TimeWindow) {
		toSerialize["timeWindow"] = o.TimeWindow
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableV2AssistantGetConversationsPostRequest struct {
	value *V2AssistantGetConversationsPostRequest
	isSet bool
}

func (v NullableV2AssistantGetConversationsPostRequest) Get() *V2AssistantGetConversationsPostRequest {
	return v.value
}

func (v *NullableV2AssistantGetConversationsPostRequest) Set(val *V2AssistantGetConversationsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssistantGetConversationsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssistantGetConversationsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssistantGetConversationsPostRequest(val *V2AssistantGetConversationsPostRequest) *NullableV2AssistantGetConversationsPostRequest {
	return &NullableV2AssistantGetConversationsPostRequest{value: val, isSet: true}
}

func (v NullableV2AssistantGetConversationsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssistantGetConversationsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


