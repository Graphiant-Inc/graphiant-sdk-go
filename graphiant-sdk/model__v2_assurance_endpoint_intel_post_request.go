/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AssuranceEndpointIntelPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AssuranceEndpointIntelPostRequest{}

// V2AssuranceEndpointIntelPostRequest struct for V2AssuranceEndpointIntelPostRequest
type V2AssuranceEndpointIntelPostRequest struct {
	DomainName *string `json:"domainName,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	Path *string `json:"path,omitempty"`
}

// NewV2AssuranceEndpointIntelPostRequest instantiates a new V2AssuranceEndpointIntelPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssuranceEndpointIntelPostRequest() *V2AssuranceEndpointIntelPostRequest {
	this := V2AssuranceEndpointIntelPostRequest{}
	return &this
}

// NewV2AssuranceEndpointIntelPostRequestWithDefaults instantiates a new V2AssuranceEndpointIntelPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssuranceEndpointIntelPostRequestWithDefaults() *V2AssuranceEndpointIntelPostRequest {
	this := V2AssuranceEndpointIntelPostRequest{}
	return &this
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *V2AssuranceEndpointIntelPostRequest) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceEndpointIntelPostRequest) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *V2AssuranceEndpointIntelPostRequest) HasDomainName() bool {
	if o != nil && !IsNil(o.DomainName) {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *V2AssuranceEndpointIntelPostRequest) SetDomainName(v string) {
	o.DomainName = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *V2AssuranceEndpointIntelPostRequest) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceEndpointIntelPostRequest) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *V2AssuranceEndpointIntelPostRequest) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *V2AssuranceEndpointIntelPostRequest) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *V2AssuranceEndpointIntelPostRequest) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceEndpointIntelPostRequest) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *V2AssuranceEndpointIntelPostRequest) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *V2AssuranceEndpointIntelPostRequest) SetPath(v string) {
	o.Path = &v
}

func (o V2AssuranceEndpointIntelPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AssuranceEndpointIntelPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DomainName) {
		toSerialize["domainName"] = o.DomainName
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	return toSerialize, nil
}

type NullableV2AssuranceEndpointIntelPostRequest struct {
	value *V2AssuranceEndpointIntelPostRequest
	isSet bool
}

func (v NullableV2AssuranceEndpointIntelPostRequest) Get() *V2AssuranceEndpointIntelPostRequest {
	return v.value
}

func (v *NullableV2AssuranceEndpointIntelPostRequest) Set(val *V2AssuranceEndpointIntelPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssuranceEndpointIntelPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssuranceEndpointIntelPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssuranceEndpointIntelPostRequest(val *V2AssuranceEndpointIntelPostRequest) *NullableV2AssuranceEndpointIntelPostRequest {
	return &NullableV2AssuranceEndpointIntelPostRequest{value: val, isSet: true}
}

func (v NullableV2AssuranceEndpointIntelPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssuranceEndpointIntelPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


