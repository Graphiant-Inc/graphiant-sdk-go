/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns{}

// V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns struct for V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns
type V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns struct {
	CloudflareServers []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner `json:"cloudflareServers,omitempty"`
	DynamicServers []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner `json:"dynamicServers,omitempty"`
	DynamicServersV2 *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsDynamicServersV2 `json:"dynamicServersV2,omitempty"`
	Mode *string `json:"mode,omitempty"`
	StaticServers []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner `json:"staticServers,omitempty"`
	StaticServersV2 *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 `json:"staticServersV2,omitempty"`
}

// NewV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns instantiates a new V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns() *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns {
	this := V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns{}
	return &this
}

// NewV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsWithDefaults instantiates a new V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsWithDefaults() *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns {
	this := V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns{}
	return &this
}

// GetCloudflareServers returns the CloudflareServers field value if set, zero value otherwise.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetCloudflareServers() []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner {
	if o == nil || IsNil(o.CloudflareServers) {
		var ret []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner
		return ret
	}
	return o.CloudflareServers
}

// GetCloudflareServersOk returns a tuple with the CloudflareServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetCloudflareServersOk() ([]V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner, bool) {
	if o == nil || IsNil(o.CloudflareServers) {
		return nil, false
	}
	return o.CloudflareServers, true
}

// HasCloudflareServers returns a boolean if a field has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) HasCloudflareServers() bool {
	if o != nil && !IsNil(o.CloudflareServers) {
		return true
	}

	return false
}

// SetCloudflareServers gets a reference to the given []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner and assigns it to the CloudflareServers field.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) SetCloudflareServers(v []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner) {
	o.CloudflareServers = v
}

// GetDynamicServers returns the DynamicServers field value if set, zero value otherwise.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetDynamicServers() []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner {
	if o == nil || IsNil(o.DynamicServers) {
		var ret []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner
		return ret
	}
	return o.DynamicServers
}

// GetDynamicServersOk returns a tuple with the DynamicServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetDynamicServersOk() ([]V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner, bool) {
	if o == nil || IsNil(o.DynamicServers) {
		return nil, false
	}
	return o.DynamicServers, true
}

// HasDynamicServers returns a boolean if a field has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) HasDynamicServers() bool {
	if o != nil && !IsNil(o.DynamicServers) {
		return true
	}

	return false
}

// SetDynamicServers gets a reference to the given []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner and assigns it to the DynamicServers field.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) SetDynamicServers(v []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner) {
	o.DynamicServers = v
}

// GetDynamicServersV2 returns the DynamicServersV2 field value if set, zero value otherwise.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetDynamicServersV2() V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsDynamicServersV2 {
	if o == nil || IsNil(o.DynamicServersV2) {
		var ret V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsDynamicServersV2
		return ret
	}
	return *o.DynamicServersV2
}

// GetDynamicServersV2Ok returns a tuple with the DynamicServersV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetDynamicServersV2Ok() (*V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsDynamicServersV2, bool) {
	if o == nil || IsNil(o.DynamicServersV2) {
		return nil, false
	}
	return o.DynamicServersV2, true
}

// HasDynamicServersV2 returns a boolean if a field has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) HasDynamicServersV2() bool {
	if o != nil && !IsNil(o.DynamicServersV2) {
		return true
	}

	return false
}

// SetDynamicServersV2 gets a reference to the given V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsDynamicServersV2 and assigns it to the DynamicServersV2 field.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) SetDynamicServersV2(v V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsDynamicServersV2) {
	o.DynamicServersV2 = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) SetMode(v string) {
	o.Mode = &v
}

// GetStaticServers returns the StaticServers field value if set, zero value otherwise.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetStaticServers() []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner {
	if o == nil || IsNil(o.StaticServers) {
		var ret []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner
		return ret
	}
	return o.StaticServers
}

// GetStaticServersOk returns a tuple with the StaticServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetStaticServersOk() ([]V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner, bool) {
	if o == nil || IsNil(o.StaticServers) {
		return nil, false
	}
	return o.StaticServers, true
}

// HasStaticServers returns a boolean if a field has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) HasStaticServers() bool {
	if o != nil && !IsNil(o.StaticServers) {
		return true
	}

	return false
}

// SetStaticServers gets a reference to the given []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner and assigns it to the StaticServers field.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) SetStaticServers(v []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsCloudflareServersInner) {
	o.StaticServers = v
}

// GetStaticServersV2 returns the StaticServersV2 field value if set, zero value otherwise.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetStaticServersV2() V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 {
	if o == nil || IsNil(o.StaticServersV2) {
		var ret V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2
		return ret
	}
	return *o.StaticServersV2
}

// GetStaticServersV2Ok returns a tuple with the StaticServersV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) GetStaticServersV2Ok() (*V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2, bool) {
	if o == nil || IsNil(o.StaticServersV2) {
		return nil, false
	}
	return o.StaticServersV2, true
}

// HasStaticServersV2 returns a boolean if a field has been set.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) HasStaticServersV2() bool {
	if o != nil && !IsNil(o.StaticServersV2) {
		return true
	}

	return false
}

// SetStaticServersV2 gets a reference to the given V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2 and assigns it to the StaticServersV2 field.
func (o *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) SetStaticServersV2(v V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDnsStaticServersV2) {
	o.StaticServersV2 = &v
}

func (o V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudflareServers) {
		toSerialize["cloudflareServers"] = o.CloudflareServers
	}
	if !IsNil(o.DynamicServers) {
		toSerialize["dynamicServers"] = o.DynamicServers
	}
	if !IsNil(o.DynamicServersV2) {
		toSerialize["dynamicServersV2"] = o.DynamicServersV2
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.StaticServers) {
		toSerialize["staticServers"] = o.StaticServers
	}
	if !IsNil(o.StaticServersV2) {
		toSerialize["staticServersV2"] = o.StaticServersV2
	}
	return toSerialize, nil
}

type NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns struct {
	value *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns
	isSet bool
}

func (v NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) Get() *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns {
	return v.value
}

func (v *NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) Set(val *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns(val *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) *NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns {
	return &NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns{value: val, isSet: true}
}

func (v NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerDns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


