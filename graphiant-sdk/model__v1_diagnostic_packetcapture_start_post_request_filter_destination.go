/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DiagnosticPacketcaptureStartPostRequestFilterDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DiagnosticPacketcaptureStartPostRequestFilterDestination{}

// V1DiagnosticPacketcaptureStartPostRequestFilterDestination struct for V1DiagnosticPacketcaptureStartPostRequestFilterDestination
type V1DiagnosticPacketcaptureStartPostRequestFilterDestination struct {
	Port *int32 `json:"port,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
}

// NewV1DiagnosticPacketcaptureStartPostRequestFilterDestination instantiates a new V1DiagnosticPacketcaptureStartPostRequestFilterDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DiagnosticPacketcaptureStartPostRequestFilterDestination() *V1DiagnosticPacketcaptureStartPostRequestFilterDestination {
	this := V1DiagnosticPacketcaptureStartPostRequestFilterDestination{}
	return &this
}

// NewV1DiagnosticPacketcaptureStartPostRequestFilterDestinationWithDefaults instantiates a new V1DiagnosticPacketcaptureStartPostRequestFilterDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DiagnosticPacketcaptureStartPostRequestFilterDestinationWithDefaults() *V1DiagnosticPacketcaptureStartPostRequestFilterDestination {
	this := V1DiagnosticPacketcaptureStartPostRequestFilterDestination{}
	return &this
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcaptureStartPostRequestFilterDestination) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequestFilterDestination) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequestFilterDestination) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *V1DiagnosticPacketcaptureStartPostRequestFilterDestination) SetPort(v int32) {
	o.Port = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcaptureStartPostRequestFilterDestination) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequestFilterDestination) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequestFilterDestination) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *V1DiagnosticPacketcaptureStartPostRequestFilterDestination) SetPrefix(v string) {
	o.Prefix = &v
}

func (o V1DiagnosticPacketcaptureStartPostRequestFilterDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DiagnosticPacketcaptureStartPostRequestFilterDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	return toSerialize, nil
}

type NullableV1DiagnosticPacketcaptureStartPostRequestFilterDestination struct {
	value *V1DiagnosticPacketcaptureStartPostRequestFilterDestination
	isSet bool
}

func (v NullableV1DiagnosticPacketcaptureStartPostRequestFilterDestination) Get() *V1DiagnosticPacketcaptureStartPostRequestFilterDestination {
	return v.value
}

func (v *NullableV1DiagnosticPacketcaptureStartPostRequestFilterDestination) Set(val *V1DiagnosticPacketcaptureStartPostRequestFilterDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DiagnosticPacketcaptureStartPostRequestFilterDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DiagnosticPacketcaptureStartPostRequestFilterDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DiagnosticPacketcaptureStartPostRequestFilterDestination(val *V1DiagnosticPacketcaptureStartPostRequestFilterDestination) *NullableV1DiagnosticPacketcaptureStartPostRequestFilterDestination {
	return &NullableV1DiagnosticPacketcaptureStartPostRequestFilterDestination{value: val, isSet: true}
}

func (v NullableV1DiagnosticPacketcaptureStartPostRequestFilterDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DiagnosticPacketcaptureStartPostRequestFilterDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


