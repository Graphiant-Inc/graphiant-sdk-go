/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface{}

// V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface struct for V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface
type V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface struct {
	AdminStatus *bool `json:"adminStatus,omitempty"`
	Alias *string `json:"alias,omitempty"`
	Circuit *string `json:"circuit,omitempty"`
	CoreNeighbor *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor `json:"coreNeighbor,omitempty"`
	CoreToCoreTunnel map[string]interface{} `json:"coreToCoreTunnel,omitempty"`
	CreateLinkLocalAddress *bool `json:"createLinkLocalAddress,omitempty"`
	Default map[string]interface{} `json:"default,omitempty"`
	Description *string `json:"description,omitempty"`
	Duplex *string `json:"duplex,omitempty"`
	Dynamic *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic `json:"dynamic,omitempty"`
	FlexAlgos *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceFlexAlgos `json:"flexAlgos,omitempty"`
	GatewayNeighbor *V1AccountMfaGet200Response `json:"gatewayNeighbor,omitempty"`
	Gw *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGw `json:"gw,omitempty"`
	InterfaceType *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType `json:"interfaceType,omitempty"`
	Ipsec *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec `json:"ipsec,omitempty"`
	Ipv4 *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw `json:"ipv4,omitempty"`
	Ipv6 *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw `json:"ipv6,omitempty"`
	Lan *string `json:"lan,omitempty"`
	LldpEnabled *bool `json:"lldpEnabled,omitempty"`
	Loopback *bool `json:"loopback,omitempty"`
	MaxTransmissionUnit *int32 `json:"maxTransmissionUnit,omitempty"`
	MplsEnabled *bool `json:"mplsEnabled,omitempty"`
	OspfCost *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost `json:"ospfCost,omitempty"`
	OspfInterface *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceOspfInterface `json:"ospfInterface,omitempty"`
	PeerDeviceId *int64 `json:"peerDeviceId,omitempty"`
	PeerHostname *string `json:"peerHostname,omitempty"`
	SecurityZone *string `json:"securityZone,omitempty"`
	Speed *int64 `json:"speed,omitempty"`
	Static *int32 `json:"static,omitempty"`
	Subinterfaces *map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValue `json:"subinterfaces,omitempty"`
	TcpMss *int32 `json:"tcpMss,omitempty"`
	TcpMssV4 *int32 `json:"tcpMssV4,omitempty"`
	TcpMssV6 *int32 `json:"tcpMssV6,omitempty"`
	TunnelInterface *string `json:"tunnelInterface,omitempty"`
	TunnelUnderlay *string `json:"tunnelUnderlay,omitempty"`
	Wan *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceWan `json:"wan,omitempty"`
	WanManagement map[string]interface{} `json:"wanManagement,omitempty"`
	XTalkFilter *bool `json:"xTalkFilter,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface{}
	return &this
}

// GetAdminStatus returns the AdminStatus field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetAdminStatus() bool {
	if o == nil || IsNil(o.AdminStatus) {
		var ret bool
		return ret
	}
	return *o.AdminStatus
}

// GetAdminStatusOk returns a tuple with the AdminStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetAdminStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.AdminStatus) {
		return nil, false
	}
	return o.AdminStatus, true
}

// HasAdminStatus returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasAdminStatus() bool {
	if o != nil && !IsNil(o.AdminStatus) {
		return true
	}

	return false
}

// SetAdminStatus gets a reference to the given bool and assigns it to the AdminStatus field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetAdminStatus(v bool) {
	o.AdminStatus = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetAlias(v string) {
	o.Alias = &v
}

// GetCircuit returns the Circuit field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetCircuit() string {
	if o == nil || IsNil(o.Circuit) {
		var ret string
		return ret
	}
	return *o.Circuit
}

// GetCircuitOk returns a tuple with the Circuit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetCircuitOk() (*string, bool) {
	if o == nil || IsNil(o.Circuit) {
		return nil, false
	}
	return o.Circuit, true
}

// HasCircuit returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasCircuit() bool {
	if o != nil && !IsNil(o.Circuit) {
		return true
	}

	return false
}

// SetCircuit gets a reference to the given string and assigns it to the Circuit field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetCircuit(v string) {
	o.Circuit = &v
}

// GetCoreNeighbor returns the CoreNeighbor field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetCoreNeighbor() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor {
	if o == nil || IsNil(o.CoreNeighbor) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor
		return ret
	}
	return *o.CoreNeighbor
}

// GetCoreNeighborOk returns a tuple with the CoreNeighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetCoreNeighborOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor, bool) {
	if o == nil || IsNil(o.CoreNeighbor) {
		return nil, false
	}
	return o.CoreNeighbor, true
}

// HasCoreNeighbor returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasCoreNeighbor() bool {
	if o != nil && !IsNil(o.CoreNeighbor) {
		return true
	}

	return false
}

// SetCoreNeighbor gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor and assigns it to the CoreNeighbor field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetCoreNeighbor(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) {
	o.CoreNeighbor = &v
}

// GetCoreToCoreTunnel returns the CoreToCoreTunnel field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetCoreToCoreTunnel() map[string]interface{} {
	if o == nil || IsNil(o.CoreToCoreTunnel) {
		var ret map[string]interface{}
		return ret
	}
	return o.CoreToCoreTunnel
}

// GetCoreToCoreTunnelOk returns a tuple with the CoreToCoreTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetCoreToCoreTunnelOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CoreToCoreTunnel) {
		return map[string]interface{}{}, false
	}
	return o.CoreToCoreTunnel, true
}

// HasCoreToCoreTunnel returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasCoreToCoreTunnel() bool {
	if o != nil && !IsNil(o.CoreToCoreTunnel) {
		return true
	}

	return false
}

// SetCoreToCoreTunnel gets a reference to the given map[string]interface{} and assigns it to the CoreToCoreTunnel field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetCoreToCoreTunnel(v map[string]interface{}) {
	o.CoreToCoreTunnel = v
}

// GetCreateLinkLocalAddress returns the CreateLinkLocalAddress field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetCreateLinkLocalAddress() bool {
	if o == nil || IsNil(o.CreateLinkLocalAddress) {
		var ret bool
		return ret
	}
	return *o.CreateLinkLocalAddress
}

// GetCreateLinkLocalAddressOk returns a tuple with the CreateLinkLocalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetCreateLinkLocalAddressOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateLinkLocalAddress) {
		return nil, false
	}
	return o.CreateLinkLocalAddress, true
}

// HasCreateLinkLocalAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasCreateLinkLocalAddress() bool {
	if o != nil && !IsNil(o.CreateLinkLocalAddress) {
		return true
	}

	return false
}

// SetCreateLinkLocalAddress gets a reference to the given bool and assigns it to the CreateLinkLocalAddress field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetCreateLinkLocalAddress(v bool) {
	o.CreateLinkLocalAddress = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetDefault() map[string]interface{} {
	if o == nil || IsNil(o.Default) {
		var ret map[string]interface{}
		return ret
	}
	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetDefaultOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Default) {
		return map[string]interface{}{}, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given map[string]interface{} and assigns it to the Default field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetDefault(v map[string]interface{}) {
	o.Default = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetDescription(v string) {
	o.Description = &v
}

// GetDuplex returns the Duplex field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetDuplex() string {
	if o == nil || IsNil(o.Duplex) {
		var ret string
		return ret
	}
	return *o.Duplex
}

// GetDuplexOk returns a tuple with the Duplex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetDuplexOk() (*string, bool) {
	if o == nil || IsNil(o.Duplex) {
		return nil, false
	}
	return o.Duplex, true
}

// HasDuplex returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasDuplex() bool {
	if o != nil && !IsNil(o.Duplex) {
		return true
	}

	return false
}

// SetDuplex gets a reference to the given string and assigns it to the Duplex field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetDuplex(v string) {
	o.Duplex = &v
}

// GetDynamic returns the Dynamic field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetDynamic() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic {
	if o == nil || IsNil(o.Dynamic) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic
		return ret
	}
	return *o.Dynamic
}

// GetDynamicOk returns a tuple with the Dynamic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetDynamicOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic, bool) {
	if o == nil || IsNil(o.Dynamic) {
		return nil, false
	}
	return o.Dynamic, true
}

// HasDynamic returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasDynamic() bool {
	if o != nil && !IsNil(o.Dynamic) {
		return true
	}

	return false
}

// SetDynamic gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic and assigns it to the Dynamic field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetDynamic(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCostDynamic) {
	o.Dynamic = &v
}

// GetFlexAlgos returns the FlexAlgos field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetFlexAlgos() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceFlexAlgos {
	if o == nil || IsNil(o.FlexAlgos) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceFlexAlgos
		return ret
	}
	return *o.FlexAlgos
}

// GetFlexAlgosOk returns a tuple with the FlexAlgos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetFlexAlgosOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceFlexAlgos, bool) {
	if o == nil || IsNil(o.FlexAlgos) {
		return nil, false
	}
	return o.FlexAlgos, true
}

// HasFlexAlgos returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasFlexAlgos() bool {
	if o != nil && !IsNil(o.FlexAlgos) {
		return true
	}

	return false
}

// SetFlexAlgos gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceFlexAlgos and assigns it to the FlexAlgos field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetFlexAlgos(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceFlexAlgos) {
	o.FlexAlgos = &v
}

// GetGatewayNeighbor returns the GatewayNeighbor field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetGatewayNeighbor() V1AccountMfaGet200Response {
	if o == nil || IsNil(o.GatewayNeighbor) {
		var ret V1AccountMfaGet200Response
		return ret
	}
	return *o.GatewayNeighbor
}

// GetGatewayNeighborOk returns a tuple with the GatewayNeighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetGatewayNeighborOk() (*V1AccountMfaGet200Response, bool) {
	if o == nil || IsNil(o.GatewayNeighbor) {
		return nil, false
	}
	return o.GatewayNeighbor, true
}

// HasGatewayNeighbor returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasGatewayNeighbor() bool {
	if o != nil && !IsNil(o.GatewayNeighbor) {
		return true
	}

	return false
}

// SetGatewayNeighbor gets a reference to the given V1AccountMfaGet200Response and assigns it to the GatewayNeighbor field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetGatewayNeighbor(v V1AccountMfaGet200Response) {
	o.GatewayNeighbor = &v
}

// GetGw returns the Gw field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetGw() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGw {
	if o == nil || IsNil(o.Gw) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGw
		return ret
	}
	return *o.Gw
}

// GetGwOk returns a tuple with the Gw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetGwOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGw, bool) {
	if o == nil || IsNil(o.Gw) {
		return nil, false
	}
	return o.Gw, true
}

// HasGw returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasGw() bool {
	if o != nil && !IsNil(o.Gw) {
		return true
	}

	return false
}

// SetGw gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGw and assigns it to the Gw field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetGw(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGw) {
	o.Gw = &v
}

// GetInterfaceType returns the InterfaceType field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetInterfaceType() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType {
	if o == nil || IsNil(o.InterfaceType) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType
		return ret
	}
	return *o.InterfaceType
}

// GetInterfaceTypeOk returns a tuple with the InterfaceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetInterfaceTypeOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType, bool) {
	if o == nil || IsNil(o.InterfaceType) {
		return nil, false
	}
	return o.InterfaceType, true
}

// HasInterfaceType returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasInterfaceType() bool {
	if o != nil && !IsNil(o.InterfaceType) {
		return true
	}

	return false
}

// SetInterfaceType gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType and assigns it to the InterfaceType field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetInterfaceType(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) {
	o.InterfaceType = &v
}

// GetIpsec returns the Ipsec field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetIpsec() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec {
	if o == nil || IsNil(o.Ipsec) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec
		return ret
	}
	return *o.Ipsec
}

// GetIpsecOk returns a tuple with the Ipsec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetIpsecOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec, bool) {
	if o == nil || IsNil(o.Ipsec) {
		return nil, false
	}
	return o.Ipsec, true
}

// HasIpsec returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasIpsec() bool {
	if o != nil && !IsNil(o.Ipsec) {
		return true
	}

	return false
}

// SetIpsec gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec and assigns it to the Ipsec field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetIpsec(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceIpsec) {
	o.Ipsec = &v
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetIpv4() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw {
	if o == nil || IsNil(o.Ipv4) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw
		return ret
	}
	return *o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetIpv4Ok() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw, bool) {
	if o == nil || IsNil(o.Ipv4) {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasIpv4() bool {
	if o != nil && !IsNil(o.Ipv4) {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw and assigns it to the Ipv4 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetIpv4(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw) {
	o.Ipv4 = &v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetIpv6() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw {
	if o == nil || IsNil(o.Ipv6) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetIpv6Ok() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw and assigns it to the Ipv6 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetIpv6(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceGwGw) {
	o.Ipv6 = &v
}

// GetLan returns the Lan field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetLan() string {
	if o == nil || IsNil(o.Lan) {
		var ret string
		return ret
	}
	return *o.Lan
}

// GetLanOk returns a tuple with the Lan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetLanOk() (*string, bool) {
	if o == nil || IsNil(o.Lan) {
		return nil, false
	}
	return o.Lan, true
}

// HasLan returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasLan() bool {
	if o != nil && !IsNil(o.Lan) {
		return true
	}

	return false
}

// SetLan gets a reference to the given string and assigns it to the Lan field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetLan(v string) {
	o.Lan = &v
}

// GetLldpEnabled returns the LldpEnabled field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetLldpEnabled() bool {
	if o == nil || IsNil(o.LldpEnabled) {
		var ret bool
		return ret
	}
	return *o.LldpEnabled
}

// GetLldpEnabledOk returns a tuple with the LldpEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetLldpEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LldpEnabled) {
		return nil, false
	}
	return o.LldpEnabled, true
}

// HasLldpEnabled returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasLldpEnabled() bool {
	if o != nil && !IsNil(o.LldpEnabled) {
		return true
	}

	return false
}

// SetLldpEnabled gets a reference to the given bool and assigns it to the LldpEnabled field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetLldpEnabled(v bool) {
	o.LldpEnabled = &v
}

// GetLoopback returns the Loopback field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetLoopback() bool {
	if o == nil || IsNil(o.Loopback) {
		var ret bool
		return ret
	}
	return *o.Loopback
}

// GetLoopbackOk returns a tuple with the Loopback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetLoopbackOk() (*bool, bool) {
	if o == nil || IsNil(o.Loopback) {
		return nil, false
	}
	return o.Loopback, true
}

// HasLoopback returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasLoopback() bool {
	if o != nil && !IsNil(o.Loopback) {
		return true
	}

	return false
}

// SetLoopback gets a reference to the given bool and assigns it to the Loopback field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetLoopback(v bool) {
	o.Loopback = &v
}

// GetMaxTransmissionUnit returns the MaxTransmissionUnit field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetMaxTransmissionUnit() int32 {
	if o == nil || IsNil(o.MaxTransmissionUnit) {
		var ret int32
		return ret
	}
	return *o.MaxTransmissionUnit
}

// GetMaxTransmissionUnitOk returns a tuple with the MaxTransmissionUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetMaxTransmissionUnitOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTransmissionUnit) {
		return nil, false
	}
	return o.MaxTransmissionUnit, true
}

// HasMaxTransmissionUnit returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasMaxTransmissionUnit() bool {
	if o != nil && !IsNil(o.MaxTransmissionUnit) {
		return true
	}

	return false
}

// SetMaxTransmissionUnit gets a reference to the given int32 and assigns it to the MaxTransmissionUnit field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetMaxTransmissionUnit(v int32) {
	o.MaxTransmissionUnit = &v
}

// GetMplsEnabled returns the MplsEnabled field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetMplsEnabled() bool {
	if o == nil || IsNil(o.MplsEnabled) {
		var ret bool
		return ret
	}
	return *o.MplsEnabled
}

// GetMplsEnabledOk returns a tuple with the MplsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetMplsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MplsEnabled) {
		return nil, false
	}
	return o.MplsEnabled, true
}

// HasMplsEnabled returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasMplsEnabled() bool {
	if o != nil && !IsNil(o.MplsEnabled) {
		return true
	}

	return false
}

// SetMplsEnabled gets a reference to the given bool and assigns it to the MplsEnabled field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetMplsEnabled(v bool) {
	o.MplsEnabled = &v
}

// GetOspfCost returns the OspfCost field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetOspfCost() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost {
	if o == nil || IsNil(o.OspfCost) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost
		return ret
	}
	return *o.OspfCost
}

// GetOspfCostOk returns a tuple with the OspfCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetOspfCostOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost, bool) {
	if o == nil || IsNil(o.OspfCost) {
		return nil, false
	}
	return o.OspfCost, true
}

// HasOspfCost returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasOspfCost() bool {
	if o != nil && !IsNil(o.OspfCost) {
		return true
	}

	return false
}

// SetOspfCost gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost and assigns it to the OspfCost field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetOspfCost(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighborCost) {
	o.OspfCost = &v
}

// GetOspfInterface returns the OspfInterface field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetOspfInterface() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceOspfInterface {
	if o == nil || IsNil(o.OspfInterface) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceOspfInterface
		return ret
	}
	return *o.OspfInterface
}

// GetOspfInterfaceOk returns a tuple with the OspfInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetOspfInterfaceOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceOspfInterface, bool) {
	if o == nil || IsNil(o.OspfInterface) {
		return nil, false
	}
	return o.OspfInterface, true
}

// HasOspfInterface returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasOspfInterface() bool {
	if o != nil && !IsNil(o.OspfInterface) {
		return true
	}

	return false
}

// SetOspfInterface gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceOspfInterface and assigns it to the OspfInterface field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetOspfInterface(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceOspfInterface) {
	o.OspfInterface = &v
}

// GetPeerDeviceId returns the PeerDeviceId field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetPeerDeviceId() int64 {
	if o == nil || IsNil(o.PeerDeviceId) {
		var ret int64
		return ret
	}
	return *o.PeerDeviceId
}

// GetPeerDeviceIdOk returns a tuple with the PeerDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetPeerDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PeerDeviceId) {
		return nil, false
	}
	return o.PeerDeviceId, true
}

// HasPeerDeviceId returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasPeerDeviceId() bool {
	if o != nil && !IsNil(o.PeerDeviceId) {
		return true
	}

	return false
}

// SetPeerDeviceId gets a reference to the given int64 and assigns it to the PeerDeviceId field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetPeerDeviceId(v int64) {
	o.PeerDeviceId = &v
}

// GetPeerHostname returns the PeerHostname field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetPeerHostname() string {
	if o == nil || IsNil(o.PeerHostname) {
		var ret string
		return ret
	}
	return *o.PeerHostname
}

// GetPeerHostnameOk returns a tuple with the PeerHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetPeerHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.PeerHostname) {
		return nil, false
	}
	return o.PeerHostname, true
}

// HasPeerHostname returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasPeerHostname() bool {
	if o != nil && !IsNil(o.PeerHostname) {
		return true
	}

	return false
}

// SetPeerHostname gets a reference to the given string and assigns it to the PeerHostname field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetPeerHostname(v string) {
	o.PeerHostname = &v
}

// GetSecurityZone returns the SecurityZone field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetSecurityZone() string {
	if o == nil || IsNil(o.SecurityZone) {
		var ret string
		return ret
	}
	return *o.SecurityZone
}

// GetSecurityZoneOk returns a tuple with the SecurityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetSecurityZoneOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityZone) {
		return nil, false
	}
	return o.SecurityZone, true
}

// HasSecurityZone returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasSecurityZone() bool {
	if o != nil && !IsNil(o.SecurityZone) {
		return true
	}

	return false
}

// SetSecurityZone gets a reference to the given string and assigns it to the SecurityZone field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetSecurityZone(v string) {
	o.SecurityZone = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetSpeed() int64 {
	if o == nil || IsNil(o.Speed) {
		var ret int64
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetSpeedOk() (*int64, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given int64 and assigns it to the Speed field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetSpeed(v int64) {
	o.Speed = &v
}

// GetStatic returns the Static field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetStatic() int32 {
	if o == nil || IsNil(o.Static) {
		var ret int32
		return ret
	}
	return *o.Static
}

// GetStaticOk returns a tuple with the Static field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetStaticOk() (*int32, bool) {
	if o == nil || IsNil(o.Static) {
		return nil, false
	}
	return o.Static, true
}

// HasStatic returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasStatic() bool {
	if o != nil && !IsNil(o.Static) {
		return true
	}

	return false
}

// SetStatic gets a reference to the given int32 and assigns it to the Static field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetStatic(v int32) {
	o.Static = &v
}

// GetSubinterfaces returns the Subinterfaces field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetSubinterfaces() map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValue {
	if o == nil || IsNil(o.Subinterfaces) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValue
		return ret
	}
	return *o.Subinterfaces
}

// GetSubinterfacesOk returns a tuple with the Subinterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetSubinterfacesOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValue, bool) {
	if o == nil || IsNil(o.Subinterfaces) {
		return nil, false
	}
	return o.Subinterfaces, true
}

// HasSubinterfaces returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasSubinterfaces() bool {
	if o != nil && !IsNil(o.Subinterfaces) {
		return true
	}

	return false
}

// SetSubinterfaces gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValue and assigns it to the Subinterfaces field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetSubinterfaces(v map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceSubinterfacesValue) {
	o.Subinterfaces = &v
}

// GetTcpMss returns the TcpMss field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetTcpMss() int32 {
	if o == nil || IsNil(o.TcpMss) {
		var ret int32
		return ret
	}
	return *o.TcpMss
}

// GetTcpMssOk returns a tuple with the TcpMss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetTcpMssOk() (*int32, bool) {
	if o == nil || IsNil(o.TcpMss) {
		return nil, false
	}
	return o.TcpMss, true
}

// HasTcpMss returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasTcpMss() bool {
	if o != nil && !IsNil(o.TcpMss) {
		return true
	}

	return false
}

// SetTcpMss gets a reference to the given int32 and assigns it to the TcpMss field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetTcpMss(v int32) {
	o.TcpMss = &v
}

// GetTcpMssV4 returns the TcpMssV4 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetTcpMssV4() int32 {
	if o == nil || IsNil(o.TcpMssV4) {
		var ret int32
		return ret
	}
	return *o.TcpMssV4
}

// GetTcpMssV4Ok returns a tuple with the TcpMssV4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetTcpMssV4Ok() (*int32, bool) {
	if o == nil || IsNil(o.TcpMssV4) {
		return nil, false
	}
	return o.TcpMssV4, true
}

// HasTcpMssV4 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasTcpMssV4() bool {
	if o != nil && !IsNil(o.TcpMssV4) {
		return true
	}

	return false
}

// SetTcpMssV4 gets a reference to the given int32 and assigns it to the TcpMssV4 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetTcpMssV4(v int32) {
	o.TcpMssV4 = &v
}

// GetTcpMssV6 returns the TcpMssV6 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetTcpMssV6() int32 {
	if o == nil || IsNil(o.TcpMssV6) {
		var ret int32
		return ret
	}
	return *o.TcpMssV6
}

// GetTcpMssV6Ok returns a tuple with the TcpMssV6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetTcpMssV6Ok() (*int32, bool) {
	if o == nil || IsNil(o.TcpMssV6) {
		return nil, false
	}
	return o.TcpMssV6, true
}

// HasTcpMssV6 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasTcpMssV6() bool {
	if o != nil && !IsNil(o.TcpMssV6) {
		return true
	}

	return false
}

// SetTcpMssV6 gets a reference to the given int32 and assigns it to the TcpMssV6 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetTcpMssV6(v int32) {
	o.TcpMssV6 = &v
}

// GetTunnelInterface returns the TunnelInterface field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetTunnelInterface() string {
	if o == nil || IsNil(o.TunnelInterface) {
		var ret string
		return ret
	}
	return *o.TunnelInterface
}

// GetTunnelInterfaceOk returns a tuple with the TunnelInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetTunnelInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelInterface) {
		return nil, false
	}
	return o.TunnelInterface, true
}

// HasTunnelInterface returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasTunnelInterface() bool {
	if o != nil && !IsNil(o.TunnelInterface) {
		return true
	}

	return false
}

// SetTunnelInterface gets a reference to the given string and assigns it to the TunnelInterface field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetTunnelInterface(v string) {
	o.TunnelInterface = &v
}

// GetTunnelUnderlay returns the TunnelUnderlay field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetTunnelUnderlay() string {
	if o == nil || IsNil(o.TunnelUnderlay) {
		var ret string
		return ret
	}
	return *o.TunnelUnderlay
}

// GetTunnelUnderlayOk returns a tuple with the TunnelUnderlay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetTunnelUnderlayOk() (*string, bool) {
	if o == nil || IsNil(o.TunnelUnderlay) {
		return nil, false
	}
	return o.TunnelUnderlay, true
}

// HasTunnelUnderlay returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasTunnelUnderlay() bool {
	if o != nil && !IsNil(o.TunnelUnderlay) {
		return true
	}

	return false
}

// SetTunnelUnderlay gets a reference to the given string and assigns it to the TunnelUnderlay field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetTunnelUnderlay(v string) {
	o.TunnelUnderlay = &v
}

// GetWan returns the Wan field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetWan() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceWan {
	if o == nil || IsNil(o.Wan) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceWan
		return ret
	}
	return *o.Wan
}

// GetWanOk returns a tuple with the Wan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetWanOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceWan, bool) {
	if o == nil || IsNil(o.Wan) {
		return nil, false
	}
	return o.Wan, true
}

// HasWan returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasWan() bool {
	if o != nil && !IsNil(o.Wan) {
		return true
	}

	return false
}

// SetWan gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceWan and assigns it to the Wan field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetWan(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceWan) {
	o.Wan = &v
}

// GetWanManagement returns the WanManagement field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetWanManagement() map[string]interface{} {
	if o == nil || IsNil(o.WanManagement) {
		var ret map[string]interface{}
		return ret
	}
	return o.WanManagement
}

// GetWanManagementOk returns a tuple with the WanManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetWanManagementOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.WanManagement) {
		return map[string]interface{}{}, false
	}
	return o.WanManagement, true
}

// HasWanManagement returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasWanManagement() bool {
	if o != nil && !IsNil(o.WanManagement) {
		return true
	}

	return false
}

// SetWanManagement gets a reference to the given map[string]interface{} and assigns it to the WanManagement field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetWanManagement(v map[string]interface{}) {
	o.WanManagement = v
}

// GetXTalkFilter returns the XTalkFilter field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetXTalkFilter() bool {
	if o == nil || IsNil(o.XTalkFilter) {
		var ret bool
		return ret
	}
	return *o.XTalkFilter
}

// GetXTalkFilterOk returns a tuple with the XTalkFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) GetXTalkFilterOk() (*bool, bool) {
	if o == nil || IsNil(o.XTalkFilter) {
		return nil, false
	}
	return o.XTalkFilter, true
}

// HasXTalkFilter returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) HasXTalkFilter() bool {
	if o != nil && !IsNil(o.XTalkFilter) {
		return true
	}

	return false
}

// SetXTalkFilter gets a reference to the given bool and assigns it to the XTalkFilter field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) SetXTalkFilter(v bool) {
	o.XTalkFilter = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminStatus) {
		toSerialize["adminStatus"] = o.AdminStatus
	}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.Circuit) {
		toSerialize["circuit"] = o.Circuit
	}
	if !IsNil(o.CoreNeighbor) {
		toSerialize["coreNeighbor"] = o.CoreNeighbor
	}
	if !IsNil(o.CoreToCoreTunnel) {
		toSerialize["coreToCoreTunnel"] = o.CoreToCoreTunnel
	}
	if !IsNil(o.CreateLinkLocalAddress) {
		toSerialize["createLinkLocalAddress"] = o.CreateLinkLocalAddress
	}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Duplex) {
		toSerialize["duplex"] = o.Duplex
	}
	if !IsNil(o.Dynamic) {
		toSerialize["dynamic"] = o.Dynamic
	}
	if !IsNil(o.FlexAlgos) {
		toSerialize["flexAlgos"] = o.FlexAlgos
	}
	if !IsNil(o.GatewayNeighbor) {
		toSerialize["gatewayNeighbor"] = o.GatewayNeighbor
	}
	if !IsNil(o.Gw) {
		toSerialize["gw"] = o.Gw
	}
	if !IsNil(o.InterfaceType) {
		toSerialize["interfaceType"] = o.InterfaceType
	}
	if !IsNil(o.Ipsec) {
		toSerialize["ipsec"] = o.Ipsec
	}
	if !IsNil(o.Ipv4) {
		toSerialize["ipv4"] = o.Ipv4
	}
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	if !IsNil(o.Lan) {
		toSerialize["lan"] = o.Lan
	}
	if !IsNil(o.LldpEnabled) {
		toSerialize["lldpEnabled"] = o.LldpEnabled
	}
	if !IsNil(o.Loopback) {
		toSerialize["loopback"] = o.Loopback
	}
	if !IsNil(o.MaxTransmissionUnit) {
		toSerialize["maxTransmissionUnit"] = o.MaxTransmissionUnit
	}
	if !IsNil(o.MplsEnabled) {
		toSerialize["mplsEnabled"] = o.MplsEnabled
	}
	if !IsNil(o.OspfCost) {
		toSerialize["ospfCost"] = o.OspfCost
	}
	if !IsNil(o.OspfInterface) {
		toSerialize["ospfInterface"] = o.OspfInterface
	}
	if !IsNil(o.PeerDeviceId) {
		toSerialize["peerDeviceId"] = o.PeerDeviceId
	}
	if !IsNil(o.PeerHostname) {
		toSerialize["peerHostname"] = o.PeerHostname
	}
	if !IsNil(o.SecurityZone) {
		toSerialize["securityZone"] = o.SecurityZone
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.Static) {
		toSerialize["static"] = o.Static
	}
	if !IsNil(o.Subinterfaces) {
		toSerialize["subinterfaces"] = o.Subinterfaces
	}
	if !IsNil(o.TcpMss) {
		toSerialize["tcpMss"] = o.TcpMss
	}
	if !IsNil(o.TcpMssV4) {
		toSerialize["tcpMssV4"] = o.TcpMssV4
	}
	if !IsNil(o.TcpMssV6) {
		toSerialize["tcpMssV6"] = o.TcpMssV6
	}
	if !IsNil(o.TunnelInterface) {
		toSerialize["tunnelInterface"] = o.TunnelInterface
	}
	if !IsNil(o.TunnelUnderlay) {
		toSerialize["tunnelUnderlay"] = o.TunnelUnderlay
	}
	if !IsNil(o.Wan) {
		toSerialize["wan"] = o.Wan
	}
	if !IsNil(o.WanManagement) {
		toSerialize["wanManagement"] = o.WanManagement
	}
	if !IsNil(o.XTalkFilter) {
		toSerialize["xTalkFilter"] = o.XTalkFilter
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) Get() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) Set(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


