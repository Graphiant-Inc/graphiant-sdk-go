/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane{}

// V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane struct for V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane
type V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane struct {
	ControlTransitions *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions `json:"controlTransitions,omitempty"`
	ManagementTransitions *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions `json:"managementTransitions,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane instantiates a new V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane() *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane {
	this := V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane{}
	return &this
}

// NewV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneWithDefaults instantiates a new V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneWithDefaults() *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane {
	this := V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane{}
	return &this
}

// GetControlTransitions returns the ControlTransitions field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) GetControlTransitions() V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions {
	if o == nil || IsNil(o.ControlTransitions) {
		var ret V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions
		return ret
	}
	return *o.ControlTransitions
}

// GetControlTransitionsOk returns a tuple with the ControlTransitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) GetControlTransitionsOk() (*V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions, bool) {
	if o == nil || IsNil(o.ControlTransitions) {
		return nil, false
	}
	return o.ControlTransitions, true
}

// HasControlTransitions returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) HasControlTransitions() bool {
	if o != nil && !IsNil(o.ControlTransitions) {
		return true
	}

	return false
}

// SetControlTransitions gets a reference to the given V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions and assigns it to the ControlTransitions field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) SetControlTransitions(v V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions) {
	o.ControlTransitions = &v
}

// GetManagementTransitions returns the ManagementTransitions field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) GetManagementTransitions() V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions {
	if o == nil || IsNil(o.ManagementTransitions) {
		var ret V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions
		return ret
	}
	return *o.ManagementTransitions
}

// GetManagementTransitionsOk returns a tuple with the ManagementTransitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) GetManagementTransitionsOk() (*V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions, bool) {
	if o == nil || IsNil(o.ManagementTransitions) {
		return nil, false
	}
	return o.ManagementTransitions, true
}

// HasManagementTransitions returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) HasManagementTransitions() bool {
	if o != nil && !IsNil(o.ManagementTransitions) {
		return true
	}

	return false
}

// SetManagementTransitions gets a reference to the given V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions and assigns it to the ManagementTransitions field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) SetManagementTransitions(v V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitions) {
	o.ManagementTransitions = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) SetStatus(v string) {
	o.Status = &v
}

func (o V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ControlTransitions) {
		toSerialize["controlTransitions"] = o.ControlTransitions
	}
	if !IsNil(o.ManagementTransitions) {
		toSerialize["managementTransitions"] = o.ManagementTransitions
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane struct {
	value *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane
	isSet bool
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) Get() *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane {
	return v.value
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) Set(val *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane(val *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane {
	return &NullableV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane{value: val, isSet: true}
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


