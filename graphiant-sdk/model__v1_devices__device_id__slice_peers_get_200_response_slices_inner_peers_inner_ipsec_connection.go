/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection{}

// V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection struct for V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection
type V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection struct {
	AntiReplayWSize *int32 `json:"antiReplayWSize,omitempty"`
	EstablishedTime *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"establishedTime,omitempty"`
	LocalCircuit *string `json:"localCircuit,omitempty"`
	LocalInterface *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner `json:"localInterface,omitempty"`
	LocalPort *int32 `json:"localPort,omitempty"`
	LocalSpi *int64 `json:"localSpi,omitempty"`
	NegotiatedAlgorithms *string `json:"negotiatedAlgorithms,omitempty"`
	OperState *bool `json:"operState,omitempty"`
	PeerAddress *string `json:"peerAddress,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
	RekeyTime *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"rekeyTime,omitempty"`
	RemotePort *int32 `json:"remotePort,omitempty"`
	RemoteSpi *int64 `json:"remoteSpi,omitempty"`
	SessionId *int64 `json:"sessionId,omitempty"`
	SourceAddress *string `json:"sourceAddress,omitempty"`
	TunnelInterface *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner `json:"tunnelInterface,omitempty"`
}

// NewV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection instantiates a new V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection() *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection {
	this := V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection{}
	return &this
}

// NewV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnectionWithDefaults instantiates a new V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnectionWithDefaults() *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection {
	this := V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection{}
	return &this
}

// GetAntiReplayWSize returns the AntiReplayWSize field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetAntiReplayWSize() int32 {
	if o == nil || IsNil(o.AntiReplayWSize) {
		var ret int32
		return ret
	}
	return *o.AntiReplayWSize
}

// GetAntiReplayWSizeOk returns a tuple with the AntiReplayWSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetAntiReplayWSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.AntiReplayWSize) {
		return nil, false
	}
	return o.AntiReplayWSize, true
}

// HasAntiReplayWSize returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasAntiReplayWSize() bool {
	if o != nil && !IsNil(o.AntiReplayWSize) {
		return true
	}

	return false
}

// SetAntiReplayWSize gets a reference to the given int32 and assigns it to the AntiReplayWSize field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetAntiReplayWSize(v int32) {
	o.AntiReplayWSize = &v
}

// GetEstablishedTime returns the EstablishedTime field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetEstablishedTime() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.EstablishedTime) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.EstablishedTime
}

// GetEstablishedTimeOk returns a tuple with the EstablishedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetEstablishedTimeOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.EstablishedTime) {
		return nil, false
	}
	return o.EstablishedTime, true
}

// HasEstablishedTime returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasEstablishedTime() bool {
	if o != nil && !IsNil(o.EstablishedTime) {
		return true
	}

	return false
}

// SetEstablishedTime gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the EstablishedTime field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetEstablishedTime(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.EstablishedTime = &v
}

// GetLocalCircuit returns the LocalCircuit field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetLocalCircuit() string {
	if o == nil || IsNil(o.LocalCircuit) {
		var ret string
		return ret
	}
	return *o.LocalCircuit
}

// GetLocalCircuitOk returns a tuple with the LocalCircuit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetLocalCircuitOk() (*string, bool) {
	if o == nil || IsNil(o.LocalCircuit) {
		return nil, false
	}
	return o.LocalCircuit, true
}

// HasLocalCircuit returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasLocalCircuit() bool {
	if o != nil && !IsNil(o.LocalCircuit) {
		return true
	}

	return false
}

// SetLocalCircuit gets a reference to the given string and assigns it to the LocalCircuit field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetLocalCircuit(v string) {
	o.LocalCircuit = &v
}

// GetLocalInterface returns the LocalInterface field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetLocalInterface() V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner {
	if o == nil || IsNil(o.LocalInterface) {
		var ret V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner
		return ret
	}
	return *o.LocalInterface
}

// GetLocalInterfaceOk returns a tuple with the LocalInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetLocalInterfaceOk() (*V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner, bool) {
	if o == nil || IsNil(o.LocalInterface) {
		return nil, false
	}
	return o.LocalInterface, true
}

// HasLocalInterface returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasLocalInterface() bool {
	if o != nil && !IsNil(o.LocalInterface) {
		return true
	}

	return false
}

// SetLocalInterface gets a reference to the given V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner and assigns it to the LocalInterface field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetLocalInterface(v V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner) {
	o.LocalInterface = &v
}

// GetLocalPort returns the LocalPort field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetLocalPort() int32 {
	if o == nil || IsNil(o.LocalPort) {
		var ret int32
		return ret
	}
	return *o.LocalPort
}

// GetLocalPortOk returns a tuple with the LocalPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetLocalPortOk() (*int32, bool) {
	if o == nil || IsNil(o.LocalPort) {
		return nil, false
	}
	return o.LocalPort, true
}

// HasLocalPort returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasLocalPort() bool {
	if o != nil && !IsNil(o.LocalPort) {
		return true
	}

	return false
}

// SetLocalPort gets a reference to the given int32 and assigns it to the LocalPort field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetLocalPort(v int32) {
	o.LocalPort = &v
}

// GetLocalSpi returns the LocalSpi field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetLocalSpi() int64 {
	if o == nil || IsNil(o.LocalSpi) {
		var ret int64
		return ret
	}
	return *o.LocalSpi
}

// GetLocalSpiOk returns a tuple with the LocalSpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetLocalSpiOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalSpi) {
		return nil, false
	}
	return o.LocalSpi, true
}

// HasLocalSpi returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasLocalSpi() bool {
	if o != nil && !IsNil(o.LocalSpi) {
		return true
	}

	return false
}

// SetLocalSpi gets a reference to the given int64 and assigns it to the LocalSpi field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetLocalSpi(v int64) {
	o.LocalSpi = &v
}

// GetNegotiatedAlgorithms returns the NegotiatedAlgorithms field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetNegotiatedAlgorithms() string {
	if o == nil || IsNil(o.NegotiatedAlgorithms) {
		var ret string
		return ret
	}
	return *o.NegotiatedAlgorithms
}

// GetNegotiatedAlgorithmsOk returns a tuple with the NegotiatedAlgorithms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetNegotiatedAlgorithmsOk() (*string, bool) {
	if o == nil || IsNil(o.NegotiatedAlgorithms) {
		return nil, false
	}
	return o.NegotiatedAlgorithms, true
}

// HasNegotiatedAlgorithms returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasNegotiatedAlgorithms() bool {
	if o != nil && !IsNil(o.NegotiatedAlgorithms) {
		return true
	}

	return false
}

// SetNegotiatedAlgorithms gets a reference to the given string and assigns it to the NegotiatedAlgorithms field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetNegotiatedAlgorithms(v string) {
	o.NegotiatedAlgorithms = &v
}

// GetOperState returns the OperState field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetOperState() bool {
	if o == nil || IsNil(o.OperState) {
		var ret bool
		return ret
	}
	return *o.OperState
}

// GetOperStateOk returns a tuple with the OperState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetOperStateOk() (*bool, bool) {
	if o == nil || IsNil(o.OperState) {
		return nil, false
	}
	return o.OperState, true
}

// HasOperState returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasOperState() bool {
	if o != nil && !IsNil(o.OperState) {
		return true
	}

	return false
}

// SetOperState gets a reference to the given bool and assigns it to the OperState field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetOperState(v bool) {
	o.OperState = &v
}

// GetPeerAddress returns the PeerAddress field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetPeerAddress() string {
	if o == nil || IsNil(o.PeerAddress) {
		var ret string
		return ret
	}
	return *o.PeerAddress
}

// GetPeerAddressOk returns a tuple with the PeerAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetPeerAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PeerAddress) {
		return nil, false
	}
	return o.PeerAddress, true
}

// HasPeerAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasPeerAddress() bool {
	if o != nil && !IsNil(o.PeerAddress) {
		return true
	}

	return false
}

// SetPeerAddress gets a reference to the given string and assigns it to the PeerAddress field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetPeerAddress(v string) {
	o.PeerAddress = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetProtocol(v string) {
	o.Protocol = &v
}

// GetRekeyTime returns the RekeyTime field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetRekeyTime() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.RekeyTime) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.RekeyTime
}

// GetRekeyTimeOk returns a tuple with the RekeyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetRekeyTimeOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.RekeyTime) {
		return nil, false
	}
	return o.RekeyTime, true
}

// HasRekeyTime returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasRekeyTime() bool {
	if o != nil && !IsNil(o.RekeyTime) {
		return true
	}

	return false
}

// SetRekeyTime gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the RekeyTime field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetRekeyTime(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.RekeyTime = &v
}

// GetRemotePort returns the RemotePort field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetRemotePort() int32 {
	if o == nil || IsNil(o.RemotePort) {
		var ret int32
		return ret
	}
	return *o.RemotePort
}

// GetRemotePortOk returns a tuple with the RemotePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetRemotePortOk() (*int32, bool) {
	if o == nil || IsNil(o.RemotePort) {
		return nil, false
	}
	return o.RemotePort, true
}

// HasRemotePort returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasRemotePort() bool {
	if o != nil && !IsNil(o.RemotePort) {
		return true
	}

	return false
}

// SetRemotePort gets a reference to the given int32 and assigns it to the RemotePort field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetRemotePort(v int32) {
	o.RemotePort = &v
}

// GetRemoteSpi returns the RemoteSpi field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetRemoteSpi() int64 {
	if o == nil || IsNil(o.RemoteSpi) {
		var ret int64
		return ret
	}
	return *o.RemoteSpi
}

// GetRemoteSpiOk returns a tuple with the RemoteSpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetRemoteSpiOk() (*int64, bool) {
	if o == nil || IsNil(o.RemoteSpi) {
		return nil, false
	}
	return o.RemoteSpi, true
}

// HasRemoteSpi returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasRemoteSpi() bool {
	if o != nil && !IsNil(o.RemoteSpi) {
		return true
	}

	return false
}

// SetRemoteSpi gets a reference to the given int64 and assigns it to the RemoteSpi field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetRemoteSpi(v int64) {
	o.RemoteSpi = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetSessionId() int64 {
	if o == nil || IsNil(o.SessionId) {
		var ret int64
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetSessionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasSessionId() bool {
	if o != nil && !IsNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given int64 and assigns it to the SessionId field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetSessionId(v int64) {
	o.SessionId = &v
}

// GetSourceAddress returns the SourceAddress field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetSourceAddress() string {
	if o == nil || IsNil(o.SourceAddress) {
		var ret string
		return ret
	}
	return *o.SourceAddress
}

// GetSourceAddressOk returns a tuple with the SourceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetSourceAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SourceAddress) {
		return nil, false
	}
	return o.SourceAddress, true
}

// HasSourceAddress returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasSourceAddress() bool {
	if o != nil && !IsNil(o.SourceAddress) {
		return true
	}

	return false
}

// SetSourceAddress gets a reference to the given string and assigns it to the SourceAddress field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetSourceAddress(v string) {
	o.SourceAddress = &v
}

// GetTunnelInterface returns the TunnelInterface field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetTunnelInterface() V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner {
	if o == nil || IsNil(o.TunnelInterface) {
		var ret V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner
		return ret
	}
	return *o.TunnelInterface
}

// GetTunnelInterfaceOk returns a tuple with the TunnelInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) GetTunnelInterfaceOk() (*V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner, bool) {
	if o == nil || IsNil(o.TunnelInterface) {
		return nil, false
	}
	return o.TunnelInterface, true
}

// HasTunnelInterface returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) HasTunnelInterface() bool {
	if o != nil && !IsNil(o.TunnelInterface) {
		return true
	}

	return false
}

// SetTunnelInterface gets a reference to the given V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner and assigns it to the TunnelInterface field.
func (o *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) SetTunnelInterface(v V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerInterfacesInner) {
	o.TunnelInterface = &v
}

func (o V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AntiReplayWSize) {
		toSerialize["antiReplayWSize"] = o.AntiReplayWSize
	}
	if !IsNil(o.EstablishedTime) {
		toSerialize["establishedTime"] = o.EstablishedTime
	}
	if !IsNil(o.LocalCircuit) {
		toSerialize["localCircuit"] = o.LocalCircuit
	}
	if !IsNil(o.LocalInterface) {
		toSerialize["localInterface"] = o.LocalInterface
	}
	if !IsNil(o.LocalPort) {
		toSerialize["localPort"] = o.LocalPort
	}
	if !IsNil(o.LocalSpi) {
		toSerialize["localSpi"] = o.LocalSpi
	}
	if !IsNil(o.NegotiatedAlgorithms) {
		toSerialize["negotiatedAlgorithms"] = o.NegotiatedAlgorithms
	}
	if !IsNil(o.OperState) {
		toSerialize["operState"] = o.OperState
	}
	if !IsNil(o.PeerAddress) {
		toSerialize["peerAddress"] = o.PeerAddress
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.RekeyTime) {
		toSerialize["rekeyTime"] = o.RekeyTime
	}
	if !IsNil(o.RemotePort) {
		toSerialize["remotePort"] = o.RemotePort
	}
	if !IsNil(o.RemoteSpi) {
		toSerialize["remoteSpi"] = o.RemoteSpi
	}
	if !IsNil(o.SessionId) {
		toSerialize["sessionId"] = o.SessionId
	}
	if !IsNil(o.SourceAddress) {
		toSerialize["sourceAddress"] = o.SourceAddress
	}
	if !IsNil(o.TunnelInterface) {
		toSerialize["tunnelInterface"] = o.TunnelInterface
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection struct {
	value *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection
	isSet bool
}

func (v NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) Get() *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection {
	return v.value
}

func (v *NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) Set(val *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection(val *V1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) *NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection {
	return &NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdSlicePeersGet200ResponseSlicesInnerPeersInnerIpsecConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


