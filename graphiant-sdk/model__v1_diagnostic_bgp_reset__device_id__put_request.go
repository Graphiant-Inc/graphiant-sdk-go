/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DiagnosticBgpResetDeviceIdPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DiagnosticBgpResetDeviceIdPutRequest{}

// V1DiagnosticBgpResetDeviceIdPutRequest struct for V1DiagnosticBgpResetDeviceIdPutRequest
type V1DiagnosticBgpResetDeviceIdPutRequest struct {
	Hard *bool `json:"hard,omitempty"`
	LanSegment *string `json:"lanSegment,omitempty"`
	LocalInterface *string `json:"localInterface,omitempty"`
	Neighbor *string `json:"neighbor,omitempty"`
}

// NewV1DiagnosticBgpResetDeviceIdPutRequest instantiates a new V1DiagnosticBgpResetDeviceIdPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DiagnosticBgpResetDeviceIdPutRequest() *V1DiagnosticBgpResetDeviceIdPutRequest {
	this := V1DiagnosticBgpResetDeviceIdPutRequest{}
	return &this
}

// NewV1DiagnosticBgpResetDeviceIdPutRequestWithDefaults instantiates a new V1DiagnosticBgpResetDeviceIdPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DiagnosticBgpResetDeviceIdPutRequestWithDefaults() *V1DiagnosticBgpResetDeviceIdPutRequest {
	this := V1DiagnosticBgpResetDeviceIdPutRequest{}
	return &this
}

// GetHard returns the Hard field value if set, zero value otherwise.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) GetHard() bool {
	if o == nil || IsNil(o.Hard) {
		var ret bool
		return ret
	}
	return *o.Hard
}

// GetHardOk returns a tuple with the Hard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) GetHardOk() (*bool, bool) {
	if o == nil || IsNil(o.Hard) {
		return nil, false
	}
	return o.Hard, true
}

// HasHard returns a boolean if a field has been set.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) HasHard() bool {
	if o != nil && !IsNil(o.Hard) {
		return true
	}

	return false
}

// SetHard gets a reference to the given bool and assigns it to the Hard field.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) SetHard(v bool) {
	o.Hard = &v
}

// GetLanSegment returns the LanSegment field value if set, zero value otherwise.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) GetLanSegment() string {
	if o == nil || IsNil(o.LanSegment) {
		var ret string
		return ret
	}
	return *o.LanSegment
}

// GetLanSegmentOk returns a tuple with the LanSegment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) GetLanSegmentOk() (*string, bool) {
	if o == nil || IsNil(o.LanSegment) {
		return nil, false
	}
	return o.LanSegment, true
}

// HasLanSegment returns a boolean if a field has been set.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) HasLanSegment() bool {
	if o != nil && !IsNil(o.LanSegment) {
		return true
	}

	return false
}

// SetLanSegment gets a reference to the given string and assigns it to the LanSegment field.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) SetLanSegment(v string) {
	o.LanSegment = &v
}

// GetLocalInterface returns the LocalInterface field value if set, zero value otherwise.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) GetLocalInterface() string {
	if o == nil || IsNil(o.LocalInterface) {
		var ret string
		return ret
	}
	return *o.LocalInterface
}

// GetLocalInterfaceOk returns a tuple with the LocalInterface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) GetLocalInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.LocalInterface) {
		return nil, false
	}
	return o.LocalInterface, true
}

// HasLocalInterface returns a boolean if a field has been set.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) HasLocalInterface() bool {
	if o != nil && !IsNil(o.LocalInterface) {
		return true
	}

	return false
}

// SetLocalInterface gets a reference to the given string and assigns it to the LocalInterface field.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) SetLocalInterface(v string) {
	o.LocalInterface = &v
}

// GetNeighbor returns the Neighbor field value if set, zero value otherwise.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) GetNeighbor() string {
	if o == nil || IsNil(o.Neighbor) {
		var ret string
		return ret
	}
	return *o.Neighbor
}

// GetNeighborOk returns a tuple with the Neighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) GetNeighborOk() (*string, bool) {
	if o == nil || IsNil(o.Neighbor) {
		return nil, false
	}
	return o.Neighbor, true
}

// HasNeighbor returns a boolean if a field has been set.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) HasNeighbor() bool {
	if o != nil && !IsNil(o.Neighbor) {
		return true
	}

	return false
}

// SetNeighbor gets a reference to the given string and assigns it to the Neighbor field.
func (o *V1DiagnosticBgpResetDeviceIdPutRequest) SetNeighbor(v string) {
	o.Neighbor = &v
}

func (o V1DiagnosticBgpResetDeviceIdPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DiagnosticBgpResetDeviceIdPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hard) {
		toSerialize["hard"] = o.Hard
	}
	if !IsNil(o.LanSegment) {
		toSerialize["lanSegment"] = o.LanSegment
	}
	if !IsNil(o.LocalInterface) {
		toSerialize["localInterface"] = o.LocalInterface
	}
	if !IsNil(o.Neighbor) {
		toSerialize["neighbor"] = o.Neighbor
	}
	return toSerialize, nil
}

type NullableV1DiagnosticBgpResetDeviceIdPutRequest struct {
	value *V1DiagnosticBgpResetDeviceIdPutRequest
	isSet bool
}

func (v NullableV1DiagnosticBgpResetDeviceIdPutRequest) Get() *V1DiagnosticBgpResetDeviceIdPutRequest {
	return v.value
}

func (v *NullableV1DiagnosticBgpResetDeviceIdPutRequest) Set(val *V1DiagnosticBgpResetDeviceIdPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DiagnosticBgpResetDeviceIdPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DiagnosticBgpResetDeviceIdPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DiagnosticBgpResetDeviceIdPutRequest(val *V1DiagnosticBgpResetDeviceIdPutRequest) *NullableV1DiagnosticBgpResetDeviceIdPutRequest {
	return &NullableV1DiagnosticBgpResetDeviceIdPutRequest{value: val, isSet: true}
}

func (v NullableV1DiagnosticBgpResetDeviceIdPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DiagnosticBgpResetDeviceIdPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


