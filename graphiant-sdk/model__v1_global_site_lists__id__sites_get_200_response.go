/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GlobalSiteListsIdSitesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GlobalSiteListsIdSitesGet200Response{}

// V1GlobalSiteListsIdSitesGet200Response struct for V1GlobalSiteListsIdSitesGet200Response
type V1GlobalSiteListsIdSitesGet200Response struct {
	Entries []V1GlobalSiteListsIdSitesGet200ResponseEntriesInner `json:"entries,omitempty"`
}

// NewV1GlobalSiteListsIdSitesGet200Response instantiates a new V1GlobalSiteListsIdSitesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GlobalSiteListsIdSitesGet200Response() *V1GlobalSiteListsIdSitesGet200Response {
	this := V1GlobalSiteListsIdSitesGet200Response{}
	return &this
}

// NewV1GlobalSiteListsIdSitesGet200ResponseWithDefaults instantiates a new V1GlobalSiteListsIdSitesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GlobalSiteListsIdSitesGet200ResponseWithDefaults() *V1GlobalSiteListsIdSitesGet200Response {
	this := V1GlobalSiteListsIdSitesGet200Response{}
	return &this
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *V1GlobalSiteListsIdSitesGet200Response) GetEntries() []V1GlobalSiteListsIdSitesGet200ResponseEntriesInner {
	if o == nil || IsNil(o.Entries) {
		var ret []V1GlobalSiteListsIdSitesGet200ResponseEntriesInner
		return ret
	}
	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalSiteListsIdSitesGet200Response) GetEntriesOk() ([]V1GlobalSiteListsIdSitesGet200ResponseEntriesInner, bool) {
	if o == nil || IsNil(o.Entries) {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *V1GlobalSiteListsIdSitesGet200Response) HasEntries() bool {
	if o != nil && !IsNil(o.Entries) {
		return true
	}

	return false
}

// SetEntries gets a reference to the given []V1GlobalSiteListsIdSitesGet200ResponseEntriesInner and assigns it to the Entries field.
func (o *V1GlobalSiteListsIdSitesGet200Response) SetEntries(v []V1GlobalSiteListsIdSitesGet200ResponseEntriesInner) {
	o.Entries = v
}

func (o V1GlobalSiteListsIdSitesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GlobalSiteListsIdSitesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entries) {
		toSerialize["entries"] = o.Entries
	}
	return toSerialize, nil
}

type NullableV1GlobalSiteListsIdSitesGet200Response struct {
	value *V1GlobalSiteListsIdSitesGet200Response
	isSet bool
}

func (v NullableV1GlobalSiteListsIdSitesGet200Response) Get() *V1GlobalSiteListsIdSitesGet200Response {
	return v.value
}

func (v *NullableV1GlobalSiteListsIdSitesGet200Response) Set(val *V1GlobalSiteListsIdSitesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GlobalSiteListsIdSitesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GlobalSiteListsIdSitesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GlobalSiteListsIdSitesGet200Response(val *V1GlobalSiteListsIdSitesGet200Response) *NullableV1GlobalSiteListsIdSitesGet200Response {
	return &NullableV1GlobalSiteListsIdSitesGet200Response{value: val, isSet: true}
}

func (v NullableV1GlobalSiteListsIdSitesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GlobalSiteListsIdSitesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


