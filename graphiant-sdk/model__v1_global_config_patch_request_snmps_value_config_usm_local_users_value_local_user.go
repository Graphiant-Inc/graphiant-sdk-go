/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser{}

// V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser struct for V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser
type V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser struct {
	AuthPassphrase *string `json:"authPassphrase,omitempty"`
	AuthProtocol *string `json:"authProtocol,omitempty"`
	EncryptionPassphrase *string `json:"encryptionPassphrase,omitempty"`
	EncryptionProtocol *string `json:"encryptionProtocol,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser instantiates a new V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser() *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser {
	this := V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser{}
	return &this
}

// NewV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUserWithDefaults instantiates a new V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUserWithDefaults() *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser {
	this := V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser{}
	return &this
}

// GetAuthPassphrase returns the AuthPassphrase field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) GetAuthPassphrase() string {
	if o == nil || IsNil(o.AuthPassphrase) {
		var ret string
		return ret
	}
	return *o.AuthPassphrase
}

// GetAuthPassphraseOk returns a tuple with the AuthPassphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) GetAuthPassphraseOk() (*string, bool) {
	if o == nil || IsNil(o.AuthPassphrase) {
		return nil, false
	}
	return o.AuthPassphrase, true
}

// HasAuthPassphrase returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) HasAuthPassphrase() bool {
	if o != nil && !IsNil(o.AuthPassphrase) {
		return true
	}

	return false
}

// SetAuthPassphrase gets a reference to the given string and assigns it to the AuthPassphrase field.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) SetAuthPassphrase(v string) {
	o.AuthPassphrase = &v
}

// GetAuthProtocol returns the AuthProtocol field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) GetAuthProtocol() string {
	if o == nil || IsNil(o.AuthProtocol) {
		var ret string
		return ret
	}
	return *o.AuthProtocol
}

// GetAuthProtocolOk returns a tuple with the AuthProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) GetAuthProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.AuthProtocol) {
		return nil, false
	}
	return o.AuthProtocol, true
}

// HasAuthProtocol returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) HasAuthProtocol() bool {
	if o != nil && !IsNil(o.AuthProtocol) {
		return true
	}

	return false
}

// SetAuthProtocol gets a reference to the given string and assigns it to the AuthProtocol field.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) SetAuthProtocol(v string) {
	o.AuthProtocol = &v
}

// GetEncryptionPassphrase returns the EncryptionPassphrase field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) GetEncryptionPassphrase() string {
	if o == nil || IsNil(o.EncryptionPassphrase) {
		var ret string
		return ret
	}
	return *o.EncryptionPassphrase
}

// GetEncryptionPassphraseOk returns a tuple with the EncryptionPassphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) GetEncryptionPassphraseOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionPassphrase) {
		return nil, false
	}
	return o.EncryptionPassphrase, true
}

// HasEncryptionPassphrase returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) HasEncryptionPassphrase() bool {
	if o != nil && !IsNil(o.EncryptionPassphrase) {
		return true
	}

	return false
}

// SetEncryptionPassphrase gets a reference to the given string and assigns it to the EncryptionPassphrase field.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) SetEncryptionPassphrase(v string) {
	o.EncryptionPassphrase = &v
}

// GetEncryptionProtocol returns the EncryptionProtocol field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) GetEncryptionProtocol() string {
	if o == nil || IsNil(o.EncryptionProtocol) {
		var ret string
		return ret
	}
	return *o.EncryptionProtocol
}

// GetEncryptionProtocolOk returns a tuple with the EncryptionProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) GetEncryptionProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptionProtocol) {
		return nil, false
	}
	return o.EncryptionProtocol, true
}

// HasEncryptionProtocol returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) HasEncryptionProtocol() bool {
	if o != nil && !IsNil(o.EncryptionProtocol) {
		return true
	}

	return false
}

// SetEncryptionProtocol gets a reference to the given string and assigns it to the EncryptionProtocol field.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) SetEncryptionProtocol(v string) {
	o.EncryptionProtocol = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) SetName(v string) {
	o.Name = &v
}

func (o V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthPassphrase) {
		toSerialize["authPassphrase"] = o.AuthPassphrase
	}
	if !IsNil(o.AuthProtocol) {
		toSerialize["authProtocol"] = o.AuthProtocol
	}
	if !IsNil(o.EncryptionPassphrase) {
		toSerialize["encryptionPassphrase"] = o.EncryptionPassphrase
	}
	if !IsNil(o.EncryptionProtocol) {
		toSerialize["encryptionProtocol"] = o.EncryptionProtocol
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser struct {
	value *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser
	isSet bool
}

func (v NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) Get() *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser {
	return v.value
}

func (v *NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) Set(val *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser(val *V1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) *NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser {
	return &NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser{value: val, isSet: true}
}

func (v NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GlobalConfigPatchRequestSnmpsValueConfigUsmLocalUsersValueLocalUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


