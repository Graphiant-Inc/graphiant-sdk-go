/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesBringupPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesBringupPutRequest{}

// V1DevicesBringupPutRequest struct for V1DevicesBringupPutRequest
type V1DevicesBringupPutRequest struct {
	DeviceIds []int64 `json:"deviceIds,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewV1DevicesBringupPutRequest instantiates a new V1DevicesBringupPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesBringupPutRequest() *V1DevicesBringupPutRequest {
	this := V1DevicesBringupPutRequest{}
	return &this
}

// NewV1DevicesBringupPutRequestWithDefaults instantiates a new V1DevicesBringupPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesBringupPutRequestWithDefaults() *V1DevicesBringupPutRequest {
	this := V1DevicesBringupPutRequest{}
	return &this
}

// GetDeviceIds returns the DeviceIds field value if set, zero value otherwise.
func (o *V1DevicesBringupPutRequest) GetDeviceIds() []int64 {
	if o == nil || IsNil(o.DeviceIds) {
		var ret []int64
		return ret
	}
	return o.DeviceIds
}

// GetDeviceIdsOk returns a tuple with the DeviceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupPutRequest) GetDeviceIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.DeviceIds) {
		return nil, false
	}
	return o.DeviceIds, true
}

// HasDeviceIds returns a boolean if a field has been set.
func (o *V1DevicesBringupPutRequest) HasDeviceIds() bool {
	if o != nil && !IsNil(o.DeviceIds) {
		return true
	}

	return false
}

// SetDeviceIds gets a reference to the given []int64 and assigns it to the DeviceIds field.
func (o *V1DevicesBringupPutRequest) SetDeviceIds(v []int64) {
	o.DeviceIds = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1DevicesBringupPutRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupPutRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1DevicesBringupPutRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1DevicesBringupPutRequest) SetStatus(v string) {
	o.Status = &v
}

func (o V1DevicesBringupPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesBringupPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceIds) {
		toSerialize["deviceIds"] = o.DeviceIds
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV1DevicesBringupPutRequest struct {
	value *V1DevicesBringupPutRequest
	isSet bool
}

func (v NullableV1DevicesBringupPutRequest) Get() *V1DevicesBringupPutRequest {
	return v.value
}

func (v *NullableV1DevicesBringupPutRequest) Set(val *V1DevicesBringupPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesBringupPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesBringupPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesBringupPutRequest(val *V1DevicesBringupPutRequest) *NullableV1DevicesBringupPutRequest {
	return &NullableV1DevicesBringupPutRequest{value: val, isSet: true}
}

func (v NullableV1DevicesBringupPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesBringupPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


