/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet{}

// V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet struct for V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet
type V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet struct {
	DefaultLeaseTimeSecs *int32 `json:"defaultLeaseTimeSecs,omitempty"`
	Description *string `json:"description,omitempty"`
	DomainName *string `json:"domainName,omitempty"`
	DomainNameServer *V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerNameservers `json:"domainNameServer,omitempty"`
	Interface *string `json:"interface,omitempty"`
	IpGateway *string `json:"ipGateway,omitempty"`
	IpPrefix *string `json:"ipPrefix,omitempty"`
	IpRanges []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerRangesInner `json:"ipRanges,omitempty"`
	IpRangesV2 *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetIpRangesV2 `json:"ipRangesV2,omitempty"`
	MaxLeaseTimeSecs *int32 `json:"maxLeaseTimeSecs,omitempty"`
	MinLeaseTimeSecs *int32 `json:"minLeaseTimeSecs,omitempty"`
	Name *string `json:"name,omitempty"`
	StaticLeases *map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetStaticLeasesValue `json:"staticLeases,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet{}
	return &this
}

// GetDefaultLeaseTimeSecs returns the DefaultLeaseTimeSecs field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetDefaultLeaseTimeSecs() int32 {
	if o == nil || IsNil(o.DefaultLeaseTimeSecs) {
		var ret int32
		return ret
	}
	return *o.DefaultLeaseTimeSecs
}

// GetDefaultLeaseTimeSecsOk returns a tuple with the DefaultLeaseTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetDefaultLeaseTimeSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultLeaseTimeSecs) {
		return nil, false
	}
	return o.DefaultLeaseTimeSecs, true
}

// HasDefaultLeaseTimeSecs returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasDefaultLeaseTimeSecs() bool {
	if o != nil && !IsNil(o.DefaultLeaseTimeSecs) {
		return true
	}

	return false
}

// SetDefaultLeaseTimeSecs gets a reference to the given int32 and assigns it to the DefaultLeaseTimeSecs field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetDefaultLeaseTimeSecs(v int32) {
	o.DefaultLeaseTimeSecs = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetDescription(v string) {
	o.Description = &v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasDomainName() bool {
	if o != nil && !IsNil(o.DomainName) {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetDomainName(v string) {
	o.DomainName = &v
}

// GetDomainNameServer returns the DomainNameServer field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetDomainNameServer() V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerNameservers {
	if o == nil || IsNil(o.DomainNameServer) {
		var ret V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerNameservers
		return ret
	}
	return *o.DomainNameServer
}

// GetDomainNameServerOk returns a tuple with the DomainNameServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetDomainNameServerOk() (*V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerNameservers, bool) {
	if o == nil || IsNil(o.DomainNameServer) {
		return nil, false
	}
	return o.DomainNameServer, true
}

// HasDomainNameServer returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasDomainNameServer() bool {
	if o != nil && !IsNil(o.DomainNameServer) {
		return true
	}

	return false
}

// SetDomainNameServer gets a reference to the given V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerNameservers and assigns it to the DomainNameServer field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetDomainNameServer(v V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerNameservers) {
	o.DomainNameServer = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetInterface() string {
	if o == nil || IsNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetInterface(v string) {
	o.Interface = &v
}

// GetIpGateway returns the IpGateway field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetIpGateway() string {
	if o == nil || IsNil(o.IpGateway) {
		var ret string
		return ret
	}
	return *o.IpGateway
}

// GetIpGatewayOk returns a tuple with the IpGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetIpGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.IpGateway) {
		return nil, false
	}
	return o.IpGateway, true
}

// HasIpGateway returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasIpGateway() bool {
	if o != nil && !IsNil(o.IpGateway) {
		return true
	}

	return false
}

// SetIpGateway gets a reference to the given string and assigns it to the IpGateway field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetIpGateway(v string) {
	o.IpGateway = &v
}

// GetIpPrefix returns the IpPrefix field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetIpPrefix() string {
	if o == nil || IsNil(o.IpPrefix) {
		var ret string
		return ret
	}
	return *o.IpPrefix
}

// GetIpPrefixOk returns a tuple with the IpPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetIpPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.IpPrefix) {
		return nil, false
	}
	return o.IpPrefix, true
}

// HasIpPrefix returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasIpPrefix() bool {
	if o != nil && !IsNil(o.IpPrefix) {
		return true
	}

	return false
}

// SetIpPrefix gets a reference to the given string and assigns it to the IpPrefix field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetIpPrefix(v string) {
	o.IpPrefix = &v
}

// GetIpRanges returns the IpRanges field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetIpRanges() []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerRangesInner {
	if o == nil || IsNil(o.IpRanges) {
		var ret []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerRangesInner
		return ret
	}
	return o.IpRanges
}

// GetIpRangesOk returns a tuple with the IpRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetIpRangesOk() ([]V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerRangesInner, bool) {
	if o == nil || IsNil(o.IpRanges) {
		return nil, false
	}
	return o.IpRanges, true
}

// HasIpRanges returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasIpRanges() bool {
	if o != nil && !IsNil(o.IpRanges) {
		return true
	}

	return false
}

// SetIpRanges gets a reference to the given []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerRangesInner and assigns it to the IpRanges field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetIpRanges(v []V1ExtranetsGet200ResponsePoliciesInnerBranchesExcludedDevicesInnerSegmentsInnerDhcpSubnetsInnerRangesInner) {
	o.IpRanges = v
}

// GetIpRangesV2 returns the IpRangesV2 field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetIpRangesV2() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetIpRangesV2 {
	if o == nil || IsNil(o.IpRangesV2) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetIpRangesV2
		return ret
	}
	return *o.IpRangesV2
}

// GetIpRangesV2Ok returns a tuple with the IpRangesV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetIpRangesV2Ok() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetIpRangesV2, bool) {
	if o == nil || IsNil(o.IpRangesV2) {
		return nil, false
	}
	return o.IpRangesV2, true
}

// HasIpRangesV2 returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasIpRangesV2() bool {
	if o != nil && !IsNil(o.IpRangesV2) {
		return true
	}

	return false
}

// SetIpRangesV2 gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetIpRangesV2 and assigns it to the IpRangesV2 field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetIpRangesV2(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetIpRangesV2) {
	o.IpRangesV2 = &v
}

// GetMaxLeaseTimeSecs returns the MaxLeaseTimeSecs field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetMaxLeaseTimeSecs() int32 {
	if o == nil || IsNil(o.MaxLeaseTimeSecs) {
		var ret int32
		return ret
	}
	return *o.MaxLeaseTimeSecs
}

// GetMaxLeaseTimeSecsOk returns a tuple with the MaxLeaseTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetMaxLeaseTimeSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxLeaseTimeSecs) {
		return nil, false
	}
	return o.MaxLeaseTimeSecs, true
}

// HasMaxLeaseTimeSecs returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasMaxLeaseTimeSecs() bool {
	if o != nil && !IsNil(o.MaxLeaseTimeSecs) {
		return true
	}

	return false
}

// SetMaxLeaseTimeSecs gets a reference to the given int32 and assigns it to the MaxLeaseTimeSecs field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetMaxLeaseTimeSecs(v int32) {
	o.MaxLeaseTimeSecs = &v
}

// GetMinLeaseTimeSecs returns the MinLeaseTimeSecs field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetMinLeaseTimeSecs() int32 {
	if o == nil || IsNil(o.MinLeaseTimeSecs) {
		var ret int32
		return ret
	}
	return *o.MinLeaseTimeSecs
}

// GetMinLeaseTimeSecsOk returns a tuple with the MinLeaseTimeSecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetMinLeaseTimeSecsOk() (*int32, bool) {
	if o == nil || IsNil(o.MinLeaseTimeSecs) {
		return nil, false
	}
	return o.MinLeaseTimeSecs, true
}

// HasMinLeaseTimeSecs returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasMinLeaseTimeSecs() bool {
	if o != nil && !IsNil(o.MinLeaseTimeSecs) {
		return true
	}

	return false
}

// SetMinLeaseTimeSecs gets a reference to the given int32 and assigns it to the MinLeaseTimeSecs field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetMinLeaseTimeSecs(v int32) {
	o.MinLeaseTimeSecs = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetName(v string) {
	o.Name = &v
}

// GetStaticLeases returns the StaticLeases field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetStaticLeases() map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetStaticLeasesValue {
	if o == nil || IsNil(o.StaticLeases) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetStaticLeasesValue
		return ret
	}
	return *o.StaticLeases
}

// GetStaticLeasesOk returns a tuple with the StaticLeases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) GetStaticLeasesOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetStaticLeasesValue, bool) {
	if o == nil || IsNil(o.StaticLeases) {
		return nil, false
	}
	return o.StaticLeases, true
}

// HasStaticLeases returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) HasStaticLeases() bool {
	if o != nil && !IsNil(o.StaticLeases) {
		return true
	}

	return false
}

// SetStaticLeases gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetStaticLeasesValue and assigns it to the StaticLeases field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) SetStaticLeases(v map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnetStaticLeasesValue) {
	o.StaticLeases = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultLeaseTimeSecs) {
		toSerialize["defaultLeaseTimeSecs"] = o.DefaultLeaseTimeSecs
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DomainName) {
		toSerialize["domainName"] = o.DomainName
	}
	if !IsNil(o.DomainNameServer) {
		toSerialize["domainNameServer"] = o.DomainNameServer
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !IsNil(o.IpGateway) {
		toSerialize["ipGateway"] = o.IpGateway
	}
	if !IsNil(o.IpPrefix) {
		toSerialize["ipPrefix"] = o.IpPrefix
	}
	if !IsNil(o.IpRanges) {
		toSerialize["ipRanges"] = o.IpRanges
	}
	if !IsNil(o.IpRangesV2) {
		toSerialize["ipRangesV2"] = o.IpRangesV2
	}
	if !IsNil(o.MaxLeaseTimeSecs) {
		toSerialize["maxLeaseTimeSecs"] = o.MaxLeaseTimeSecs
	}
	if !IsNil(o.MinLeaseTimeSecs) {
		toSerialize["minLeaseTimeSecs"] = o.MinLeaseTimeSecs
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StaticLeases) {
		toSerialize["staticLeases"] = o.StaticLeases
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) Get() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) Set(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfDhcpSubnetsValueSubnet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


