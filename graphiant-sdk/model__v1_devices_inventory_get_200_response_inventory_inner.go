/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesInventoryGet200ResponseInventoryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesInventoryGet200ResponseInventoryInner{}

// V1DevicesInventoryGet200ResponseInventoryInner struct for V1DevicesInventoryGet200ResponseInventoryInner
type V1DevicesInventoryGet200ResponseInventoryInner struct {
	AssignedOn *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"assignedOn,omitempty"`
	CreatedOn *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"createdOn,omitempty"`
	DeviceModel *string `json:"deviceModel,omitempty"`
	DeviceSerial *string `json:"deviceSerial,omitempty"`
	EkCert *string `json:"ekCert,omitempty"`
	EnterpriseId *int64 `json:"enterpriseId,omitempty"`
	EnterpriseName *string `json:"enterpriseName,omitempty"`
	GekPub *string `json:"gekPub,omitempty"`
	IsCore *bool `json:"isCore,omitempty"`
	IsNew *bool `json:"isNew,omitempty"`
	IsRequested *bool `json:"isRequested,omitempty"`
	ParentEnterpriseId *int64 `json:"parentEnterpriseId,omitempty"`
	ParentEnterpriseName *string `json:"parentEnterpriseName,omitempty"`
	Role *string `json:"role,omitempty"`
	UseOauth *bool `json:"useOauth,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewV1DevicesInventoryGet200ResponseInventoryInner instantiates a new V1DevicesInventoryGet200ResponseInventoryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesInventoryGet200ResponseInventoryInner() *V1DevicesInventoryGet200ResponseInventoryInner {
	this := V1DevicesInventoryGet200ResponseInventoryInner{}
	return &this
}

// NewV1DevicesInventoryGet200ResponseInventoryInnerWithDefaults instantiates a new V1DevicesInventoryGet200ResponseInventoryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesInventoryGet200ResponseInventoryInnerWithDefaults() *V1DevicesInventoryGet200ResponseInventoryInner {
	this := V1DevicesInventoryGet200ResponseInventoryInner{}
	return &this
}

// GetAssignedOn returns the AssignedOn field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetAssignedOn() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.AssignedOn) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.AssignedOn
}

// GetAssignedOnOk returns a tuple with the AssignedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetAssignedOnOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.AssignedOn) {
		return nil, false
	}
	return o.AssignedOn, true
}

// HasAssignedOn returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasAssignedOn() bool {
	if o != nil && !IsNil(o.AssignedOn) {
		return true
	}

	return false
}

// SetAssignedOn gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the AssignedOn field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetAssignedOn(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.AssignedOn = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetCreatedOn() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.CreatedOn) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetCreatedOnOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the CreatedOn field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetCreatedOn(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.CreatedOn = &v
}

// GetDeviceModel returns the DeviceModel field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetDeviceModel() string {
	if o == nil || IsNil(o.DeviceModel) {
		var ret string
		return ret
	}
	return *o.DeviceModel
}

// GetDeviceModelOk returns a tuple with the DeviceModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetDeviceModelOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceModel) {
		return nil, false
	}
	return o.DeviceModel, true
}

// HasDeviceModel returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasDeviceModel() bool {
	if o != nil && !IsNil(o.DeviceModel) {
		return true
	}

	return false
}

// SetDeviceModel gets a reference to the given string and assigns it to the DeviceModel field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetDeviceModel(v string) {
	o.DeviceModel = &v
}

// GetDeviceSerial returns the DeviceSerial field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetDeviceSerial() string {
	if o == nil || IsNil(o.DeviceSerial) {
		var ret string
		return ret
	}
	return *o.DeviceSerial
}

// GetDeviceSerialOk returns a tuple with the DeviceSerial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetDeviceSerialOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceSerial) {
		return nil, false
	}
	return o.DeviceSerial, true
}

// HasDeviceSerial returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasDeviceSerial() bool {
	if o != nil && !IsNil(o.DeviceSerial) {
		return true
	}

	return false
}

// SetDeviceSerial gets a reference to the given string and assigns it to the DeviceSerial field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetDeviceSerial(v string) {
	o.DeviceSerial = &v
}

// GetEkCert returns the EkCert field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetEkCert() string {
	if o == nil || IsNil(o.EkCert) {
		var ret string
		return ret
	}
	return *o.EkCert
}

// GetEkCertOk returns a tuple with the EkCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetEkCertOk() (*string, bool) {
	if o == nil || IsNil(o.EkCert) {
		return nil, false
	}
	return o.EkCert, true
}

// HasEkCert returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasEkCert() bool {
	if o != nil && !IsNil(o.EkCert) {
		return true
	}

	return false
}

// SetEkCert gets a reference to the given string and assigns it to the EkCert field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetEkCert(v string) {
	o.EkCert = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetEnterpriseId() int64 {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret int64
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given int64 and assigns it to the EnterpriseId field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetEnterpriseId(v int64) {
	o.EnterpriseId = &v
}

// GetEnterpriseName returns the EnterpriseName field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetEnterpriseName() string {
	if o == nil || IsNil(o.EnterpriseName) {
		var ret string
		return ret
	}
	return *o.EnterpriseName
}

// GetEnterpriseNameOk returns a tuple with the EnterpriseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetEnterpriseNameOk() (*string, bool) {
	if o == nil || IsNil(o.EnterpriseName) {
		return nil, false
	}
	return o.EnterpriseName, true
}

// HasEnterpriseName returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasEnterpriseName() bool {
	if o != nil && !IsNil(o.EnterpriseName) {
		return true
	}

	return false
}

// SetEnterpriseName gets a reference to the given string and assigns it to the EnterpriseName field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetEnterpriseName(v string) {
	o.EnterpriseName = &v
}

// GetGekPub returns the GekPub field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetGekPub() string {
	if o == nil || IsNil(o.GekPub) {
		var ret string
		return ret
	}
	return *o.GekPub
}

// GetGekPubOk returns a tuple with the GekPub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetGekPubOk() (*string, bool) {
	if o == nil || IsNil(o.GekPub) {
		return nil, false
	}
	return o.GekPub, true
}

// HasGekPub returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasGekPub() bool {
	if o != nil && !IsNil(o.GekPub) {
		return true
	}

	return false
}

// SetGekPub gets a reference to the given string and assigns it to the GekPub field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetGekPub(v string) {
	o.GekPub = &v
}

// GetIsCore returns the IsCore field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetIsCore() bool {
	if o == nil || IsNil(o.IsCore) {
		var ret bool
		return ret
	}
	return *o.IsCore
}

// GetIsCoreOk returns a tuple with the IsCore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetIsCoreOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCore) {
		return nil, false
	}
	return o.IsCore, true
}

// HasIsCore returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasIsCore() bool {
	if o != nil && !IsNil(o.IsCore) {
		return true
	}

	return false
}

// SetIsCore gets a reference to the given bool and assigns it to the IsCore field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetIsCore(v bool) {
	o.IsCore = &v
}

// GetIsNew returns the IsNew field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetIsNew() bool {
	if o == nil || IsNil(o.IsNew) {
		var ret bool
		return ret
	}
	return *o.IsNew
}

// GetIsNewOk returns a tuple with the IsNew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetIsNewOk() (*bool, bool) {
	if o == nil || IsNil(o.IsNew) {
		return nil, false
	}
	return o.IsNew, true
}

// HasIsNew returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasIsNew() bool {
	if o != nil && !IsNil(o.IsNew) {
		return true
	}

	return false
}

// SetIsNew gets a reference to the given bool and assigns it to the IsNew field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetIsNew(v bool) {
	o.IsNew = &v
}

// GetIsRequested returns the IsRequested field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetIsRequested() bool {
	if o == nil || IsNil(o.IsRequested) {
		var ret bool
		return ret
	}
	return *o.IsRequested
}

// GetIsRequestedOk returns a tuple with the IsRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetIsRequestedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRequested) {
		return nil, false
	}
	return o.IsRequested, true
}

// HasIsRequested returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasIsRequested() bool {
	if o != nil && !IsNil(o.IsRequested) {
		return true
	}

	return false
}

// SetIsRequested gets a reference to the given bool and assigns it to the IsRequested field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetIsRequested(v bool) {
	o.IsRequested = &v
}

// GetParentEnterpriseId returns the ParentEnterpriseId field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetParentEnterpriseId() int64 {
	if o == nil || IsNil(o.ParentEnterpriseId) {
		var ret int64
		return ret
	}
	return *o.ParentEnterpriseId
}

// GetParentEnterpriseIdOk returns a tuple with the ParentEnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetParentEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ParentEnterpriseId) {
		return nil, false
	}
	return o.ParentEnterpriseId, true
}

// HasParentEnterpriseId returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasParentEnterpriseId() bool {
	if o != nil && !IsNil(o.ParentEnterpriseId) {
		return true
	}

	return false
}

// SetParentEnterpriseId gets a reference to the given int64 and assigns it to the ParentEnterpriseId field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetParentEnterpriseId(v int64) {
	o.ParentEnterpriseId = &v
}

// GetParentEnterpriseName returns the ParentEnterpriseName field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetParentEnterpriseName() string {
	if o == nil || IsNil(o.ParentEnterpriseName) {
		var ret string
		return ret
	}
	return *o.ParentEnterpriseName
}

// GetParentEnterpriseNameOk returns a tuple with the ParentEnterpriseName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetParentEnterpriseNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentEnterpriseName) {
		return nil, false
	}
	return o.ParentEnterpriseName, true
}

// HasParentEnterpriseName returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasParentEnterpriseName() bool {
	if o != nil && !IsNil(o.ParentEnterpriseName) {
		return true
	}

	return false
}

// SetParentEnterpriseName gets a reference to the given string and assigns it to the ParentEnterpriseName field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetParentEnterpriseName(v string) {
	o.ParentEnterpriseName = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetRole(v string) {
	o.Role = &v
}

// GetUseOauth returns the UseOauth field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetUseOauth() bool {
	if o == nil || IsNil(o.UseOauth) {
		var ret bool
		return ret
	}
	return *o.UseOauth
}

// GetUseOauthOk returns a tuple with the UseOauth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetUseOauthOk() (*bool, bool) {
	if o == nil || IsNil(o.UseOauth) {
		return nil, false
	}
	return o.UseOauth, true
}

// HasUseOauth returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasUseOauth() bool {
	if o != nil && !IsNil(o.UseOauth) {
		return true
	}

	return false
}

// SetUseOauth gets a reference to the given bool and assigns it to the UseOauth field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetUseOauth(v bool) {
	o.UseOauth = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *V1DevicesInventoryGet200ResponseInventoryInner) SetUuid(v string) {
	o.Uuid = &v
}

func (o V1DevicesInventoryGet200ResponseInventoryInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesInventoryGet200ResponseInventoryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssignedOn) {
		toSerialize["assignedOn"] = o.AssignedOn
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if !IsNil(o.DeviceModel) {
		toSerialize["deviceModel"] = o.DeviceModel
	}
	if !IsNil(o.DeviceSerial) {
		toSerialize["deviceSerial"] = o.DeviceSerial
	}
	if !IsNil(o.EkCert) {
		toSerialize["ekCert"] = o.EkCert
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterpriseId"] = o.EnterpriseId
	}
	if !IsNil(o.EnterpriseName) {
		toSerialize["enterpriseName"] = o.EnterpriseName
	}
	if !IsNil(o.GekPub) {
		toSerialize["gekPub"] = o.GekPub
	}
	if !IsNil(o.IsCore) {
		toSerialize["isCore"] = o.IsCore
	}
	if !IsNil(o.IsNew) {
		toSerialize["isNew"] = o.IsNew
	}
	if !IsNil(o.IsRequested) {
		toSerialize["isRequested"] = o.IsRequested
	}
	if !IsNil(o.ParentEnterpriseId) {
		toSerialize["parentEnterpriseId"] = o.ParentEnterpriseId
	}
	if !IsNil(o.ParentEnterpriseName) {
		toSerialize["parentEnterpriseName"] = o.ParentEnterpriseName
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.UseOauth) {
		toSerialize["useOauth"] = o.UseOauth
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

type NullableV1DevicesInventoryGet200ResponseInventoryInner struct {
	value *V1DevicesInventoryGet200ResponseInventoryInner
	isSet bool
}

func (v NullableV1DevicesInventoryGet200ResponseInventoryInner) Get() *V1DevicesInventoryGet200ResponseInventoryInner {
	return v.value
}

func (v *NullableV1DevicesInventoryGet200ResponseInventoryInner) Set(val *V1DevicesInventoryGet200ResponseInventoryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesInventoryGet200ResponseInventoryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesInventoryGet200ResponseInventoryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesInventoryGet200ResponseInventoryInner(val *V1DevicesInventoryGet200ResponseInventoryInner) *NullableV1DevicesInventoryGet200ResponseInventoryInner {
	return &NullableV1DevicesInventoryGet200ResponseInventoryInner{value: val, isSet: true}
}

func (v NullableV1DevicesInventoryGet200ResponseInventoryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesInventoryGet200ResponseInventoryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


