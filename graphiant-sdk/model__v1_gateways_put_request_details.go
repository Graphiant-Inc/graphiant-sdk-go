/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GatewaysPutRequestDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GatewaysPutRequestDetails{}

// V1GatewaysPutRequestDetails struct for V1GatewaysPutRequestDetails
type V1GatewaysPutRequestDetails struct {
	Aws *V1GatewaysPutRequestDetailsAws `json:"aws,omitempty"`
	Azure *V1GatewaysPutRequestDetailsAzure `json:"azure,omitempty"`
	Description *string `json:"description,omitempty"`
	Gcp *V1GatewaysPutRequestDetailsGcp `json:"gcp,omitempty"`
	IpsecGateway *V1GatewaysPutRequestDetailsIpsecGateway `json:"ipsecGateway,omitempty"`
	Oci *V1GatewaysPutRequestDetailsOci `json:"oci,omitempty"`
	RegionId *int32 `json:"regionId,omitempty"`
	Speed *string `json:"speed,omitempty"`
	VrfId *int64 `json:"vrfId,omitempty"`
}

// NewV1GatewaysPutRequestDetails instantiates a new V1GatewaysPutRequestDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GatewaysPutRequestDetails() *V1GatewaysPutRequestDetails {
	this := V1GatewaysPutRequestDetails{}
	return &this
}

// NewV1GatewaysPutRequestDetailsWithDefaults instantiates a new V1GatewaysPutRequestDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GatewaysPutRequestDetailsWithDefaults() *V1GatewaysPutRequestDetails {
	this := V1GatewaysPutRequestDetails{}
	return &this
}

// GetAws returns the Aws field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetails) GetAws() V1GatewaysPutRequestDetailsAws {
	if o == nil || IsNil(o.Aws) {
		var ret V1GatewaysPutRequestDetailsAws
		return ret
	}
	return *o.Aws
}

// GetAwsOk returns a tuple with the Aws field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetails) GetAwsOk() (*V1GatewaysPutRequestDetailsAws, bool) {
	if o == nil || IsNil(o.Aws) {
		return nil, false
	}
	return o.Aws, true
}

// HasAws returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetails) HasAws() bool {
	if o != nil && !IsNil(o.Aws) {
		return true
	}

	return false
}

// SetAws gets a reference to the given V1GatewaysPutRequestDetailsAws and assigns it to the Aws field.
func (o *V1GatewaysPutRequestDetails) SetAws(v V1GatewaysPutRequestDetailsAws) {
	o.Aws = &v
}

// GetAzure returns the Azure field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetails) GetAzure() V1GatewaysPutRequestDetailsAzure {
	if o == nil || IsNil(o.Azure) {
		var ret V1GatewaysPutRequestDetailsAzure
		return ret
	}
	return *o.Azure
}

// GetAzureOk returns a tuple with the Azure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetails) GetAzureOk() (*V1GatewaysPutRequestDetailsAzure, bool) {
	if o == nil || IsNil(o.Azure) {
		return nil, false
	}
	return o.Azure, true
}

// HasAzure returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetails) HasAzure() bool {
	if o != nil && !IsNil(o.Azure) {
		return true
	}

	return false
}

// SetAzure gets a reference to the given V1GatewaysPutRequestDetailsAzure and assigns it to the Azure field.
func (o *V1GatewaysPutRequestDetails) SetAzure(v V1GatewaysPutRequestDetailsAzure) {
	o.Azure = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetails) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetails) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetails) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1GatewaysPutRequestDetails) SetDescription(v string) {
	o.Description = &v
}

// GetGcp returns the Gcp field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetails) GetGcp() V1GatewaysPutRequestDetailsGcp {
	if o == nil || IsNil(o.Gcp) {
		var ret V1GatewaysPutRequestDetailsGcp
		return ret
	}
	return *o.Gcp
}

// GetGcpOk returns a tuple with the Gcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetails) GetGcpOk() (*V1GatewaysPutRequestDetailsGcp, bool) {
	if o == nil || IsNil(o.Gcp) {
		return nil, false
	}
	return o.Gcp, true
}

// HasGcp returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetails) HasGcp() bool {
	if o != nil && !IsNil(o.Gcp) {
		return true
	}

	return false
}

// SetGcp gets a reference to the given V1GatewaysPutRequestDetailsGcp and assigns it to the Gcp field.
func (o *V1GatewaysPutRequestDetails) SetGcp(v V1GatewaysPutRequestDetailsGcp) {
	o.Gcp = &v
}

// GetIpsecGateway returns the IpsecGateway field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetails) GetIpsecGateway() V1GatewaysPutRequestDetailsIpsecGateway {
	if o == nil || IsNil(o.IpsecGateway) {
		var ret V1GatewaysPutRequestDetailsIpsecGateway
		return ret
	}
	return *o.IpsecGateway
}

// GetIpsecGatewayOk returns a tuple with the IpsecGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetails) GetIpsecGatewayOk() (*V1GatewaysPutRequestDetailsIpsecGateway, bool) {
	if o == nil || IsNil(o.IpsecGateway) {
		return nil, false
	}
	return o.IpsecGateway, true
}

// HasIpsecGateway returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetails) HasIpsecGateway() bool {
	if o != nil && !IsNil(o.IpsecGateway) {
		return true
	}

	return false
}

// SetIpsecGateway gets a reference to the given V1GatewaysPutRequestDetailsIpsecGateway and assigns it to the IpsecGateway field.
func (o *V1GatewaysPutRequestDetails) SetIpsecGateway(v V1GatewaysPutRequestDetailsIpsecGateway) {
	o.IpsecGateway = &v
}

// GetOci returns the Oci field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetails) GetOci() V1GatewaysPutRequestDetailsOci {
	if o == nil || IsNil(o.Oci) {
		var ret V1GatewaysPutRequestDetailsOci
		return ret
	}
	return *o.Oci
}

// GetOciOk returns a tuple with the Oci field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetails) GetOciOk() (*V1GatewaysPutRequestDetailsOci, bool) {
	if o == nil || IsNil(o.Oci) {
		return nil, false
	}
	return o.Oci, true
}

// HasOci returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetails) HasOci() bool {
	if o != nil && !IsNil(o.Oci) {
		return true
	}

	return false
}

// SetOci gets a reference to the given V1GatewaysPutRequestDetailsOci and assigns it to the Oci field.
func (o *V1GatewaysPutRequestDetails) SetOci(v V1GatewaysPutRequestDetailsOci) {
	o.Oci = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetails) GetRegionId() int32 {
	if o == nil || IsNil(o.RegionId) {
		var ret int32
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetails) GetRegionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RegionId) {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetails) HasRegionId() bool {
	if o != nil && !IsNil(o.RegionId) {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given int32 and assigns it to the RegionId field.
func (o *V1GatewaysPutRequestDetails) SetRegionId(v int32) {
	o.RegionId = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetails) GetSpeed() string {
	if o == nil || IsNil(o.Speed) {
		var ret string
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetails) GetSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetails) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given string and assigns it to the Speed field.
func (o *V1GatewaysPutRequestDetails) SetSpeed(v string) {
	o.Speed = &v
}

// GetVrfId returns the VrfId field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetails) GetVrfId() int64 {
	if o == nil || IsNil(o.VrfId) {
		var ret int64
		return ret
	}
	return *o.VrfId
}

// GetVrfIdOk returns a tuple with the VrfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetails) GetVrfIdOk() (*int64, bool) {
	if o == nil || IsNil(o.VrfId) {
		return nil, false
	}
	return o.VrfId, true
}

// HasVrfId returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetails) HasVrfId() bool {
	if o != nil && !IsNil(o.VrfId) {
		return true
	}

	return false
}

// SetVrfId gets a reference to the given int64 and assigns it to the VrfId field.
func (o *V1GatewaysPutRequestDetails) SetVrfId(v int64) {
	o.VrfId = &v
}

func (o V1GatewaysPutRequestDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GatewaysPutRequestDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aws) {
		toSerialize["aws"] = o.Aws
	}
	if !IsNil(o.Azure) {
		toSerialize["azure"] = o.Azure
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Gcp) {
		toSerialize["gcp"] = o.Gcp
	}
	if !IsNil(o.IpsecGateway) {
		toSerialize["ipsecGateway"] = o.IpsecGateway
	}
	if !IsNil(o.Oci) {
		toSerialize["oci"] = o.Oci
	}
	if !IsNil(o.RegionId) {
		toSerialize["regionId"] = o.RegionId
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.VrfId) {
		toSerialize["vrfId"] = o.VrfId
	}
	return toSerialize, nil
}

type NullableV1GatewaysPutRequestDetails struct {
	value *V1GatewaysPutRequestDetails
	isSet bool
}

func (v NullableV1GatewaysPutRequestDetails) Get() *V1GatewaysPutRequestDetails {
	return v.value
}

func (v *NullableV1GatewaysPutRequestDetails) Set(val *V1GatewaysPutRequestDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GatewaysPutRequestDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GatewaysPutRequestDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GatewaysPutRequestDetails(val *V1GatewaysPutRequestDetails) *NullableV1GatewaysPutRequestDetails {
	return &NullableV1GatewaysPutRequestDetails{value: val, isSet: true}
}

func (v NullableV1GatewaysPutRequestDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GatewaysPutRequestDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


