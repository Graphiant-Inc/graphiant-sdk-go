/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane{}

// V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane struct for V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane
type V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane struct {
	SiteCounts []V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlaneSiteCountsInner `json:"siteCounts,omitempty"`
}

// NewV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane instantiates a new V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane() *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane {
	this := V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane{}
	return &this
}

// NewV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlaneWithDefaults instantiates a new V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlaneWithDefaults() *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane {
	this := V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane{}
	return &this
}

// GetSiteCounts returns the SiteCounts field value if set, zero value otherwise.
func (o *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) GetSiteCounts() []V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlaneSiteCountsInner {
	if o == nil || IsNil(o.SiteCounts) {
		var ret []V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlaneSiteCountsInner
		return ret
	}
	return o.SiteCounts
}

// GetSiteCountsOk returns a tuple with the SiteCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) GetSiteCountsOk() ([]V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlaneSiteCountsInner, bool) {
	if o == nil || IsNil(o.SiteCounts) {
		return nil, false
	}
	return o.SiteCounts, true
}

// HasSiteCounts returns a boolean if a field has been set.
func (o *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) HasSiteCounts() bool {
	if o != nil && !IsNil(o.SiteCounts) {
		return true
	}

	return false
}

// SetSiteCounts gets a reference to the given []V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlaneSiteCountsInner and assigns it to the SiteCounts field.
func (o *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) SetSiteCounts(v []V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlaneSiteCountsInner) {
	o.SiteCounts = v
}

func (o V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SiteCounts) {
		toSerialize["siteCounts"] = o.SiteCounts
	}
	return toSerialize, nil
}

type NullableV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane struct {
	value *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane
	isSet bool
}

func (v NullableV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) Get() *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane {
	return v.value
}

func (v *NullableV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) Set(val *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane(val *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) *NullableV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane {
	return &NullableV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane{value: val, isSet: true}
}

func (v NullableV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


