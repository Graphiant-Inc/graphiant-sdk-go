/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane{}

// V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane struct for V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane
type V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane struct {
	ControlTransitions []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner `json:"controlTransitions,omitempty"`
	ManagementTransitions []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner `json:"managementTransitions,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane instantiates a new V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane() *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane {
	this := V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane{}
	return &this
}

// NewV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlaneWithDefaults instantiates a new V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlaneWithDefaults() *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane {
	this := V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane{}
	return &this
}

// GetControlTransitions returns the ControlTransitions field value if set, zero value otherwise.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) GetControlTransitions() []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner {
	if o == nil || IsNil(o.ControlTransitions) {
		var ret []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner
		return ret
	}
	return o.ControlTransitions
}

// GetControlTransitionsOk returns a tuple with the ControlTransitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) GetControlTransitionsOk() ([]V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner, bool) {
	if o == nil || IsNil(o.ControlTransitions) {
		return nil, false
	}
	return o.ControlTransitions, true
}

// HasControlTransitions returns a boolean if a field has been set.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) HasControlTransitions() bool {
	if o != nil && !IsNil(o.ControlTransitions) {
		return true
	}

	return false
}

// SetControlTransitions gets a reference to the given []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner and assigns it to the ControlTransitions field.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) SetControlTransitions(v []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner) {
	o.ControlTransitions = v
}

// GetManagementTransitions returns the ManagementTransitions field value if set, zero value otherwise.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) GetManagementTransitions() []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner {
	if o == nil || IsNil(o.ManagementTransitions) {
		var ret []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner
		return ret
	}
	return o.ManagementTransitions
}

// GetManagementTransitionsOk returns a tuple with the ManagementTransitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) GetManagementTransitionsOk() ([]V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner, bool) {
	if o == nil || IsNil(o.ManagementTransitions) {
		return nil, false
	}
	return o.ManagementTransitions, true
}

// HasManagementTransitions returns a boolean if a field has been set.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) HasManagementTransitions() bool {
	if o != nil && !IsNil(o.ManagementTransitions) {
		return true
	}

	return false
}

// SetManagementTransitions gets a reference to the given []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner and assigns it to the ManagementTransitions field.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) SetManagementTransitions(v []V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlaneControlTransitionsTransitionsInner) {
	o.ManagementTransitions = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) SetStatus(v string) {
	o.Status = &v
}

func (o V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ControlTransitions) {
		toSerialize["controlTransitions"] = o.ControlTransitions
	}
	if !IsNil(o.ManagementTransitions) {
		toSerialize["managementTransitions"] = o.ManagementTransitions
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane struct {
	value *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane
	isSet bool
}

func (v NullableV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) Get() *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane {
	return v.value
}

func (v *NullableV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) Set(val *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane(val *V1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) *NullableV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane {
	return &NullableV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane{value: val, isSet: true}
}

func (v NullableV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TroubleshootingDeviceDeviceIdPost200ResponseControlPlane) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


