/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1BackboneHealthDeviceDeviceIdPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BackboneHealthDeviceDeviceIdPost200Response{}

// V1BackboneHealthDeviceDeviceIdPost200Response struct for V1BackboneHealthDeviceDeviceIdPost200Response
type V1BackboneHealthDeviceDeviceIdPost200Response struct {
	ControlPlane *V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane `json:"controlPlane,omitempty"`
	DataPlane *V1BackboneHealthDeviceDeviceIdPost200ResponseDataPlane `json:"dataPlane,omitempty"`
	Issues []V1BackboneHealthDeviceDeviceIdPost200ResponseIssuesInner `json:"issues,omitempty"`
	QoeMatrix *V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrix `json:"qoeMatrix,omitempty"`
	Role *string `json:"role,omitempty"`
	Status *string `json:"status,omitempty"`
	SwVersion *string `json:"swVersion,omitempty"`
	SwVersionV2 *V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion `json:"swVersionV2,omitempty"`
	SystemPlane *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane `json:"systemPlane,omitempty"`
	UpSinceTs *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"upSinceTs,omitempty"`
}

// NewV1BackboneHealthDeviceDeviceIdPost200Response instantiates a new V1BackboneHealthDeviceDeviceIdPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BackboneHealthDeviceDeviceIdPost200Response() *V1BackboneHealthDeviceDeviceIdPost200Response {
	this := V1BackboneHealthDeviceDeviceIdPost200Response{}
	return &this
}

// NewV1BackboneHealthDeviceDeviceIdPost200ResponseWithDefaults instantiates a new V1BackboneHealthDeviceDeviceIdPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BackboneHealthDeviceDeviceIdPost200ResponseWithDefaults() *V1BackboneHealthDeviceDeviceIdPost200Response {
	this := V1BackboneHealthDeviceDeviceIdPost200Response{}
	return &this
}

// GetControlPlane returns the ControlPlane field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetControlPlane() V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane {
	if o == nil || IsNil(o.ControlPlane) {
		var ret V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane
		return ret
	}
	return *o.ControlPlane
}

// GetControlPlaneOk returns a tuple with the ControlPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetControlPlaneOk() (*V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane, bool) {
	if o == nil || IsNil(o.ControlPlane) {
		return nil, false
	}
	return o.ControlPlane, true
}

// HasControlPlane returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) HasControlPlane() bool {
	if o != nil && !IsNil(o.ControlPlane) {
		return true
	}

	return false
}

// SetControlPlane gets a reference to the given V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane and assigns it to the ControlPlane field.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) SetControlPlane(v V1BackboneHealthDeviceDeviceIdPost200ResponseControlPlane) {
	o.ControlPlane = &v
}

// GetDataPlane returns the DataPlane field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetDataPlane() V1BackboneHealthDeviceDeviceIdPost200ResponseDataPlane {
	if o == nil || IsNil(o.DataPlane) {
		var ret V1BackboneHealthDeviceDeviceIdPost200ResponseDataPlane
		return ret
	}
	return *o.DataPlane
}

// GetDataPlaneOk returns a tuple with the DataPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetDataPlaneOk() (*V1BackboneHealthDeviceDeviceIdPost200ResponseDataPlane, bool) {
	if o == nil || IsNil(o.DataPlane) {
		return nil, false
	}
	return o.DataPlane, true
}

// HasDataPlane returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) HasDataPlane() bool {
	if o != nil && !IsNil(o.DataPlane) {
		return true
	}

	return false
}

// SetDataPlane gets a reference to the given V1BackboneHealthDeviceDeviceIdPost200ResponseDataPlane and assigns it to the DataPlane field.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) SetDataPlane(v V1BackboneHealthDeviceDeviceIdPost200ResponseDataPlane) {
	o.DataPlane = &v
}

// GetIssues returns the Issues field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetIssues() []V1BackboneHealthDeviceDeviceIdPost200ResponseIssuesInner {
	if o == nil || IsNil(o.Issues) {
		var ret []V1BackboneHealthDeviceDeviceIdPost200ResponseIssuesInner
		return ret
	}
	return o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetIssuesOk() ([]V1BackboneHealthDeviceDeviceIdPost200ResponseIssuesInner, bool) {
	if o == nil || IsNil(o.Issues) {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) HasIssues() bool {
	if o != nil && !IsNil(o.Issues) {
		return true
	}

	return false
}

// SetIssues gets a reference to the given []V1BackboneHealthDeviceDeviceIdPost200ResponseIssuesInner and assigns it to the Issues field.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) SetIssues(v []V1BackboneHealthDeviceDeviceIdPost200ResponseIssuesInner) {
	o.Issues = v
}

// GetQoeMatrix returns the QoeMatrix field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetQoeMatrix() V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrix {
	if o == nil || IsNil(o.QoeMatrix) {
		var ret V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrix
		return ret
	}
	return *o.QoeMatrix
}

// GetQoeMatrixOk returns a tuple with the QoeMatrix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetQoeMatrixOk() (*V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrix, bool) {
	if o == nil || IsNil(o.QoeMatrix) {
		return nil, false
	}
	return o.QoeMatrix, true
}

// HasQoeMatrix returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) HasQoeMatrix() bool {
	if o != nil && !IsNil(o.QoeMatrix) {
		return true
	}

	return false
}

// SetQoeMatrix gets a reference to the given V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrix and assigns it to the QoeMatrix field.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) SetQoeMatrix(v V1BackboneHealthDeviceDeviceIdPost200ResponseQoeMatrix) {
	o.QoeMatrix = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) SetRole(v string) {
	o.Role = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) SetStatus(v string) {
	o.Status = &v
}

// GetSwVersion returns the SwVersion field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetSwVersion() string {
	if o == nil || IsNil(o.SwVersion) {
		var ret string
		return ret
	}
	return *o.SwVersion
}

// GetSwVersionOk returns a tuple with the SwVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetSwVersionOk() (*string, bool) {
	if o == nil || IsNil(o.SwVersion) {
		return nil, false
	}
	return o.SwVersion, true
}

// HasSwVersion returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) HasSwVersion() bool {
	if o != nil && !IsNil(o.SwVersion) {
		return true
	}

	return false
}

// SetSwVersion gets a reference to the given string and assigns it to the SwVersion field.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) SetSwVersion(v string) {
	o.SwVersion = &v
}

// GetSwVersionV2 returns the SwVersionV2 field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetSwVersionV2() V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion {
	if o == nil || IsNil(o.SwVersionV2) {
		var ret V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion
		return ret
	}
	return *o.SwVersionV2
}

// GetSwVersionV2Ok returns a tuple with the SwVersionV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetSwVersionV2Ok() (*V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion, bool) {
	if o == nil || IsNil(o.SwVersionV2) {
		return nil, false
	}
	return o.SwVersionV2, true
}

// HasSwVersionV2 returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) HasSwVersionV2() bool {
	if o != nil && !IsNil(o.SwVersionV2) {
		return true
	}

	return false
}

// SetSwVersionV2 gets a reference to the given V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion and assigns it to the SwVersionV2 field.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) SetSwVersionV2(v V1EdgesHardwareAssignedGet200ResponseEdgesSummaryInnerUpgradeSummaryRunningVersion) {
	o.SwVersionV2 = &v
}

// GetSystemPlane returns the SystemPlane field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetSystemPlane() V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane {
	if o == nil || IsNil(o.SystemPlane) {
		var ret V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane
		return ret
	}
	return *o.SystemPlane
}

// GetSystemPlaneOk returns a tuple with the SystemPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetSystemPlaneOk() (*V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane, bool) {
	if o == nil || IsNil(o.SystemPlane) {
		return nil, false
	}
	return o.SystemPlane, true
}

// HasSystemPlane returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) HasSystemPlane() bool {
	if o != nil && !IsNil(o.SystemPlane) {
		return true
	}

	return false
}

// SetSystemPlane gets a reference to the given V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane and assigns it to the SystemPlane field.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) SetSystemPlane(v V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlane) {
	o.SystemPlane = &v
}

// GetUpSinceTs returns the UpSinceTs field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetUpSinceTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.UpSinceTs) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.UpSinceTs
}

// GetUpSinceTsOk returns a tuple with the UpSinceTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) GetUpSinceTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.UpSinceTs) {
		return nil, false
	}
	return o.UpSinceTs, true
}

// HasUpSinceTs returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) HasUpSinceTs() bool {
	if o != nil && !IsNil(o.UpSinceTs) {
		return true
	}

	return false
}

// SetUpSinceTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the UpSinceTs field.
func (o *V1BackboneHealthDeviceDeviceIdPost200Response) SetUpSinceTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.UpSinceTs = &v
}

func (o V1BackboneHealthDeviceDeviceIdPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BackboneHealthDeviceDeviceIdPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ControlPlane) {
		toSerialize["controlPlane"] = o.ControlPlane
	}
	if !IsNil(o.DataPlane) {
		toSerialize["dataPlane"] = o.DataPlane
	}
	if !IsNil(o.Issues) {
		toSerialize["issues"] = o.Issues
	}
	if !IsNil(o.QoeMatrix) {
		toSerialize["qoeMatrix"] = o.QoeMatrix
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SwVersion) {
		toSerialize["swVersion"] = o.SwVersion
	}
	if !IsNil(o.SwVersionV2) {
		toSerialize["swVersionV2"] = o.SwVersionV2
	}
	if !IsNil(o.SystemPlane) {
		toSerialize["systemPlane"] = o.SystemPlane
	}
	if !IsNil(o.UpSinceTs) {
		toSerialize["upSinceTs"] = o.UpSinceTs
	}
	return toSerialize, nil
}

type NullableV1BackboneHealthDeviceDeviceIdPost200Response struct {
	value *V1BackboneHealthDeviceDeviceIdPost200Response
	isSet bool
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200Response) Get() *V1BackboneHealthDeviceDeviceIdPost200Response {
	return v.value
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200Response) Set(val *V1BackboneHealthDeviceDeviceIdPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BackboneHealthDeviceDeviceIdPost200Response(val *V1BackboneHealthDeviceDeviceIdPost200Response) *NullableV1BackboneHealthDeviceDeviceIdPost200Response {
	return &NullableV1BackboneHealthDeviceDeviceIdPost200Response{value: val, isSet: true}
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


