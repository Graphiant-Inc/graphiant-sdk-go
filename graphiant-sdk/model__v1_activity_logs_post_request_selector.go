/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1ActivityLogsPostRequestSelector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ActivityLogsPostRequestSelector{}

// V1ActivityLogsPostRequestSelector struct for V1ActivityLogsPostRequestSelector
type V1ActivityLogsPostRequestSelector struct {
	DeviceIds []int64 `json:"deviceIds,omitempty"`
	Id *string `json:"id,omitempty"`
	InProgress *bool `json:"inProgress,omitempty"`
	JobEntity *V1ActivityLogsPostRequestSelectorJobEntity `json:"jobEntity,omitempty"`
	TargetIds []V1ActivityLogsPostRequestSelectorJobEntity `json:"targetIds,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewV1ActivityLogsPostRequestSelector instantiates a new V1ActivityLogsPostRequestSelector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ActivityLogsPostRequestSelector() *V1ActivityLogsPostRequestSelector {
	this := V1ActivityLogsPostRequestSelector{}
	return &this
}

// NewV1ActivityLogsPostRequestSelectorWithDefaults instantiates a new V1ActivityLogsPostRequestSelector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ActivityLogsPostRequestSelectorWithDefaults() *V1ActivityLogsPostRequestSelector {
	this := V1ActivityLogsPostRequestSelector{}
	return &this
}

// GetDeviceIds returns the DeviceIds field value if set, zero value otherwise.
func (o *V1ActivityLogsPostRequestSelector) GetDeviceIds() []int64 {
	if o == nil || IsNil(o.DeviceIds) {
		var ret []int64
		return ret
	}
	return o.DeviceIds
}

// GetDeviceIdsOk returns a tuple with the DeviceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPostRequestSelector) GetDeviceIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.DeviceIds) {
		return nil, false
	}
	return o.DeviceIds, true
}

// HasDeviceIds returns a boolean if a field has been set.
func (o *V1ActivityLogsPostRequestSelector) HasDeviceIds() bool {
	if o != nil && !IsNil(o.DeviceIds) {
		return true
	}

	return false
}

// SetDeviceIds gets a reference to the given []int64 and assigns it to the DeviceIds field.
func (o *V1ActivityLogsPostRequestSelector) SetDeviceIds(v []int64) {
	o.DeviceIds = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1ActivityLogsPostRequestSelector) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPostRequestSelector) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1ActivityLogsPostRequestSelector) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1ActivityLogsPostRequestSelector) SetId(v string) {
	o.Id = &v
}

// GetInProgress returns the InProgress field value if set, zero value otherwise.
func (o *V1ActivityLogsPostRequestSelector) GetInProgress() bool {
	if o == nil || IsNil(o.InProgress) {
		var ret bool
		return ret
	}
	return *o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPostRequestSelector) GetInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.InProgress) {
		return nil, false
	}
	return o.InProgress, true
}

// HasInProgress returns a boolean if a field has been set.
func (o *V1ActivityLogsPostRequestSelector) HasInProgress() bool {
	if o != nil && !IsNil(o.InProgress) {
		return true
	}

	return false
}

// SetInProgress gets a reference to the given bool and assigns it to the InProgress field.
func (o *V1ActivityLogsPostRequestSelector) SetInProgress(v bool) {
	o.InProgress = &v
}

// GetJobEntity returns the JobEntity field value if set, zero value otherwise.
func (o *V1ActivityLogsPostRequestSelector) GetJobEntity() V1ActivityLogsPostRequestSelectorJobEntity {
	if o == nil || IsNil(o.JobEntity) {
		var ret V1ActivityLogsPostRequestSelectorJobEntity
		return ret
	}
	return *o.JobEntity
}

// GetJobEntityOk returns a tuple with the JobEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPostRequestSelector) GetJobEntityOk() (*V1ActivityLogsPostRequestSelectorJobEntity, bool) {
	if o == nil || IsNil(o.JobEntity) {
		return nil, false
	}
	return o.JobEntity, true
}

// HasJobEntity returns a boolean if a field has been set.
func (o *V1ActivityLogsPostRequestSelector) HasJobEntity() bool {
	if o != nil && !IsNil(o.JobEntity) {
		return true
	}

	return false
}

// SetJobEntity gets a reference to the given V1ActivityLogsPostRequestSelectorJobEntity and assigns it to the JobEntity field.
func (o *V1ActivityLogsPostRequestSelector) SetJobEntity(v V1ActivityLogsPostRequestSelectorJobEntity) {
	o.JobEntity = &v
}

// GetTargetIds returns the TargetIds field value if set, zero value otherwise.
func (o *V1ActivityLogsPostRequestSelector) GetTargetIds() []V1ActivityLogsPostRequestSelectorJobEntity {
	if o == nil || IsNil(o.TargetIds) {
		var ret []V1ActivityLogsPostRequestSelectorJobEntity
		return ret
	}
	return o.TargetIds
}

// GetTargetIdsOk returns a tuple with the TargetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPostRequestSelector) GetTargetIdsOk() ([]V1ActivityLogsPostRequestSelectorJobEntity, bool) {
	if o == nil || IsNil(o.TargetIds) {
		return nil, false
	}
	return o.TargetIds, true
}

// HasTargetIds returns a boolean if a field has been set.
func (o *V1ActivityLogsPostRequestSelector) HasTargetIds() bool {
	if o != nil && !IsNil(o.TargetIds) {
		return true
	}

	return false
}

// SetTargetIds gets a reference to the given []V1ActivityLogsPostRequestSelectorJobEntity and assigns it to the TargetIds field.
func (o *V1ActivityLogsPostRequestSelector) SetTargetIds(v []V1ActivityLogsPostRequestSelectorJobEntity) {
	o.TargetIds = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1ActivityLogsPostRequestSelector) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ActivityLogsPostRequestSelector) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1ActivityLogsPostRequestSelector) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V1ActivityLogsPostRequestSelector) SetType(v string) {
	o.Type = &v
}

func (o V1ActivityLogsPostRequestSelector) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ActivityLogsPostRequestSelector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceIds) {
		toSerialize["deviceIds"] = o.DeviceIds
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InProgress) {
		toSerialize["inProgress"] = o.InProgress
	}
	if !IsNil(o.JobEntity) {
		toSerialize["jobEntity"] = o.JobEntity
	}
	if !IsNil(o.TargetIds) {
		toSerialize["targetIds"] = o.TargetIds
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV1ActivityLogsPostRequestSelector struct {
	value *V1ActivityLogsPostRequestSelector
	isSet bool
}

func (v NullableV1ActivityLogsPostRequestSelector) Get() *V1ActivityLogsPostRequestSelector {
	return v.value
}

func (v *NullableV1ActivityLogsPostRequestSelector) Set(val *V1ActivityLogsPostRequestSelector) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ActivityLogsPostRequestSelector) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ActivityLogsPostRequestSelector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ActivityLogsPostRequestSelector(val *V1ActivityLogsPostRequestSelector) *NullableV1ActivityLogsPostRequestSelector {
	return &NullableV1ActivityLogsPostRequestSelector{value: val, isSet: true}
}

func (v NullableV1ActivityLogsPostRequestSelector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ActivityLogsPostRequestSelector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


