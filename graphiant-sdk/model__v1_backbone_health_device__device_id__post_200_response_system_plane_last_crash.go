/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash{}

// V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash struct for V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash
type V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash struct {
	CrashDetails *string `json:"crashDetails,omitempty"`
	Reason *string `json:"reason,omitempty"`
	UpSinceTs *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"upSinceTs,omitempty"`
}

// NewV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash instantiates a new V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash() *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash {
	this := V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash{}
	return &this
}

// NewV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrashWithDefaults instantiates a new V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrashWithDefaults() *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash {
	this := V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash{}
	return &this
}

// GetCrashDetails returns the CrashDetails field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) GetCrashDetails() string {
	if o == nil || IsNil(o.CrashDetails) {
		var ret string
		return ret
	}
	return *o.CrashDetails
}

// GetCrashDetailsOk returns a tuple with the CrashDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) GetCrashDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.CrashDetails) {
		return nil, false
	}
	return o.CrashDetails, true
}

// HasCrashDetails returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) HasCrashDetails() bool {
	if o != nil && !IsNil(o.CrashDetails) {
		return true
	}

	return false
}

// SetCrashDetails gets a reference to the given string and assigns it to the CrashDetails field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) SetCrashDetails(v string) {
	o.CrashDetails = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) SetReason(v string) {
	o.Reason = &v
}

// GetUpSinceTs returns the UpSinceTs field value if set, zero value otherwise.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) GetUpSinceTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.UpSinceTs) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.UpSinceTs
}

// GetUpSinceTsOk returns a tuple with the UpSinceTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) GetUpSinceTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.UpSinceTs) {
		return nil, false
	}
	return o.UpSinceTs, true
}

// HasUpSinceTs returns a boolean if a field has been set.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) HasUpSinceTs() bool {
	if o != nil && !IsNil(o.UpSinceTs) {
		return true
	}

	return false
}

// SetUpSinceTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the UpSinceTs field.
func (o *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) SetUpSinceTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.UpSinceTs = &v
}

func (o V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CrashDetails) {
		toSerialize["crashDetails"] = o.CrashDetails
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.UpSinceTs) {
		toSerialize["upSinceTs"] = o.UpSinceTs
	}
	return toSerialize, nil
}

type NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash struct {
	value *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash
	isSet bool
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) Get() *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash {
	return v.value
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) Set(val *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash(val *V1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash {
	return &NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash{value: val, isSet: true}
}

func (v NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BackboneHealthDeviceDeviceIdPost200ResponseSystemPlaneLastCrash) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


