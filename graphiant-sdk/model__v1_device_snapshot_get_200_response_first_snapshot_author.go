/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor{}

// V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor struct for V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor
type V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor struct {
	EnterpriseId *int64 `json:"enterpriseId,omitempty"`
	Exp *int64 `json:"exp,omitempty"`
	OriginalEnterpriseId *int64 `json:"originalEnterpriseId,omitempty"`
	Permissions *V1GroupsGet200ResponseGroupsInnerPermissions `json:"permissions,omitempty"`
	TimeZone *string `json:"timeZone,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor instantiates a new V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor() *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor {
	this := V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor{}
	return &this
}

// NewV1DeviceSnapshotGet200ResponseFirstSnapshotAuthorWithDefaults instantiates a new V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeviceSnapshotGet200ResponseFirstSnapshotAuthorWithDefaults() *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor {
	this := V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor{}
	return &this
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetEnterpriseId() int64 {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret int64
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given int64 and assigns it to the EnterpriseId field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) SetEnterpriseId(v int64) {
	o.EnterpriseId = &v
}

// GetExp returns the Exp field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetExp() int64 {
	if o == nil || IsNil(o.Exp) {
		var ret int64
		return ret
	}
	return *o.Exp
}

// GetExpOk returns a tuple with the Exp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetExpOk() (*int64, bool) {
	if o == nil || IsNil(o.Exp) {
		return nil, false
	}
	return o.Exp, true
}

// HasExp returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) HasExp() bool {
	if o != nil && !IsNil(o.Exp) {
		return true
	}

	return false
}

// SetExp gets a reference to the given int64 and assigns it to the Exp field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) SetExp(v int64) {
	o.Exp = &v
}

// GetOriginalEnterpriseId returns the OriginalEnterpriseId field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetOriginalEnterpriseId() int64 {
	if o == nil || IsNil(o.OriginalEnterpriseId) {
		var ret int64
		return ret
	}
	return *o.OriginalEnterpriseId
}

// GetOriginalEnterpriseIdOk returns a tuple with the OriginalEnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetOriginalEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OriginalEnterpriseId) {
		return nil, false
	}
	return o.OriginalEnterpriseId, true
}

// HasOriginalEnterpriseId returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) HasOriginalEnterpriseId() bool {
	if o != nil && !IsNil(o.OriginalEnterpriseId) {
		return true
	}

	return false
}

// SetOriginalEnterpriseId gets a reference to the given int64 and assigns it to the OriginalEnterpriseId field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) SetOriginalEnterpriseId(v int64) {
	o.OriginalEnterpriseId = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetPermissions() V1GroupsGet200ResponseGroupsInnerPermissions {
	if o == nil || IsNil(o.Permissions) {
		var ret V1GroupsGet200ResponseGroupsInnerPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetPermissionsOk() (*V1GroupsGet200ResponseGroupsInnerPermissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given V1GroupsGet200ResponseGroupsInnerPermissions and assigns it to the Permissions field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) SetPermissions(v V1GroupsGet200ResponseGroupsInnerPermissions) {
	o.Permissions = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) SetUserId(v string) {
	o.UserId = &v
}

func (o V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterpriseId"] = o.EnterpriseId
	}
	if !IsNil(o.Exp) {
		toSerialize["exp"] = o.Exp
	}
	if !IsNil(o.OriginalEnterpriseId) {
		toSerialize["originalEnterpriseId"] = o.OriginalEnterpriseId
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

type NullableV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor struct {
	value *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor
	isSet bool
}

func (v NullableV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) Get() *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor {
	return v.value
}

func (v *NullableV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) Set(val *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor(val *V1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) *NullableV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor {
	return &NullableV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor{value: val, isSet: true}
}

func (v NullableV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeviceSnapshotGet200ResponseFirstSnapshotAuthor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


