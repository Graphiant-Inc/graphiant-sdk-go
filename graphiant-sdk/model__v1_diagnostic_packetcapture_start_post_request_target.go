/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DiagnosticPacketcaptureStartPostRequestTarget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DiagnosticPacketcaptureStartPostRequestTarget{}

// V1DiagnosticPacketcaptureStartPostRequestTarget struct for V1DiagnosticPacketcaptureStartPostRequestTarget
type V1DiagnosticPacketcaptureStartPostRequestTarget struct {
	Interface *string `json:"interface,omitempty"`
	VrfName *string `json:"vrfName,omitempty"`
}

// NewV1DiagnosticPacketcaptureStartPostRequestTarget instantiates a new V1DiagnosticPacketcaptureStartPostRequestTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DiagnosticPacketcaptureStartPostRequestTarget() *V1DiagnosticPacketcaptureStartPostRequestTarget {
	this := V1DiagnosticPacketcaptureStartPostRequestTarget{}
	return &this
}

// NewV1DiagnosticPacketcaptureStartPostRequestTargetWithDefaults instantiates a new V1DiagnosticPacketcaptureStartPostRequestTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DiagnosticPacketcaptureStartPostRequestTargetWithDefaults() *V1DiagnosticPacketcaptureStartPostRequestTarget {
	this := V1DiagnosticPacketcaptureStartPostRequestTarget{}
	return &this
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcaptureStartPostRequestTarget) GetInterface() string {
	if o == nil || IsNil(o.Interface) {
		var ret string
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequestTarget) GetInterfaceOk() (*string, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequestTarget) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given string and assigns it to the Interface field.
func (o *V1DiagnosticPacketcaptureStartPostRequestTarget) SetInterface(v string) {
	o.Interface = &v
}

// GetVrfName returns the VrfName field value if set, zero value otherwise.
func (o *V1DiagnosticPacketcaptureStartPostRequestTarget) GetVrfName() string {
	if o == nil || IsNil(o.VrfName) {
		var ret string
		return ret
	}
	return *o.VrfName
}

// GetVrfNameOk returns a tuple with the VrfName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequestTarget) GetVrfNameOk() (*string, bool) {
	if o == nil || IsNil(o.VrfName) {
		return nil, false
	}
	return o.VrfName, true
}

// HasVrfName returns a boolean if a field has been set.
func (o *V1DiagnosticPacketcaptureStartPostRequestTarget) HasVrfName() bool {
	if o != nil && !IsNil(o.VrfName) {
		return true
	}

	return false
}

// SetVrfName gets a reference to the given string and assigns it to the VrfName field.
func (o *V1DiagnosticPacketcaptureStartPostRequestTarget) SetVrfName(v string) {
	o.VrfName = &v
}

func (o V1DiagnosticPacketcaptureStartPostRequestTarget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DiagnosticPacketcaptureStartPostRequestTarget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}
	if !IsNil(o.VrfName) {
		toSerialize["vrfName"] = o.VrfName
	}
	return toSerialize, nil
}

type NullableV1DiagnosticPacketcaptureStartPostRequestTarget struct {
	value *V1DiagnosticPacketcaptureStartPostRequestTarget
	isSet bool
}

func (v NullableV1DiagnosticPacketcaptureStartPostRequestTarget) Get() *V1DiagnosticPacketcaptureStartPostRequestTarget {
	return v.value
}

func (v *NullableV1DiagnosticPacketcaptureStartPostRequestTarget) Set(val *V1DiagnosticPacketcaptureStartPostRequestTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DiagnosticPacketcaptureStartPostRequestTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DiagnosticPacketcaptureStartPostRequestTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DiagnosticPacketcaptureStartPostRequestTarget(val *V1DiagnosticPacketcaptureStartPostRequestTarget) *NullableV1DiagnosticPacketcaptureStartPostRequestTarget {
	return &NullableV1DiagnosticPacketcaptureStartPostRequestTarget{value: val, isSet: true}
}

func (v NullableV1DiagnosticPacketcaptureStartPostRequestTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DiagnosticPacketcaptureStartPostRequestTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


