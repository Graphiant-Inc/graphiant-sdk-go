/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1AppsVisualizationPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AppsVisualizationPost200Response{}

// V1AppsVisualizationPost200Response struct for V1AppsVisualizationPost200Response
type V1AppsVisualizationPost200Response struct {
	AppHealth *map[string]int32 `json:"appHealth,omitempty"`
	AppsOnDeviceCount *int32 `json:"appsOnDeviceCount,omitempty"`
	AppsVisualization []V1AppsVisualizationPost200ResponseAppsVisualizationInner `json:"appsVisualization,omitempty"`
	AverageQoe *float64 `json:"averageQoe,omitempty"`
}

// NewV1AppsVisualizationPost200Response instantiates a new V1AppsVisualizationPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AppsVisualizationPost200Response() *V1AppsVisualizationPost200Response {
	this := V1AppsVisualizationPost200Response{}
	return &this
}

// NewV1AppsVisualizationPost200ResponseWithDefaults instantiates a new V1AppsVisualizationPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AppsVisualizationPost200ResponseWithDefaults() *V1AppsVisualizationPost200Response {
	this := V1AppsVisualizationPost200Response{}
	return &this
}

// GetAppHealth returns the AppHealth field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200Response) GetAppHealth() map[string]int32 {
	if o == nil || IsNil(o.AppHealth) {
		var ret map[string]int32
		return ret
	}
	return *o.AppHealth
}

// GetAppHealthOk returns a tuple with the AppHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200Response) GetAppHealthOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.AppHealth) {
		return nil, false
	}
	return o.AppHealth, true
}

// HasAppHealth returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200Response) HasAppHealth() bool {
	if o != nil && !IsNil(o.AppHealth) {
		return true
	}

	return false
}

// SetAppHealth gets a reference to the given map[string]int32 and assigns it to the AppHealth field.
func (o *V1AppsVisualizationPost200Response) SetAppHealth(v map[string]int32) {
	o.AppHealth = &v
}

// GetAppsOnDeviceCount returns the AppsOnDeviceCount field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200Response) GetAppsOnDeviceCount() int32 {
	if o == nil || IsNil(o.AppsOnDeviceCount) {
		var ret int32
		return ret
	}
	return *o.AppsOnDeviceCount
}

// GetAppsOnDeviceCountOk returns a tuple with the AppsOnDeviceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200Response) GetAppsOnDeviceCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AppsOnDeviceCount) {
		return nil, false
	}
	return o.AppsOnDeviceCount, true
}

// HasAppsOnDeviceCount returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200Response) HasAppsOnDeviceCount() bool {
	if o != nil && !IsNil(o.AppsOnDeviceCount) {
		return true
	}

	return false
}

// SetAppsOnDeviceCount gets a reference to the given int32 and assigns it to the AppsOnDeviceCount field.
func (o *V1AppsVisualizationPost200Response) SetAppsOnDeviceCount(v int32) {
	o.AppsOnDeviceCount = &v
}

// GetAppsVisualization returns the AppsVisualization field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200Response) GetAppsVisualization() []V1AppsVisualizationPost200ResponseAppsVisualizationInner {
	if o == nil || IsNil(o.AppsVisualization) {
		var ret []V1AppsVisualizationPost200ResponseAppsVisualizationInner
		return ret
	}
	return o.AppsVisualization
}

// GetAppsVisualizationOk returns a tuple with the AppsVisualization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200Response) GetAppsVisualizationOk() ([]V1AppsVisualizationPost200ResponseAppsVisualizationInner, bool) {
	if o == nil || IsNil(o.AppsVisualization) {
		return nil, false
	}
	return o.AppsVisualization, true
}

// HasAppsVisualization returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200Response) HasAppsVisualization() bool {
	if o != nil && !IsNil(o.AppsVisualization) {
		return true
	}

	return false
}

// SetAppsVisualization gets a reference to the given []V1AppsVisualizationPost200ResponseAppsVisualizationInner and assigns it to the AppsVisualization field.
func (o *V1AppsVisualizationPost200Response) SetAppsVisualization(v []V1AppsVisualizationPost200ResponseAppsVisualizationInner) {
	o.AppsVisualization = v
}

// GetAverageQoe returns the AverageQoe field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200Response) GetAverageQoe() float64 {
	if o == nil || IsNil(o.AverageQoe) {
		var ret float64
		return ret
	}
	return *o.AverageQoe
}

// GetAverageQoeOk returns a tuple with the AverageQoe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200Response) GetAverageQoeOk() (*float64, bool) {
	if o == nil || IsNil(o.AverageQoe) {
		return nil, false
	}
	return o.AverageQoe, true
}

// HasAverageQoe returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200Response) HasAverageQoe() bool {
	if o != nil && !IsNil(o.AverageQoe) {
		return true
	}

	return false
}

// SetAverageQoe gets a reference to the given float64 and assigns it to the AverageQoe field.
func (o *V1AppsVisualizationPost200Response) SetAverageQoe(v float64) {
	o.AverageQoe = &v
}

func (o V1AppsVisualizationPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AppsVisualizationPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppHealth) {
		toSerialize["appHealth"] = o.AppHealth
	}
	if !IsNil(o.AppsOnDeviceCount) {
		toSerialize["appsOnDeviceCount"] = o.AppsOnDeviceCount
	}
	if !IsNil(o.AppsVisualization) {
		toSerialize["appsVisualization"] = o.AppsVisualization
	}
	if !IsNil(o.AverageQoe) {
		toSerialize["averageQoe"] = o.AverageQoe
	}
	return toSerialize, nil
}

type NullableV1AppsVisualizationPost200Response struct {
	value *V1AppsVisualizationPost200Response
	isSet bool
}

func (v NullableV1AppsVisualizationPost200Response) Get() *V1AppsVisualizationPost200Response {
	return v.value
}

func (v *NullableV1AppsVisualizationPost200Response) Set(val *V1AppsVisualizationPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AppsVisualizationPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AppsVisualizationPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AppsVisualizationPost200Response(val *V1AppsVisualizationPost200Response) *NullableV1AppsVisualizationPost200Response {
	return &NullableV1AppsVisualizationPost200Response{value: val, isSet: true}
}

func (v NullableV1AppsVisualizationPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AppsVisualizationPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


