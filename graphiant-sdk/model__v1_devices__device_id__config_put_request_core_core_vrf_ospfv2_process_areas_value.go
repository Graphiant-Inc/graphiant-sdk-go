/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue{}

// V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue struct for V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue
type V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue struct {
	Area *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea `json:"area,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue{}
	return &this
}

// GetArea returns the Area field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) GetArea() V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea {
	if o == nil || IsNil(o.Area) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea
		return ret
	}
	return *o.Area
}

// GetAreaOk returns a tuple with the Area field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) GetAreaOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea, bool) {
	if o == nil || IsNil(o.Area) {
		return nil, false
	}
	return o.Area, true
}

// HasArea returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) HasArea() bool {
	if o != nil && !IsNil(o.Area) {
		return true
	}

	return false
}

// SetArea gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea and assigns it to the Area field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) SetArea(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValueArea) {
	o.Area = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Area) {
		toSerialize["area"] = o.Area
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) Get() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) Set(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessAreasValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


