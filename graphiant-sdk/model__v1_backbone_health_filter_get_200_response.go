/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1BackboneHealthFilterGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BackboneHealthFilterGet200Response{}

// V1BackboneHealthFilterGet200Response struct for V1BackboneHealthFilterGet200Response
type V1BackboneHealthFilterGet200Response struct {
	Circuits []V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner `json:"circuits,omitempty"`
	Devices []V2AssuranceFlowSummaryPost200ResponseClientEndpointEdgesInner `json:"devices,omitempty"`
	LanSegments []V1BackboneHealthFilterGet200ResponseLanSegmentsInner `json:"lanSegments,omitempty"`
	Regions []V1BackboneHealthFilterGet200ResponseRegionsInner `json:"regions,omitempty"`
	Sites []V1BackboneHealthFilterGet200ResponseSitesInner `json:"sites,omitempty"`
}

// NewV1BackboneHealthFilterGet200Response instantiates a new V1BackboneHealthFilterGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BackboneHealthFilterGet200Response() *V1BackboneHealthFilterGet200Response {
	this := V1BackboneHealthFilterGet200Response{}
	return &this
}

// NewV1BackboneHealthFilterGet200ResponseWithDefaults instantiates a new V1BackboneHealthFilterGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BackboneHealthFilterGet200ResponseWithDefaults() *V1BackboneHealthFilterGet200Response {
	this := V1BackboneHealthFilterGet200Response{}
	return &this
}

// GetCircuits returns the Circuits field value if set, zero value otherwise.
func (o *V1BackboneHealthFilterGet200Response) GetCircuits() []V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner {
	if o == nil || IsNil(o.Circuits) {
		var ret []V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner
		return ret
	}
	return o.Circuits
}

// GetCircuitsOk returns a tuple with the Circuits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthFilterGet200Response) GetCircuitsOk() ([]V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner, bool) {
	if o == nil || IsNil(o.Circuits) {
		return nil, false
	}
	return o.Circuits, true
}

// HasCircuits returns a boolean if a field has been set.
func (o *V1BackboneHealthFilterGet200Response) HasCircuits() bool {
	if o != nil && !IsNil(o.Circuits) {
		return true
	}

	return false
}

// SetCircuits gets a reference to the given []V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner and assigns it to the Circuits field.
func (o *V1BackboneHealthFilterGet200Response) SetCircuits(v []V2AssuranceTopologyClientSessionDetailsPost200ResponseSessionLocalDiaLinksInner) {
	o.Circuits = v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *V1BackboneHealthFilterGet200Response) GetDevices() []V2AssuranceFlowSummaryPost200ResponseClientEndpointEdgesInner {
	if o == nil || IsNil(o.Devices) {
		var ret []V2AssuranceFlowSummaryPost200ResponseClientEndpointEdgesInner
		return ret
	}
	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthFilterGet200Response) GetDevicesOk() ([]V2AssuranceFlowSummaryPost200ResponseClientEndpointEdgesInner, bool) {
	if o == nil || IsNil(o.Devices) {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *V1BackboneHealthFilterGet200Response) HasDevices() bool {
	if o != nil && !IsNil(o.Devices) {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []V2AssuranceFlowSummaryPost200ResponseClientEndpointEdgesInner and assigns it to the Devices field.
func (o *V1BackboneHealthFilterGet200Response) SetDevices(v []V2AssuranceFlowSummaryPost200ResponseClientEndpointEdgesInner) {
	o.Devices = v
}

// GetLanSegments returns the LanSegments field value if set, zero value otherwise.
func (o *V1BackboneHealthFilterGet200Response) GetLanSegments() []V1BackboneHealthFilterGet200ResponseLanSegmentsInner {
	if o == nil || IsNil(o.LanSegments) {
		var ret []V1BackboneHealthFilterGet200ResponseLanSegmentsInner
		return ret
	}
	return o.LanSegments
}

// GetLanSegmentsOk returns a tuple with the LanSegments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthFilterGet200Response) GetLanSegmentsOk() ([]V1BackboneHealthFilterGet200ResponseLanSegmentsInner, bool) {
	if o == nil || IsNil(o.LanSegments) {
		return nil, false
	}
	return o.LanSegments, true
}

// HasLanSegments returns a boolean if a field has been set.
func (o *V1BackboneHealthFilterGet200Response) HasLanSegments() bool {
	if o != nil && !IsNil(o.LanSegments) {
		return true
	}

	return false
}

// SetLanSegments gets a reference to the given []V1BackboneHealthFilterGet200ResponseLanSegmentsInner and assigns it to the LanSegments field.
func (o *V1BackboneHealthFilterGet200Response) SetLanSegments(v []V1BackboneHealthFilterGet200ResponseLanSegmentsInner) {
	o.LanSegments = v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *V1BackboneHealthFilterGet200Response) GetRegions() []V1BackboneHealthFilterGet200ResponseRegionsInner {
	if o == nil || IsNil(o.Regions) {
		var ret []V1BackboneHealthFilterGet200ResponseRegionsInner
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthFilterGet200Response) GetRegionsOk() ([]V1BackboneHealthFilterGet200ResponseRegionsInner, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *V1BackboneHealthFilterGet200Response) HasRegions() bool {
	if o != nil && !IsNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []V1BackboneHealthFilterGet200ResponseRegionsInner and assigns it to the Regions field.
func (o *V1BackboneHealthFilterGet200Response) SetRegions(v []V1BackboneHealthFilterGet200ResponseRegionsInner) {
	o.Regions = v
}

// GetSites returns the Sites field value if set, zero value otherwise.
func (o *V1BackboneHealthFilterGet200Response) GetSites() []V1BackboneHealthFilterGet200ResponseSitesInner {
	if o == nil || IsNil(o.Sites) {
		var ret []V1BackboneHealthFilterGet200ResponseSitesInner
		return ret
	}
	return o.Sites
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BackboneHealthFilterGet200Response) GetSitesOk() ([]V1BackboneHealthFilterGet200ResponseSitesInner, bool) {
	if o == nil || IsNil(o.Sites) {
		return nil, false
	}
	return o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *V1BackboneHealthFilterGet200Response) HasSites() bool {
	if o != nil && !IsNil(o.Sites) {
		return true
	}

	return false
}

// SetSites gets a reference to the given []V1BackboneHealthFilterGet200ResponseSitesInner and assigns it to the Sites field.
func (o *V1BackboneHealthFilterGet200Response) SetSites(v []V1BackboneHealthFilterGet200ResponseSitesInner) {
	o.Sites = v
}

func (o V1BackboneHealthFilterGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BackboneHealthFilterGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Circuits) {
		toSerialize["circuits"] = o.Circuits
	}
	if !IsNil(o.Devices) {
		toSerialize["devices"] = o.Devices
	}
	if !IsNil(o.LanSegments) {
		toSerialize["lanSegments"] = o.LanSegments
	}
	if !IsNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}
	if !IsNil(o.Sites) {
		toSerialize["sites"] = o.Sites
	}
	return toSerialize, nil
}

type NullableV1BackboneHealthFilterGet200Response struct {
	value *V1BackboneHealthFilterGet200Response
	isSet bool
}

func (v NullableV1BackboneHealthFilterGet200Response) Get() *V1BackboneHealthFilterGet200Response {
	return v.value
}

func (v *NullableV1BackboneHealthFilterGet200Response) Set(val *V1BackboneHealthFilterGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BackboneHealthFilterGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BackboneHealthFilterGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BackboneHealthFilterGet200Response(val *V1BackboneHealthFilterGet200Response) *NullableV1BackboneHealthFilterGet200Response {
	return &NullableV1BackboneHealthFilterGet200Response{value: val, isSet: true}
}

func (v NullableV1BackboneHealthFilterGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BackboneHealthFilterGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


