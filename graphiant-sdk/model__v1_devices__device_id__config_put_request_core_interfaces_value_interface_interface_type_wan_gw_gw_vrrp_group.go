/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup{}

// V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup struct for V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup
type V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup struct {
	AcceptMode *bool `json:"acceptMode,omitempty"`
	AllowInterOperability *bool `json:"allowInterOperability,omitempty"`
	Description *string `json:"description,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Preempt *bool `json:"preempt,omitempty"`
	Priority *int32 `json:"priority,omitempty"`
	TrackedInterfaces []map[string]interface{} `json:"trackedInterfaces,omitempty"`
	VirtualIp *string `json:"virtualIp,omitempty"`
	VirtualRouterId *int32 `json:"virtualRouterId,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroupWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroupWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup{}
	return &this
}

// GetAcceptMode returns the AcceptMode field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetAcceptMode() bool {
	if o == nil || IsNil(o.AcceptMode) {
		var ret bool
		return ret
	}
	return *o.AcceptMode
}

// GetAcceptModeOk returns a tuple with the AcceptMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetAcceptModeOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptMode) {
		return nil, false
	}
	return o.AcceptMode, true
}

// HasAcceptMode returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) HasAcceptMode() bool {
	if o != nil && !IsNil(o.AcceptMode) {
		return true
	}

	return false
}

// SetAcceptMode gets a reference to the given bool and assigns it to the AcceptMode field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) SetAcceptMode(v bool) {
	o.AcceptMode = &v
}

// GetAllowInterOperability returns the AllowInterOperability field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetAllowInterOperability() bool {
	if o == nil || IsNil(o.AllowInterOperability) {
		var ret bool
		return ret
	}
	return *o.AllowInterOperability
}

// GetAllowInterOperabilityOk returns a tuple with the AllowInterOperability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetAllowInterOperabilityOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowInterOperability) {
		return nil, false
	}
	return o.AllowInterOperability, true
}

// HasAllowInterOperability returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) HasAllowInterOperability() bool {
	if o != nil && !IsNil(o.AllowInterOperability) {
		return true
	}

	return false
}

// SetAllowInterOperability gets a reference to the given bool and assigns it to the AllowInterOperability field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) SetAllowInterOperability(v bool) {
	o.AllowInterOperability = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetPreempt returns the Preempt field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetPreempt() bool {
	if o == nil || IsNil(o.Preempt) {
		var ret bool
		return ret
	}
	return *o.Preempt
}

// GetPreemptOk returns a tuple with the Preempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetPreemptOk() (*bool, bool) {
	if o == nil || IsNil(o.Preempt) {
		return nil, false
	}
	return o.Preempt, true
}

// HasPreempt returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) HasPreempt() bool {
	if o != nil && !IsNil(o.Preempt) {
		return true
	}

	return false
}

// SetPreempt gets a reference to the given bool and assigns it to the Preempt field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) SetPreempt(v bool) {
	o.Preempt = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) SetPriority(v int32) {
	o.Priority = &v
}

// GetTrackedInterfaces returns the TrackedInterfaces field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetTrackedInterfaces() []map[string]interface{} {
	if o == nil || IsNil(o.TrackedInterfaces) {
		var ret []map[string]interface{}
		return ret
	}
	return o.TrackedInterfaces
}

// GetTrackedInterfacesOk returns a tuple with the TrackedInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetTrackedInterfacesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.TrackedInterfaces) {
		return nil, false
	}
	return o.TrackedInterfaces, true
}

// HasTrackedInterfaces returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) HasTrackedInterfaces() bool {
	if o != nil && !IsNil(o.TrackedInterfaces) {
		return true
	}

	return false
}

// SetTrackedInterfaces gets a reference to the given []map[string]interface{} and assigns it to the TrackedInterfaces field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) SetTrackedInterfaces(v []map[string]interface{}) {
	o.TrackedInterfaces = v
}

// GetVirtualIp returns the VirtualIp field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetVirtualIp() string {
	if o == nil || IsNil(o.VirtualIp) {
		var ret string
		return ret
	}
	return *o.VirtualIp
}

// GetVirtualIpOk returns a tuple with the VirtualIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetVirtualIpOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualIp) {
		return nil, false
	}
	return o.VirtualIp, true
}

// HasVirtualIp returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) HasVirtualIp() bool {
	if o != nil && !IsNil(o.VirtualIp) {
		return true
	}

	return false
}

// SetVirtualIp gets a reference to the given string and assigns it to the VirtualIp field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) SetVirtualIp(v string) {
	o.VirtualIp = &v
}

// GetVirtualRouterId returns the VirtualRouterId field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetVirtualRouterId() int32 {
	if o == nil || IsNil(o.VirtualRouterId) {
		var ret int32
		return ret
	}
	return *o.VirtualRouterId
}

// GetVirtualRouterIdOk returns a tuple with the VirtualRouterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) GetVirtualRouterIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VirtualRouterId) {
		return nil, false
	}
	return o.VirtualRouterId, true
}

// HasVirtualRouterId returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) HasVirtualRouterId() bool {
	if o != nil && !IsNil(o.VirtualRouterId) {
		return true
	}

	return false
}

// SetVirtualRouterId gets a reference to the given int32 and assigns it to the VirtualRouterId field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) SetVirtualRouterId(v int32) {
	o.VirtualRouterId = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcceptMode) {
		toSerialize["acceptMode"] = o.AcceptMode
	}
	if !IsNil(o.AllowInterOperability) {
		toSerialize["allowInterOperability"] = o.AllowInterOperability
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Preempt) {
		toSerialize["preempt"] = o.Preempt
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.TrackedInterfaces) {
		toSerialize["trackedInterfaces"] = o.TrackedInterfaces
	}
	if !IsNil(o.VirtualIp) {
		toSerialize["virtualIp"] = o.VirtualIp
	}
	if !IsNil(o.VirtualRouterId) {
		toSerialize["virtualRouterId"] = o.VirtualRouterId
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) Get() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) Set(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWanGwGwVrrpGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


