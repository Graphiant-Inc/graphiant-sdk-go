/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1LogsPost200ResponseLogsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1LogsPost200ResponseLogsInner{}

// V1LogsPost200ResponseLogsInner struct for V1LogsPost200ResponseLogsInner
type V1LogsPost200ResponseLogsInner struct {
	DeviceId *int64 `json:"deviceId,omitempty"`
	Facility *string `json:"facility,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Level *string `json:"level,omitempty"`
	Message *string `json:"message,omitempty"`
	Ts *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"ts,omitempty"`
}

// NewV1LogsPost200ResponseLogsInner instantiates a new V1LogsPost200ResponseLogsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1LogsPost200ResponseLogsInner() *V1LogsPost200ResponseLogsInner {
	this := V1LogsPost200ResponseLogsInner{}
	return &this
}

// NewV1LogsPost200ResponseLogsInnerWithDefaults instantiates a new V1LogsPost200ResponseLogsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1LogsPost200ResponseLogsInnerWithDefaults() *V1LogsPost200ResponseLogsInner {
	this := V1LogsPost200ResponseLogsInner{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1LogsPost200ResponseLogsInner) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1LogsPost200ResponseLogsInner) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1LogsPost200ResponseLogsInner) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1LogsPost200ResponseLogsInner) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetFacility returns the Facility field value if set, zero value otherwise.
func (o *V1LogsPost200ResponseLogsInner) GetFacility() string {
	if o == nil || IsNil(o.Facility) {
		var ret string
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1LogsPost200ResponseLogsInner) GetFacilityOk() (*string, bool) {
	if o == nil || IsNil(o.Facility) {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *V1LogsPost200ResponseLogsInner) HasFacility() bool {
	if o != nil && !IsNil(o.Facility) {
		return true
	}

	return false
}

// SetFacility gets a reference to the given string and assigns it to the Facility field.
func (o *V1LogsPost200ResponseLogsInner) SetFacility(v string) {
	o.Facility = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *V1LogsPost200ResponseLogsInner) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1LogsPost200ResponseLogsInner) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *V1LogsPost200ResponseLogsInner) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *V1LogsPost200ResponseLogsInner) SetHostname(v string) {
	o.Hostname = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *V1LogsPost200ResponseLogsInner) GetLevel() string {
	if o == nil || IsNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1LogsPost200ResponseLogsInner) GetLevelOk() (*string, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *V1LogsPost200ResponseLogsInner) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *V1LogsPost200ResponseLogsInner) SetLevel(v string) {
	o.Level = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *V1LogsPost200ResponseLogsInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1LogsPost200ResponseLogsInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *V1LogsPost200ResponseLogsInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *V1LogsPost200ResponseLogsInner) SetMessage(v string) {
	o.Message = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *V1LogsPost200ResponseLogsInner) GetTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.Ts) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1LogsPost200ResponseLogsInner) GetTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *V1LogsPost200ResponseLogsInner) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the Ts field.
func (o *V1LogsPost200ResponseLogsInner) SetTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.Ts = &v
}

func (o V1LogsPost200ResponseLogsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1LogsPost200ResponseLogsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.Facility) {
		toSerialize["facility"] = o.Facility
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	return toSerialize, nil
}

type NullableV1LogsPost200ResponseLogsInner struct {
	value *V1LogsPost200ResponseLogsInner
	isSet bool
}

func (v NullableV1LogsPost200ResponseLogsInner) Get() *V1LogsPost200ResponseLogsInner {
	return v.value
}

func (v *NullableV1LogsPost200ResponseLogsInner) Set(val *V1LogsPost200ResponseLogsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1LogsPost200ResponseLogsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1LogsPost200ResponseLogsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1LogsPost200ResponseLogsInner(val *V1LogsPost200ResponseLogsInner) *NullableV1LogsPost200ResponseLogsInner {
	return &NullableV1LogsPost200ResponseLogsInner{value: val, isSet: true}
}

func (v NullableV1LogsPost200ResponseLogsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1LogsPost200ResponseLogsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


