/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DeviceSnapshotPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeviceSnapshotPutRequest{}

// V1DeviceSnapshotPutRequest struct for V1DeviceSnapshotPutRequest
type V1DeviceSnapshotPutRequest struct {
	Golden *bool `json:"golden,omitempty"`
	Name *string `json:"name,omitempty"`
	SnapshotId *int64 `json:"snapshotId,omitempty"`
}

// NewV1DeviceSnapshotPutRequest instantiates a new V1DeviceSnapshotPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeviceSnapshotPutRequest() *V1DeviceSnapshotPutRequest {
	this := V1DeviceSnapshotPutRequest{}
	return &this
}

// NewV1DeviceSnapshotPutRequestWithDefaults instantiates a new V1DeviceSnapshotPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeviceSnapshotPutRequestWithDefaults() *V1DeviceSnapshotPutRequest {
	this := V1DeviceSnapshotPutRequest{}
	return &this
}

// GetGolden returns the Golden field value if set, zero value otherwise.
func (o *V1DeviceSnapshotPutRequest) GetGolden() bool {
	if o == nil || IsNil(o.Golden) {
		var ret bool
		return ret
	}
	return *o.Golden
}

// GetGoldenOk returns a tuple with the Golden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotPutRequest) GetGoldenOk() (*bool, bool) {
	if o == nil || IsNil(o.Golden) {
		return nil, false
	}
	return o.Golden, true
}

// HasGolden returns a boolean if a field has been set.
func (o *V1DeviceSnapshotPutRequest) HasGolden() bool {
	if o != nil && !IsNil(o.Golden) {
		return true
	}

	return false
}

// SetGolden gets a reference to the given bool and assigns it to the Golden field.
func (o *V1DeviceSnapshotPutRequest) SetGolden(v bool) {
	o.Golden = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DeviceSnapshotPutRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotPutRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DeviceSnapshotPutRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DeviceSnapshotPutRequest) SetName(v string) {
	o.Name = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *V1DeviceSnapshotPutRequest) GetSnapshotId() int64 {
	if o == nil || IsNil(o.SnapshotId) {
		var ret int64
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotPutRequest) GetSnapshotIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SnapshotId) {
		return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *V1DeviceSnapshotPutRequest) HasSnapshotId() bool {
	if o != nil && !IsNil(o.SnapshotId) {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given int64 and assigns it to the SnapshotId field.
func (o *V1DeviceSnapshotPutRequest) SetSnapshotId(v int64) {
	o.SnapshotId = &v
}

func (o V1DeviceSnapshotPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeviceSnapshotPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Golden) {
		toSerialize["golden"] = o.Golden
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SnapshotId) {
		toSerialize["snapshotId"] = o.SnapshotId
	}
	return toSerialize, nil
}

type NullableV1DeviceSnapshotPutRequest struct {
	value *V1DeviceSnapshotPutRequest
	isSet bool
}

func (v NullableV1DeviceSnapshotPutRequest) Get() *V1DeviceSnapshotPutRequest {
	return v.value
}

func (v *NullableV1DeviceSnapshotPutRequest) Set(val *V1DeviceSnapshotPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeviceSnapshotPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeviceSnapshotPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeviceSnapshotPutRequest(val *V1DeviceSnapshotPutRequest) *NullableV1DeviceSnapshotPutRequest {
	return &NullableV1DeviceSnapshotPutRequest{value: val, isSet: true}
}

func (v NullableV1DeviceSnapshotPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeviceSnapshotPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


