/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2DeviceDeviceIdTopologyPost200ResponseNodesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2DeviceDeviceIdTopologyPost200ResponseNodesInner{}

// V2DeviceDeviceIdTopologyPost200ResponseNodesInner struct for V2DeviceDeviceIdTopologyPost200ResponseNodesInner
type V2DeviceDeviceIdTopologyPost200ResponseNodesInner struct {
	CircuitInfo []V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner `json:"circuitInfo,omitempty"`
	Connections []V2DeviceDeviceIdTopologyPost200ResponseEdgesInnerConnectionsInner `json:"connections,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	NodeInfo *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerNodeInfo `json:"nodeInfo,omitempty"`
	Quality *string `json:"quality,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewV2DeviceDeviceIdTopologyPost200ResponseNodesInner instantiates a new V2DeviceDeviceIdTopologyPost200ResponseNodesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2DeviceDeviceIdTopologyPost200ResponseNodesInner() *V2DeviceDeviceIdTopologyPost200ResponseNodesInner {
	this := V2DeviceDeviceIdTopologyPost200ResponseNodesInner{}
	return &this
}

// NewV2DeviceDeviceIdTopologyPost200ResponseNodesInnerWithDefaults instantiates a new V2DeviceDeviceIdTopologyPost200ResponseNodesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2DeviceDeviceIdTopologyPost200ResponseNodesInnerWithDefaults() *V2DeviceDeviceIdTopologyPost200ResponseNodesInner {
	this := V2DeviceDeviceIdTopologyPost200ResponseNodesInner{}
	return &this
}

// GetCircuitInfo returns the CircuitInfo field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetCircuitInfo() []V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner {
	if o == nil || IsNil(o.CircuitInfo) {
		var ret []V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner
		return ret
	}
	return o.CircuitInfo
}

// GetCircuitInfoOk returns a tuple with the CircuitInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetCircuitInfoOk() ([]V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner, bool) {
	if o == nil || IsNil(o.CircuitInfo) {
		return nil, false
	}
	return o.CircuitInfo, true
}

// HasCircuitInfo returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) HasCircuitInfo() bool {
	if o != nil && !IsNil(o.CircuitInfo) {
		return true
	}

	return false
}

// SetCircuitInfo gets a reference to the given []V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner and assigns it to the CircuitInfo field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) SetCircuitInfo(v []V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) {
	o.CircuitInfo = v
}

// GetConnections returns the Connections field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetConnections() []V2DeviceDeviceIdTopologyPost200ResponseEdgesInnerConnectionsInner {
	if o == nil || IsNil(o.Connections) {
		var ret []V2DeviceDeviceIdTopologyPost200ResponseEdgesInnerConnectionsInner
		return ret
	}
	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetConnectionsOk() ([]V2DeviceDeviceIdTopologyPost200ResponseEdgesInnerConnectionsInner, bool) {
	if o == nil || IsNil(o.Connections) {
		return nil, false
	}
	return o.Connections, true
}

// HasConnections returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) HasConnections() bool {
	if o != nil && !IsNil(o.Connections) {
		return true
	}

	return false
}

// SetConnections gets a reference to the given []V2DeviceDeviceIdTopologyPost200ResponseEdgesInnerConnectionsInner and assigns it to the Connections field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) SetConnections(v []V2DeviceDeviceIdTopologyPost200ResponseEdgesInnerConnectionsInner) {
	o.Connections = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) SetName(v string) {
	o.Name = &v
}

// GetNodeInfo returns the NodeInfo field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetNodeInfo() V2DeviceDeviceIdTopologyPost200ResponseNodesInnerNodeInfo {
	if o == nil || IsNil(o.NodeInfo) {
		var ret V2DeviceDeviceIdTopologyPost200ResponseNodesInnerNodeInfo
		return ret
	}
	return *o.NodeInfo
}

// GetNodeInfoOk returns a tuple with the NodeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetNodeInfoOk() (*V2DeviceDeviceIdTopologyPost200ResponseNodesInnerNodeInfo, bool) {
	if o == nil || IsNil(o.NodeInfo) {
		return nil, false
	}
	return o.NodeInfo, true
}

// HasNodeInfo returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) HasNodeInfo() bool {
	if o != nil && !IsNil(o.NodeInfo) {
		return true
	}

	return false
}

// SetNodeInfo gets a reference to the given V2DeviceDeviceIdTopologyPost200ResponseNodesInnerNodeInfo and assigns it to the NodeInfo field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) SetNodeInfo(v V2DeviceDeviceIdTopologyPost200ResponseNodesInnerNodeInfo) {
	o.NodeInfo = &v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetQuality() string {
	if o == nil || IsNil(o.Quality) {
		var ret string
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetQualityOk() (*string, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given string and assigns it to the Quality field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) SetQuality(v string) {
	o.Quality = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) SetType(v string) {
	o.Type = &v
}

func (o V2DeviceDeviceIdTopologyPost200ResponseNodesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2DeviceDeviceIdTopologyPost200ResponseNodesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CircuitInfo) {
		toSerialize["circuitInfo"] = o.CircuitInfo
	}
	if !IsNil(o.Connections) {
		toSerialize["connections"] = o.Connections
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NodeInfo) {
		toSerialize["nodeInfo"] = o.NodeInfo
	}
	if !IsNil(o.Quality) {
		toSerialize["quality"] = o.Quality
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInner struct {
	value *V2DeviceDeviceIdTopologyPost200ResponseNodesInner
	isSet bool
}

func (v NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInner) Get() *V2DeviceDeviceIdTopologyPost200ResponseNodesInner {
	return v.value
}

func (v *NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInner) Set(val *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2DeviceDeviceIdTopologyPost200ResponseNodesInner(val *V2DeviceDeviceIdTopologyPost200ResponseNodesInner) *NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInner {
	return &NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInner{value: val, isSet: true}
}

func (v NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


