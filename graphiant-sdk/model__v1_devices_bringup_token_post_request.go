/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesBringupTokenPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesBringupTokenPostRequest{}

// V1DevicesBringupTokenPostRequest struct for V1DevicesBringupTokenPostRequest
type V1DevicesBringupTokenPostRequest struct {
	Role *string `json:"role,omitempty"`
	ValidTillTs *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"validTillTs,omitempty"`
	ValiditySec *int64 `json:"validitySec,omitempty"`
}

// NewV1DevicesBringupTokenPostRequest instantiates a new V1DevicesBringupTokenPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesBringupTokenPostRequest() *V1DevicesBringupTokenPostRequest {
	this := V1DevicesBringupTokenPostRequest{}
	return &this
}

// NewV1DevicesBringupTokenPostRequestWithDefaults instantiates a new V1DevicesBringupTokenPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesBringupTokenPostRequestWithDefaults() *V1DevicesBringupTokenPostRequest {
	this := V1DevicesBringupTokenPostRequest{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *V1DevicesBringupTokenPostRequest) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupTokenPostRequest) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *V1DevicesBringupTokenPostRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *V1DevicesBringupTokenPostRequest) SetRole(v string) {
	o.Role = &v
}

// GetValidTillTs returns the ValidTillTs field value if set, zero value otherwise.
func (o *V1DevicesBringupTokenPostRequest) GetValidTillTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.ValidTillTs) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.ValidTillTs
}

// GetValidTillTsOk returns a tuple with the ValidTillTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupTokenPostRequest) GetValidTillTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.ValidTillTs) {
		return nil, false
	}
	return o.ValidTillTs, true
}

// HasValidTillTs returns a boolean if a field has been set.
func (o *V1DevicesBringupTokenPostRequest) HasValidTillTs() bool {
	if o != nil && !IsNil(o.ValidTillTs) {
		return true
	}

	return false
}

// SetValidTillTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the ValidTillTs field.
func (o *V1DevicesBringupTokenPostRequest) SetValidTillTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.ValidTillTs = &v
}

// GetValiditySec returns the ValiditySec field value if set, zero value otherwise.
func (o *V1DevicesBringupTokenPostRequest) GetValiditySec() int64 {
	if o == nil || IsNil(o.ValiditySec) {
		var ret int64
		return ret
	}
	return *o.ValiditySec
}

// GetValiditySecOk returns a tuple with the ValiditySec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesBringupTokenPostRequest) GetValiditySecOk() (*int64, bool) {
	if o == nil || IsNil(o.ValiditySec) {
		return nil, false
	}
	return o.ValiditySec, true
}

// HasValiditySec returns a boolean if a field has been set.
func (o *V1DevicesBringupTokenPostRequest) HasValiditySec() bool {
	if o != nil && !IsNil(o.ValiditySec) {
		return true
	}

	return false
}

// SetValiditySec gets a reference to the given int64 and assigns it to the ValiditySec field.
func (o *V1DevicesBringupTokenPostRequest) SetValiditySec(v int64) {
	o.ValiditySec = &v
}

func (o V1DevicesBringupTokenPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesBringupTokenPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.ValidTillTs) {
		toSerialize["validTillTs"] = o.ValidTillTs
	}
	if !IsNil(o.ValiditySec) {
		toSerialize["validitySec"] = o.ValiditySec
	}
	return toSerialize, nil
}

type NullableV1DevicesBringupTokenPostRequest struct {
	value *V1DevicesBringupTokenPostRequest
	isSet bool
}

func (v NullableV1DevicesBringupTokenPostRequest) Get() *V1DevicesBringupTokenPostRequest {
	return v.value
}

func (v *NullableV1DevicesBringupTokenPostRequest) Set(val *V1DevicesBringupTokenPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesBringupTokenPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesBringupTokenPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesBringupTokenPostRequest(val *V1DevicesBringupTokenPostRequest) *NullableV1DevicesBringupTokenPostRequest {
	return &NullableV1DevicesBringupTokenPostRequest{value: val, isSet: true}
}

func (v NullableV1DevicesBringupTokenPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesBringupTokenPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


