/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1VersionPostRequestConfigurationMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1VersionPostRequestConfigurationMetadata{}

// V1VersionPostRequestConfigurationMetadata struct for V1VersionPostRequestConfigurationMetadata
type V1VersionPostRequestConfigurationMetadata struct {
	CommitConfirm *bool `json:"commitConfirm,omitempty"`
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewV1VersionPostRequestConfigurationMetadata instantiates a new V1VersionPostRequestConfigurationMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1VersionPostRequestConfigurationMetadata() *V1VersionPostRequestConfigurationMetadata {
	this := V1VersionPostRequestConfigurationMetadata{}
	return &this
}

// NewV1VersionPostRequestConfigurationMetadataWithDefaults instantiates a new V1VersionPostRequestConfigurationMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1VersionPostRequestConfigurationMetadataWithDefaults() *V1VersionPostRequestConfigurationMetadata {
	this := V1VersionPostRequestConfigurationMetadata{}
	return &this
}

// GetCommitConfirm returns the CommitConfirm field value if set, zero value otherwise.
func (o *V1VersionPostRequestConfigurationMetadata) GetCommitConfirm() bool {
	if o == nil || IsNil(o.CommitConfirm) {
		var ret bool
		return ret
	}
	return *o.CommitConfirm
}

// GetCommitConfirmOk returns a tuple with the CommitConfirm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionPostRequestConfigurationMetadata) GetCommitConfirmOk() (*bool, bool) {
	if o == nil || IsNil(o.CommitConfirm) {
		return nil, false
	}
	return o.CommitConfirm, true
}

// HasCommitConfirm returns a boolean if a field has been set.
func (o *V1VersionPostRequestConfigurationMetadata) HasCommitConfirm() bool {
	if o != nil && !IsNil(o.CommitConfirm) {
		return true
	}

	return false
}

// SetCommitConfirm gets a reference to the given bool and assigns it to the CommitConfirm field.
func (o *V1VersionPostRequestConfigurationMetadata) SetCommitConfirm(v bool) {
	o.CommitConfirm = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V1VersionPostRequestConfigurationMetadata) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionPostRequestConfigurationMetadata) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V1VersionPostRequestConfigurationMetadata) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V1VersionPostRequestConfigurationMetadata) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1VersionPostRequestConfigurationMetadata) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VersionPostRequestConfigurationMetadata) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1VersionPostRequestConfigurationMetadata) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1VersionPostRequestConfigurationMetadata) SetName(v string) {
	o.Name = &v
}

func (o V1VersionPostRequestConfigurationMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1VersionPostRequestConfigurationMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommitConfirm) {
		toSerialize["commitConfirm"] = o.CommitConfirm
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableV1VersionPostRequestConfigurationMetadata struct {
	value *V1VersionPostRequestConfigurationMetadata
	isSet bool
}

func (v NullableV1VersionPostRequestConfigurationMetadata) Get() *V1VersionPostRequestConfigurationMetadata {
	return v.value
}

func (v *NullableV1VersionPostRequestConfigurationMetadata) Set(val *V1VersionPostRequestConfigurationMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableV1VersionPostRequestConfigurationMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableV1VersionPostRequestConfigurationMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1VersionPostRequestConfigurationMetadata(val *V1VersionPostRequestConfigurationMetadata) *NullableV1VersionPostRequestConfigurationMetadata {
	return &NullableV1VersionPostRequestConfigurationMetadata{value: val, isSet: true}
}

func (v NullableV1VersionPostRequestConfigurationMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1VersionPostRequestConfigurationMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


