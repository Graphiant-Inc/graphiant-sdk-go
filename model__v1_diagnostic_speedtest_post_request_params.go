/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DiagnosticSpeedtestPostRequestParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DiagnosticSpeedtestPostRequestParams{}

// V1DiagnosticSpeedtestPostRequestParams struct for V1DiagnosticSpeedtestPostRequestParams
type V1DiagnosticSpeedtestPostRequestParams struct {
	Provider *string `json:"provider,omitempty"`
	ServerId *string `json:"serverId,omitempty"`
	Target *V1DiagnosticPacketcaptureStartPostRequestTarget `json:"target,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewV1DiagnosticSpeedtestPostRequestParams instantiates a new V1DiagnosticSpeedtestPostRequestParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DiagnosticSpeedtestPostRequestParams() *V1DiagnosticSpeedtestPostRequestParams {
	this := V1DiagnosticSpeedtestPostRequestParams{}
	return &this
}

// NewV1DiagnosticSpeedtestPostRequestParamsWithDefaults instantiates a new V1DiagnosticSpeedtestPostRequestParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DiagnosticSpeedtestPostRequestParamsWithDefaults() *V1DiagnosticSpeedtestPostRequestParams {
	this := V1DiagnosticSpeedtestPostRequestParams{}
	return &this
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPostRequestParams) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPostRequestParams) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPostRequestParams) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *V1DiagnosticSpeedtestPostRequestParams) SetProvider(v string) {
	o.Provider = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPostRequestParams) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPostRequestParams) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPostRequestParams) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *V1DiagnosticSpeedtestPostRequestParams) SetServerId(v string) {
	o.ServerId = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPostRequestParams) GetTarget() V1DiagnosticPacketcaptureStartPostRequestTarget {
	if o == nil || IsNil(o.Target) {
		var ret V1DiagnosticPacketcaptureStartPostRequestTarget
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPostRequestParams) GetTargetOk() (*V1DiagnosticPacketcaptureStartPostRequestTarget, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPostRequestParams) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given V1DiagnosticPacketcaptureStartPostRequestTarget and assigns it to the Target field.
func (o *V1DiagnosticSpeedtestPostRequestParams) SetTarget(v V1DiagnosticPacketcaptureStartPostRequestTarget) {
	o.Target = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPostRequestParams) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPostRequestParams) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPostRequestParams) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *V1DiagnosticSpeedtestPostRequestParams) SetToken(v string) {
	o.Token = &v
}

func (o V1DiagnosticSpeedtestPostRequestParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DiagnosticSpeedtestPostRequestParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.ServerId) {
		toSerialize["serverId"] = o.ServerId
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableV1DiagnosticSpeedtestPostRequestParams struct {
	value *V1DiagnosticSpeedtestPostRequestParams
	isSet bool
}

func (v NullableV1DiagnosticSpeedtestPostRequestParams) Get() *V1DiagnosticSpeedtestPostRequestParams {
	return v.value
}

func (v *NullableV1DiagnosticSpeedtestPostRequestParams) Set(val *V1DiagnosticSpeedtestPostRequestParams) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DiagnosticSpeedtestPostRequestParams) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DiagnosticSpeedtestPostRequestParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DiagnosticSpeedtestPostRequestParams(val *V1DiagnosticSpeedtestPostRequestParams) *NullableV1DiagnosticSpeedtestPostRequestParams {
	return &NullableV1DiagnosticSpeedtestPostRequestParams{value: val, isSet: true}
}

func (v NullableV1DiagnosticSpeedtestPostRequestParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DiagnosticSpeedtestPostRequestParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


