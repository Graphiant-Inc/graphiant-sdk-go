/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1ExtranetsSourceSegmentsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ExtranetsSourceSegmentsPostRequest{}

// V1ExtranetsSourceSegmentsPostRequest struct for V1ExtranetsSourceSegmentsPostRequest
type V1ExtranetsSourceSegmentsPostRequest struct {
	Filter *string `json:"filter,omitempty"`
	Target *V1ExtranetsPostRequestPolicyBranches `json:"target,omitempty"`
}

// NewV1ExtranetsSourceSegmentsPostRequest instantiates a new V1ExtranetsSourceSegmentsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExtranetsSourceSegmentsPostRequest() *V1ExtranetsSourceSegmentsPostRequest {
	this := V1ExtranetsSourceSegmentsPostRequest{}
	return &this
}

// NewV1ExtranetsSourceSegmentsPostRequestWithDefaults instantiates a new V1ExtranetsSourceSegmentsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExtranetsSourceSegmentsPostRequestWithDefaults() *V1ExtranetsSourceSegmentsPostRequest {
	this := V1ExtranetsSourceSegmentsPostRequest{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *V1ExtranetsSourceSegmentsPostRequest) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsSourceSegmentsPostRequest) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *V1ExtranetsSourceSegmentsPostRequest) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *V1ExtranetsSourceSegmentsPostRequest) SetFilter(v string) {
	o.Filter = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *V1ExtranetsSourceSegmentsPostRequest) GetTarget() V1ExtranetsPostRequestPolicyBranches {
	if o == nil || IsNil(o.Target) {
		var ret V1ExtranetsPostRequestPolicyBranches
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsSourceSegmentsPostRequest) GetTargetOk() (*V1ExtranetsPostRequestPolicyBranches, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *V1ExtranetsSourceSegmentsPostRequest) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given V1ExtranetsPostRequestPolicyBranches and assigns it to the Target field.
func (o *V1ExtranetsSourceSegmentsPostRequest) SetTarget(v V1ExtranetsPostRequestPolicyBranches) {
	o.Target = &v
}

func (o V1ExtranetsSourceSegmentsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ExtranetsSourceSegmentsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	return toSerialize, nil
}

type NullableV1ExtranetsSourceSegmentsPostRequest struct {
	value *V1ExtranetsSourceSegmentsPostRequest
	isSet bool
}

func (v NullableV1ExtranetsSourceSegmentsPostRequest) Get() *V1ExtranetsSourceSegmentsPostRequest {
	return v.value
}

func (v *NullableV1ExtranetsSourceSegmentsPostRequest) Set(val *V1ExtranetsSourceSegmentsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExtranetsSourceSegmentsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExtranetsSourceSegmentsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExtranetsSourceSegmentsPostRequest(val *V1ExtranetsSourceSegmentsPostRequest) *NullableV1ExtranetsSourceSegmentsPostRequest {
	return &NullableV1ExtranetsSourceSegmentsPostRequest{value: val, isSet: true}
}

func (v NullableV1ExtranetsSourceSegmentsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExtranetsSourceSegmentsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


