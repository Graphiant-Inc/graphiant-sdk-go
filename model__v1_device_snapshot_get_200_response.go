/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DeviceSnapshotGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeviceSnapshotGet200Response{}

// V1DeviceSnapshotGet200Response struct for V1DeviceSnapshotGet200Response
type V1DeviceSnapshotGet200Response struct {
	FirstSnapshot *V1DeviceSnapshotGet200ResponseFirstSnapshot `json:"firstSnapshot,omitempty"`
	SecondSnapshot *V1DeviceSnapshotGet200ResponseFirstSnapshot `json:"secondSnapshot,omitempty"`
	ThirdSnapshot *V1DeviceSnapshotGet200ResponseFirstSnapshot `json:"thirdSnapshot,omitempty"`
}

// NewV1DeviceSnapshotGet200Response instantiates a new V1DeviceSnapshotGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeviceSnapshotGet200Response() *V1DeviceSnapshotGet200Response {
	this := V1DeviceSnapshotGet200Response{}
	return &this
}

// NewV1DeviceSnapshotGet200ResponseWithDefaults instantiates a new V1DeviceSnapshotGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeviceSnapshotGet200ResponseWithDefaults() *V1DeviceSnapshotGet200Response {
	this := V1DeviceSnapshotGet200Response{}
	return &this
}

// GetFirstSnapshot returns the FirstSnapshot field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200Response) GetFirstSnapshot() V1DeviceSnapshotGet200ResponseFirstSnapshot {
	if o == nil || IsNil(o.FirstSnapshot) {
		var ret V1DeviceSnapshotGet200ResponseFirstSnapshot
		return ret
	}
	return *o.FirstSnapshot
}

// GetFirstSnapshotOk returns a tuple with the FirstSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200Response) GetFirstSnapshotOk() (*V1DeviceSnapshotGet200ResponseFirstSnapshot, bool) {
	if o == nil || IsNil(o.FirstSnapshot) {
		return nil, false
	}
	return o.FirstSnapshot, true
}

// HasFirstSnapshot returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200Response) HasFirstSnapshot() bool {
	if o != nil && !IsNil(o.FirstSnapshot) {
		return true
	}

	return false
}

// SetFirstSnapshot gets a reference to the given V1DeviceSnapshotGet200ResponseFirstSnapshot and assigns it to the FirstSnapshot field.
func (o *V1DeviceSnapshotGet200Response) SetFirstSnapshot(v V1DeviceSnapshotGet200ResponseFirstSnapshot) {
	o.FirstSnapshot = &v
}

// GetSecondSnapshot returns the SecondSnapshot field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200Response) GetSecondSnapshot() V1DeviceSnapshotGet200ResponseFirstSnapshot {
	if o == nil || IsNil(o.SecondSnapshot) {
		var ret V1DeviceSnapshotGet200ResponseFirstSnapshot
		return ret
	}
	return *o.SecondSnapshot
}

// GetSecondSnapshotOk returns a tuple with the SecondSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200Response) GetSecondSnapshotOk() (*V1DeviceSnapshotGet200ResponseFirstSnapshot, bool) {
	if o == nil || IsNil(o.SecondSnapshot) {
		return nil, false
	}
	return o.SecondSnapshot, true
}

// HasSecondSnapshot returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200Response) HasSecondSnapshot() bool {
	if o != nil && !IsNil(o.SecondSnapshot) {
		return true
	}

	return false
}

// SetSecondSnapshot gets a reference to the given V1DeviceSnapshotGet200ResponseFirstSnapshot and assigns it to the SecondSnapshot field.
func (o *V1DeviceSnapshotGet200Response) SetSecondSnapshot(v V1DeviceSnapshotGet200ResponseFirstSnapshot) {
	o.SecondSnapshot = &v
}

// GetThirdSnapshot returns the ThirdSnapshot field value if set, zero value otherwise.
func (o *V1DeviceSnapshotGet200Response) GetThirdSnapshot() V1DeviceSnapshotGet200ResponseFirstSnapshot {
	if o == nil || IsNil(o.ThirdSnapshot) {
		var ret V1DeviceSnapshotGet200ResponseFirstSnapshot
		return ret
	}
	return *o.ThirdSnapshot
}

// GetThirdSnapshotOk returns a tuple with the ThirdSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceSnapshotGet200Response) GetThirdSnapshotOk() (*V1DeviceSnapshotGet200ResponseFirstSnapshot, bool) {
	if o == nil || IsNil(o.ThirdSnapshot) {
		return nil, false
	}
	return o.ThirdSnapshot, true
}

// HasThirdSnapshot returns a boolean if a field has been set.
func (o *V1DeviceSnapshotGet200Response) HasThirdSnapshot() bool {
	if o != nil && !IsNil(o.ThirdSnapshot) {
		return true
	}

	return false
}

// SetThirdSnapshot gets a reference to the given V1DeviceSnapshotGet200ResponseFirstSnapshot and assigns it to the ThirdSnapshot field.
func (o *V1DeviceSnapshotGet200Response) SetThirdSnapshot(v V1DeviceSnapshotGet200ResponseFirstSnapshot) {
	o.ThirdSnapshot = &v
}

func (o V1DeviceSnapshotGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeviceSnapshotGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FirstSnapshot) {
		toSerialize["firstSnapshot"] = o.FirstSnapshot
	}
	if !IsNil(o.SecondSnapshot) {
		toSerialize["secondSnapshot"] = o.SecondSnapshot
	}
	if !IsNil(o.ThirdSnapshot) {
		toSerialize["thirdSnapshot"] = o.ThirdSnapshot
	}
	return toSerialize, nil
}

type NullableV1DeviceSnapshotGet200Response struct {
	value *V1DeviceSnapshotGet200Response
	isSet bool
}

func (v NullableV1DeviceSnapshotGet200Response) Get() *V1DeviceSnapshotGet200Response {
	return v.value
}

func (v *NullableV1DeviceSnapshotGet200Response) Set(val *V1DeviceSnapshotGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeviceSnapshotGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeviceSnapshotGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeviceSnapshotGet200Response(val *V1DeviceSnapshotGet200Response) *NullableV1DeviceSnapshotGet200Response {
	return &NullableV1DeviceSnapshotGet200Response{value: val, isSet: true}
}

func (v NullableV1DeviceSnapshotGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeviceSnapshotGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


