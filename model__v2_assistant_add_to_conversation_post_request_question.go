/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AssistantAddToConversationPostRequestQuestion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AssistantAddToConversationPostRequestQuestion{}

// V2AssistantAddToConversationPostRequestQuestion struct for V2AssistantAddToConversationPostRequestQuestion
type V2AssistantAddToConversationPostRequestQuestion struct {
	ConversationId *string `json:"conversationId,omitempty"`
	QuestionLanguage *string `json:"questionLanguage,omitempty"`
	QuestionText *string `json:"questionText,omitempty"`
	QuestionTimestamp *int64 `json:"questionTimestamp,omitempty"`
}

// NewV2AssistantAddToConversationPostRequestQuestion instantiates a new V2AssistantAddToConversationPostRequestQuestion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssistantAddToConversationPostRequestQuestion() *V2AssistantAddToConversationPostRequestQuestion {
	this := V2AssistantAddToConversationPostRequestQuestion{}
	return &this
}

// NewV2AssistantAddToConversationPostRequestQuestionWithDefaults instantiates a new V2AssistantAddToConversationPostRequestQuestion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssistantAddToConversationPostRequestQuestionWithDefaults() *V2AssistantAddToConversationPostRequestQuestion {
	this := V2AssistantAddToConversationPostRequestQuestion{}
	return &this
}

// GetConversationId returns the ConversationId field value if set, zero value otherwise.
func (o *V2AssistantAddToConversationPostRequestQuestion) GetConversationId() string {
	if o == nil || IsNil(o.ConversationId) {
		var ret string
		return ret
	}
	return *o.ConversationId
}

// GetConversationIdOk returns a tuple with the ConversationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantAddToConversationPostRequestQuestion) GetConversationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConversationId) {
		return nil, false
	}
	return o.ConversationId, true
}

// HasConversationId returns a boolean if a field has been set.
func (o *V2AssistantAddToConversationPostRequestQuestion) HasConversationId() bool {
	if o != nil && !IsNil(o.ConversationId) {
		return true
	}

	return false
}

// SetConversationId gets a reference to the given string and assigns it to the ConversationId field.
func (o *V2AssistantAddToConversationPostRequestQuestion) SetConversationId(v string) {
	o.ConversationId = &v
}

// GetQuestionLanguage returns the QuestionLanguage field value if set, zero value otherwise.
func (o *V2AssistantAddToConversationPostRequestQuestion) GetQuestionLanguage() string {
	if o == nil || IsNil(o.QuestionLanguage) {
		var ret string
		return ret
	}
	return *o.QuestionLanguage
}

// GetQuestionLanguageOk returns a tuple with the QuestionLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantAddToConversationPostRequestQuestion) GetQuestionLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.QuestionLanguage) {
		return nil, false
	}
	return o.QuestionLanguage, true
}

// HasQuestionLanguage returns a boolean if a field has been set.
func (o *V2AssistantAddToConversationPostRequestQuestion) HasQuestionLanguage() bool {
	if o != nil && !IsNil(o.QuestionLanguage) {
		return true
	}

	return false
}

// SetQuestionLanguage gets a reference to the given string and assigns it to the QuestionLanguage field.
func (o *V2AssistantAddToConversationPostRequestQuestion) SetQuestionLanguage(v string) {
	o.QuestionLanguage = &v
}

// GetQuestionText returns the QuestionText field value if set, zero value otherwise.
func (o *V2AssistantAddToConversationPostRequestQuestion) GetQuestionText() string {
	if o == nil || IsNil(o.QuestionText) {
		var ret string
		return ret
	}
	return *o.QuestionText
}

// GetQuestionTextOk returns a tuple with the QuestionText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantAddToConversationPostRequestQuestion) GetQuestionTextOk() (*string, bool) {
	if o == nil || IsNil(o.QuestionText) {
		return nil, false
	}
	return o.QuestionText, true
}

// HasQuestionText returns a boolean if a field has been set.
func (o *V2AssistantAddToConversationPostRequestQuestion) HasQuestionText() bool {
	if o != nil && !IsNil(o.QuestionText) {
		return true
	}

	return false
}

// SetQuestionText gets a reference to the given string and assigns it to the QuestionText field.
func (o *V2AssistantAddToConversationPostRequestQuestion) SetQuestionText(v string) {
	o.QuestionText = &v
}

// GetQuestionTimestamp returns the QuestionTimestamp field value if set, zero value otherwise.
func (o *V2AssistantAddToConversationPostRequestQuestion) GetQuestionTimestamp() int64 {
	if o == nil || IsNil(o.QuestionTimestamp) {
		var ret int64
		return ret
	}
	return *o.QuestionTimestamp
}

// GetQuestionTimestampOk returns a tuple with the QuestionTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssistantAddToConversationPostRequestQuestion) GetQuestionTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.QuestionTimestamp) {
		return nil, false
	}
	return o.QuestionTimestamp, true
}

// HasQuestionTimestamp returns a boolean if a field has been set.
func (o *V2AssistantAddToConversationPostRequestQuestion) HasQuestionTimestamp() bool {
	if o != nil && !IsNil(o.QuestionTimestamp) {
		return true
	}

	return false
}

// SetQuestionTimestamp gets a reference to the given int64 and assigns it to the QuestionTimestamp field.
func (o *V2AssistantAddToConversationPostRequestQuestion) SetQuestionTimestamp(v int64) {
	o.QuestionTimestamp = &v
}

func (o V2AssistantAddToConversationPostRequestQuestion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AssistantAddToConversationPostRequestQuestion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConversationId) {
		toSerialize["conversationId"] = o.ConversationId
	}
	if !IsNil(o.QuestionLanguage) {
		toSerialize["questionLanguage"] = o.QuestionLanguage
	}
	if !IsNil(o.QuestionText) {
		toSerialize["questionText"] = o.QuestionText
	}
	if !IsNil(o.QuestionTimestamp) {
		toSerialize["questionTimestamp"] = o.QuestionTimestamp
	}
	return toSerialize, nil
}

type NullableV2AssistantAddToConversationPostRequestQuestion struct {
	value *V2AssistantAddToConversationPostRequestQuestion
	isSet bool
}

func (v NullableV2AssistantAddToConversationPostRequestQuestion) Get() *V2AssistantAddToConversationPostRequestQuestion {
	return v.value
}

func (v *NullableV2AssistantAddToConversationPostRequestQuestion) Set(val *V2AssistantAddToConversationPostRequestQuestion) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssistantAddToConversationPostRequestQuestion) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssistantAddToConversationPostRequestQuestion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssistantAddToConversationPostRequestQuestion(val *V2AssistantAddToConversationPostRequestQuestion) *NullableV2AssistantAddToConversationPostRequestQuestion {
	return &NullableV2AssistantAddToConversationPostRequestQuestion{value: val, isSet: true}
}

func (v NullableV2AssistantAddToConversationPostRequestQuestion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssistantAddToConversationPostRequestQuestion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


