/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2MonitoringSegmentRouteCountsPost200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2MonitoringSegmentRouteCountsPost200ResponseDataInner{}

// V2MonitoringSegmentRouteCountsPost200ResponseDataInner struct for V2MonitoringSegmentRouteCountsPost200ResponseDataInner
type V2MonitoringSegmentRouteCountsPost200ResponseDataInner struct {
	DeviceId *int64 `json:"deviceId,omitempty"`
	Ipv4RouteCount *V2MonitoringBfdPost200ResponseDataInnerSamplesInner `json:"ipv4RouteCount,omitempty"`
	Ipv6RouteCount *V2MonitoringBfdPost200ResponseDataInnerSamplesInner `json:"ipv6RouteCount,omitempty"`
	SegmentName *string `json:"segmentName,omitempty"`
}

// NewV2MonitoringSegmentRouteCountsPost200ResponseDataInner instantiates a new V2MonitoringSegmentRouteCountsPost200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2MonitoringSegmentRouteCountsPost200ResponseDataInner() *V2MonitoringSegmentRouteCountsPost200ResponseDataInner {
	this := V2MonitoringSegmentRouteCountsPost200ResponseDataInner{}
	return &this
}

// NewV2MonitoringSegmentRouteCountsPost200ResponseDataInnerWithDefaults instantiates a new V2MonitoringSegmentRouteCountsPost200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2MonitoringSegmentRouteCountsPost200ResponseDataInnerWithDefaults() *V2MonitoringSegmentRouteCountsPost200ResponseDataInner {
	this := V2MonitoringSegmentRouteCountsPost200ResponseDataInner{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetIpv4RouteCount returns the Ipv4RouteCount field value if set, zero value otherwise.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) GetIpv4RouteCount() V2MonitoringBfdPost200ResponseDataInnerSamplesInner {
	if o == nil || IsNil(o.Ipv4RouteCount) {
		var ret V2MonitoringBfdPost200ResponseDataInnerSamplesInner
		return ret
	}
	return *o.Ipv4RouteCount
}

// GetIpv4RouteCountOk returns a tuple with the Ipv4RouteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) GetIpv4RouteCountOk() (*V2MonitoringBfdPost200ResponseDataInnerSamplesInner, bool) {
	if o == nil || IsNil(o.Ipv4RouteCount) {
		return nil, false
	}
	return o.Ipv4RouteCount, true
}

// HasIpv4RouteCount returns a boolean if a field has been set.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) HasIpv4RouteCount() bool {
	if o != nil && !IsNil(o.Ipv4RouteCount) {
		return true
	}

	return false
}

// SetIpv4RouteCount gets a reference to the given V2MonitoringBfdPost200ResponseDataInnerSamplesInner and assigns it to the Ipv4RouteCount field.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) SetIpv4RouteCount(v V2MonitoringBfdPost200ResponseDataInnerSamplesInner) {
	o.Ipv4RouteCount = &v
}

// GetIpv6RouteCount returns the Ipv6RouteCount field value if set, zero value otherwise.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) GetIpv6RouteCount() V2MonitoringBfdPost200ResponseDataInnerSamplesInner {
	if o == nil || IsNil(o.Ipv6RouteCount) {
		var ret V2MonitoringBfdPost200ResponseDataInnerSamplesInner
		return ret
	}
	return *o.Ipv6RouteCount
}

// GetIpv6RouteCountOk returns a tuple with the Ipv6RouteCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) GetIpv6RouteCountOk() (*V2MonitoringBfdPost200ResponseDataInnerSamplesInner, bool) {
	if o == nil || IsNil(o.Ipv6RouteCount) {
		return nil, false
	}
	return o.Ipv6RouteCount, true
}

// HasIpv6RouteCount returns a boolean if a field has been set.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) HasIpv6RouteCount() bool {
	if o != nil && !IsNil(o.Ipv6RouteCount) {
		return true
	}

	return false
}

// SetIpv6RouteCount gets a reference to the given V2MonitoringBfdPost200ResponseDataInnerSamplesInner and assigns it to the Ipv6RouteCount field.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) SetIpv6RouteCount(v V2MonitoringBfdPost200ResponseDataInnerSamplesInner) {
	o.Ipv6RouteCount = &v
}

// GetSegmentName returns the SegmentName field value if set, zero value otherwise.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) GetSegmentName() string {
	if o == nil || IsNil(o.SegmentName) {
		var ret string
		return ret
	}
	return *o.SegmentName
}

// GetSegmentNameOk returns a tuple with the SegmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) GetSegmentNameOk() (*string, bool) {
	if o == nil || IsNil(o.SegmentName) {
		return nil, false
	}
	return o.SegmentName, true
}

// HasSegmentName returns a boolean if a field has been set.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) HasSegmentName() bool {
	if o != nil && !IsNil(o.SegmentName) {
		return true
	}

	return false
}

// SetSegmentName gets a reference to the given string and assigns it to the SegmentName field.
func (o *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) SetSegmentName(v string) {
	o.SegmentName = &v
}

func (o V2MonitoringSegmentRouteCountsPost200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2MonitoringSegmentRouteCountsPost200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.Ipv4RouteCount) {
		toSerialize["ipv4RouteCount"] = o.Ipv4RouteCount
	}
	if !IsNil(o.Ipv6RouteCount) {
		toSerialize["ipv6RouteCount"] = o.Ipv6RouteCount
	}
	if !IsNil(o.SegmentName) {
		toSerialize["segmentName"] = o.SegmentName
	}
	return toSerialize, nil
}

type NullableV2MonitoringSegmentRouteCountsPost200ResponseDataInner struct {
	value *V2MonitoringSegmentRouteCountsPost200ResponseDataInner
	isSet bool
}

func (v NullableV2MonitoringSegmentRouteCountsPost200ResponseDataInner) Get() *V2MonitoringSegmentRouteCountsPost200ResponseDataInner {
	return v.value
}

func (v *NullableV2MonitoringSegmentRouteCountsPost200ResponseDataInner) Set(val *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2MonitoringSegmentRouteCountsPost200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2MonitoringSegmentRouteCountsPost200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2MonitoringSegmentRouteCountsPost200ResponseDataInner(val *V2MonitoringSegmentRouteCountsPost200ResponseDataInner) *NullableV2MonitoringSegmentRouteCountsPost200ResponseDataInner {
	return &NullableV2MonitoringSegmentRouteCountsPost200ResponseDataInner{value: val, isSet: true}
}

func (v NullableV2MonitoringSegmentRouteCountsPost200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2MonitoringSegmentRouteCountsPost200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


