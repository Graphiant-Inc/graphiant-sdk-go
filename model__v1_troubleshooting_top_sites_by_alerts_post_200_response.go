/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1TroubleshootingTopSitesByAlertsPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TroubleshootingTopSitesByAlertsPost200Response{}

// V1TroubleshootingTopSitesByAlertsPost200Response struct for V1TroubleshootingTopSitesByAlertsPost200Response
type V1TroubleshootingTopSitesByAlertsPost200Response struct {
	ControlPlane *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane `json:"controlPlane,omitempty"`
	DataPlane *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane `json:"dataPlane,omitempty"`
	SystemPlane *V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane `json:"systemPlane,omitempty"`
}

// NewV1TroubleshootingTopSitesByAlertsPost200Response instantiates a new V1TroubleshootingTopSitesByAlertsPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TroubleshootingTopSitesByAlertsPost200Response() *V1TroubleshootingTopSitesByAlertsPost200Response {
	this := V1TroubleshootingTopSitesByAlertsPost200Response{}
	return &this
}

// NewV1TroubleshootingTopSitesByAlertsPost200ResponseWithDefaults instantiates a new V1TroubleshootingTopSitesByAlertsPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TroubleshootingTopSitesByAlertsPost200ResponseWithDefaults() *V1TroubleshootingTopSitesByAlertsPost200Response {
	this := V1TroubleshootingTopSitesByAlertsPost200Response{}
	return &this
}

// GetControlPlane returns the ControlPlane field value if set, zero value otherwise.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) GetControlPlane() V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane {
	if o == nil || IsNil(o.ControlPlane) {
		var ret V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane
		return ret
	}
	return *o.ControlPlane
}

// GetControlPlaneOk returns a tuple with the ControlPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) GetControlPlaneOk() (*V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane, bool) {
	if o == nil || IsNil(o.ControlPlane) {
		return nil, false
	}
	return o.ControlPlane, true
}

// HasControlPlane returns a boolean if a field has been set.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) HasControlPlane() bool {
	if o != nil && !IsNil(o.ControlPlane) {
		return true
	}

	return false
}

// SetControlPlane gets a reference to the given V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane and assigns it to the ControlPlane field.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) SetControlPlane(v V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) {
	o.ControlPlane = &v
}

// GetDataPlane returns the DataPlane field value if set, zero value otherwise.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) GetDataPlane() V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane {
	if o == nil || IsNil(o.DataPlane) {
		var ret V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane
		return ret
	}
	return *o.DataPlane
}

// GetDataPlaneOk returns a tuple with the DataPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) GetDataPlaneOk() (*V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane, bool) {
	if o == nil || IsNil(o.DataPlane) {
		return nil, false
	}
	return o.DataPlane, true
}

// HasDataPlane returns a boolean if a field has been set.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) HasDataPlane() bool {
	if o != nil && !IsNil(o.DataPlane) {
		return true
	}

	return false
}

// SetDataPlane gets a reference to the given V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane and assigns it to the DataPlane field.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) SetDataPlane(v V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) {
	o.DataPlane = &v
}

// GetSystemPlane returns the SystemPlane field value if set, zero value otherwise.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) GetSystemPlane() V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane {
	if o == nil || IsNil(o.SystemPlane) {
		var ret V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane
		return ret
	}
	return *o.SystemPlane
}

// GetSystemPlaneOk returns a tuple with the SystemPlane field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) GetSystemPlaneOk() (*V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane, bool) {
	if o == nil || IsNil(o.SystemPlane) {
		return nil, false
	}
	return o.SystemPlane, true
}

// HasSystemPlane returns a boolean if a field has been set.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) HasSystemPlane() bool {
	if o != nil && !IsNil(o.SystemPlane) {
		return true
	}

	return false
}

// SetSystemPlane gets a reference to the given V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane and assigns it to the SystemPlane field.
func (o *V1TroubleshootingTopSitesByAlertsPost200Response) SetSystemPlane(v V1TroubleshootingTopSitesByAlertsPost200ResponseControlPlane) {
	o.SystemPlane = &v
}

func (o V1TroubleshootingTopSitesByAlertsPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TroubleshootingTopSitesByAlertsPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ControlPlane) {
		toSerialize["controlPlane"] = o.ControlPlane
	}
	if !IsNil(o.DataPlane) {
		toSerialize["dataPlane"] = o.DataPlane
	}
	if !IsNil(o.SystemPlane) {
		toSerialize["systemPlane"] = o.SystemPlane
	}
	return toSerialize, nil
}

type NullableV1TroubleshootingTopSitesByAlertsPost200Response struct {
	value *V1TroubleshootingTopSitesByAlertsPost200Response
	isSet bool
}

func (v NullableV1TroubleshootingTopSitesByAlertsPost200Response) Get() *V1TroubleshootingTopSitesByAlertsPost200Response {
	return v.value
}

func (v *NullableV1TroubleshootingTopSitesByAlertsPost200Response) Set(val *V1TroubleshootingTopSitesByAlertsPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TroubleshootingTopSitesByAlertsPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TroubleshootingTopSitesByAlertsPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TroubleshootingTopSitesByAlertsPost200Response(val *V1TroubleshootingTopSitesByAlertsPost200Response) *NullableV1TroubleshootingTopSitesByAlertsPost200Response {
	return &NullableV1TroubleshootingTopSitesByAlertsPost200Response{value: val, isSet: true}
}

func (v NullableV1TroubleshootingTopSitesByAlertsPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TroubleshootingTopSitesByAlertsPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


