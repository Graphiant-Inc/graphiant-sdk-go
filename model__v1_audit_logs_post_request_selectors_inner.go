/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1AuditLogsPostRequestSelectorsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AuditLogsPostRequestSelectorsInner{}

// V1AuditLogsPostRequestSelectorsInner struct for V1AuditLogsPostRequestSelectorsInner
type V1AuditLogsPostRequestSelectorsInner struct {
	Field *string `json:"field,omitempty"`
	Values []string `json:"values,omitempty"`
}

// NewV1AuditLogsPostRequestSelectorsInner instantiates a new V1AuditLogsPostRequestSelectorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AuditLogsPostRequestSelectorsInner() *V1AuditLogsPostRequestSelectorsInner {
	this := V1AuditLogsPostRequestSelectorsInner{}
	return &this
}

// NewV1AuditLogsPostRequestSelectorsInnerWithDefaults instantiates a new V1AuditLogsPostRequestSelectorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AuditLogsPostRequestSelectorsInnerWithDefaults() *V1AuditLogsPostRequestSelectorsInner {
	this := V1AuditLogsPostRequestSelectorsInner{}
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *V1AuditLogsPostRequestSelectorsInner) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditLogsPostRequestSelectorsInner) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *V1AuditLogsPostRequestSelectorsInner) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *V1AuditLogsPostRequestSelectorsInner) SetField(v string) {
	o.Field = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *V1AuditLogsPostRequestSelectorsInner) GetValues() []string {
	if o == nil || IsNil(o.Values) {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AuditLogsPostRequestSelectorsInner) GetValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *V1AuditLogsPostRequestSelectorsInner) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *V1AuditLogsPostRequestSelectorsInner) SetValues(v []string) {
	o.Values = v
}

func (o V1AuditLogsPostRequestSelectorsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AuditLogsPostRequestSelectorsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableV1AuditLogsPostRequestSelectorsInner struct {
	value *V1AuditLogsPostRequestSelectorsInner
	isSet bool
}

func (v NullableV1AuditLogsPostRequestSelectorsInner) Get() *V1AuditLogsPostRequestSelectorsInner {
	return v.value
}

func (v *NullableV1AuditLogsPostRequestSelectorsInner) Set(val *V1AuditLogsPostRequestSelectorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AuditLogsPostRequestSelectorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AuditLogsPostRequestSelectorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AuditLogsPostRequestSelectorsInner(val *V1AuditLogsPostRequestSelectorsInner) *NullableV1AuditLogsPostRequestSelectorsInner {
	return &NullableV1AuditLogsPostRequestSelectorsInner{value: val, isSet: true}
}

func (v NullableV1AuditLogsPostRequestSelectorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AuditLogsPostRequestSelectorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


