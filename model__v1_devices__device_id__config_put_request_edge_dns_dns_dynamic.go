/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic{}

// V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic struct for V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic
type V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic struct {
	CircuitName *string `json:"circuitName,omitempty"`
	InterfaceName *string `json:"interfaceName,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic instantiates a new V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic() *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic {
	this := V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamicWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamicWithDefaults() *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic {
	this := V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic{}
	return &this
}

// GetCircuitName returns the CircuitName field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) GetCircuitName() string {
	if o == nil || IsNil(o.CircuitName) {
		var ret string
		return ret
	}
	return *o.CircuitName
}

// GetCircuitNameOk returns a tuple with the CircuitName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) GetCircuitNameOk() (*string, bool) {
	if o == nil || IsNil(o.CircuitName) {
		return nil, false
	}
	return o.CircuitName, true
}

// HasCircuitName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) HasCircuitName() bool {
	if o != nil && !IsNil(o.CircuitName) {
		return true
	}

	return false
}

// SetCircuitName gets a reference to the given string and assigns it to the CircuitName field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) SetCircuitName(v string) {
	o.CircuitName = &v
}

// GetInterfaceName returns the InterfaceName field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) GetInterfaceName() string {
	if o == nil || IsNil(o.InterfaceName) {
		var ret string
		return ret
	}
	return *o.InterfaceName
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) GetInterfaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceName) {
		return nil, false
	}
	return o.InterfaceName, true
}

// HasInterfaceName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) HasInterfaceName() bool {
	if o != nil && !IsNil(o.InterfaceName) {
		return true
	}

	return false
}

// SetInterfaceName gets a reference to the given string and assigns it to the InterfaceName field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) SetInterfaceName(v string) {
	o.InterfaceName = &v
}

func (o V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CircuitName) {
		toSerialize["circuitName"] = o.CircuitName
	}
	if !IsNil(o.InterfaceName) {
		toSerialize["interfaceName"] = o.InterfaceName
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic struct {
	value *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) Get() *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) Set(val *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic(val *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) *NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic {
	return &NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


