/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1ExtranetsMonitoringNatUsageGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ExtranetsMonitoringNatUsageGet200Response{}

// V1ExtranetsMonitoringNatUsageGet200Response struct for V1ExtranetsMonitoringNatUsageGet200Response
type V1ExtranetsMonitoringNatUsageGet200Response struct {
	AllocatedCount *int32 `json:"allocatedCount,omitempty"`
	Allocations []V1ExtranetsMonitoringNatUsageGet200ResponseAllocationsInner `json:"allocations,omitempty"`
	UsageCount *int32 `json:"usageCount,omitempty"`
}

// NewV1ExtranetsMonitoringNatUsageGet200Response instantiates a new V1ExtranetsMonitoringNatUsageGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExtranetsMonitoringNatUsageGet200Response() *V1ExtranetsMonitoringNatUsageGet200Response {
	this := V1ExtranetsMonitoringNatUsageGet200Response{}
	return &this
}

// NewV1ExtranetsMonitoringNatUsageGet200ResponseWithDefaults instantiates a new V1ExtranetsMonitoringNatUsageGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExtranetsMonitoringNatUsageGet200ResponseWithDefaults() *V1ExtranetsMonitoringNatUsageGet200Response {
	this := V1ExtranetsMonitoringNatUsageGet200Response{}
	return &this
}

// GetAllocatedCount returns the AllocatedCount field value if set, zero value otherwise.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) GetAllocatedCount() int32 {
	if o == nil || IsNil(o.AllocatedCount) {
		var ret int32
		return ret
	}
	return *o.AllocatedCount
}

// GetAllocatedCountOk returns a tuple with the AllocatedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) GetAllocatedCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AllocatedCount) {
		return nil, false
	}
	return o.AllocatedCount, true
}

// HasAllocatedCount returns a boolean if a field has been set.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) HasAllocatedCount() bool {
	if o != nil && !IsNil(o.AllocatedCount) {
		return true
	}

	return false
}

// SetAllocatedCount gets a reference to the given int32 and assigns it to the AllocatedCount field.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) SetAllocatedCount(v int32) {
	o.AllocatedCount = &v
}

// GetAllocations returns the Allocations field value if set, zero value otherwise.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) GetAllocations() []V1ExtranetsMonitoringNatUsageGet200ResponseAllocationsInner {
	if o == nil || IsNil(o.Allocations) {
		var ret []V1ExtranetsMonitoringNatUsageGet200ResponseAllocationsInner
		return ret
	}
	return o.Allocations
}

// GetAllocationsOk returns a tuple with the Allocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) GetAllocationsOk() ([]V1ExtranetsMonitoringNatUsageGet200ResponseAllocationsInner, bool) {
	if o == nil || IsNil(o.Allocations) {
		return nil, false
	}
	return o.Allocations, true
}

// HasAllocations returns a boolean if a field has been set.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) HasAllocations() bool {
	if o != nil && !IsNil(o.Allocations) {
		return true
	}

	return false
}

// SetAllocations gets a reference to the given []V1ExtranetsMonitoringNatUsageGet200ResponseAllocationsInner and assigns it to the Allocations field.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) SetAllocations(v []V1ExtranetsMonitoringNatUsageGet200ResponseAllocationsInner) {
	o.Allocations = v
}

// GetUsageCount returns the UsageCount field value if set, zero value otherwise.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) GetUsageCount() int32 {
	if o == nil || IsNil(o.UsageCount) {
		var ret int32
		return ret
	}
	return *o.UsageCount
}

// GetUsageCountOk returns a tuple with the UsageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) GetUsageCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UsageCount) {
		return nil, false
	}
	return o.UsageCount, true
}

// HasUsageCount returns a boolean if a field has been set.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) HasUsageCount() bool {
	if o != nil && !IsNil(o.UsageCount) {
		return true
	}

	return false
}

// SetUsageCount gets a reference to the given int32 and assigns it to the UsageCount field.
func (o *V1ExtranetsMonitoringNatUsageGet200Response) SetUsageCount(v int32) {
	o.UsageCount = &v
}

func (o V1ExtranetsMonitoringNatUsageGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ExtranetsMonitoringNatUsageGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllocatedCount) {
		toSerialize["allocatedCount"] = o.AllocatedCount
	}
	if !IsNil(o.Allocations) {
		toSerialize["allocations"] = o.Allocations
	}
	if !IsNil(o.UsageCount) {
		toSerialize["usageCount"] = o.UsageCount
	}
	return toSerialize, nil
}

type NullableV1ExtranetsMonitoringNatUsageGet200Response struct {
	value *V1ExtranetsMonitoringNatUsageGet200Response
	isSet bool
}

func (v NullableV1ExtranetsMonitoringNatUsageGet200Response) Get() *V1ExtranetsMonitoringNatUsageGet200Response {
	return v.value
}

func (v *NullableV1ExtranetsMonitoringNatUsageGet200Response) Set(val *V1ExtranetsMonitoringNatUsageGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExtranetsMonitoringNatUsageGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExtranetsMonitoringNatUsageGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExtranetsMonitoringNatUsageGet200Response(val *V1ExtranetsMonitoringNatUsageGet200Response) *NullableV1ExtranetsMonitoringNatUsageGet200Response {
	return &NullableV1ExtranetsMonitoringNatUsageGet200Response{value: val, isSet: true}
}

func (v NullableV1ExtranetsMonitoringNatUsageGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExtranetsMonitoringNatUsageGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


