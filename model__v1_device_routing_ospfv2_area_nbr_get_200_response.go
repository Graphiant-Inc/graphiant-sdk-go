/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DeviceRoutingOspfv2AreaNbrGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeviceRoutingOspfv2AreaNbrGet200Response{}

// V1DeviceRoutingOspfv2AreaNbrGet200Response struct for V1DeviceRoutingOspfv2AreaNbrGet200Response
type V1DeviceRoutingOspfv2AreaNbrGet200Response struct {
	Nbrs []V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner `json:"nbrs,omitempty"`
	PageInfo *V1NatEntriesDeviceIdGet200ResponsePageInfo `json:"pageInfo,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewV1DeviceRoutingOspfv2AreaNbrGet200Response instantiates a new V1DeviceRoutingOspfv2AreaNbrGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeviceRoutingOspfv2AreaNbrGet200Response() *V1DeviceRoutingOspfv2AreaNbrGet200Response {
	this := V1DeviceRoutingOspfv2AreaNbrGet200Response{}
	return &this
}

// NewV1DeviceRoutingOspfv2AreaNbrGet200ResponseWithDefaults instantiates a new V1DeviceRoutingOspfv2AreaNbrGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeviceRoutingOspfv2AreaNbrGet200ResponseWithDefaults() *V1DeviceRoutingOspfv2AreaNbrGet200Response {
	this := V1DeviceRoutingOspfv2AreaNbrGet200Response{}
	return &this
}

// GetNbrs returns the Nbrs field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) GetNbrs() []V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner {
	if o == nil || IsNil(o.Nbrs) {
		var ret []V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner
		return ret
	}
	return o.Nbrs
}

// GetNbrsOk returns a tuple with the Nbrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) GetNbrsOk() ([]V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner, bool) {
	if o == nil || IsNil(o.Nbrs) {
		return nil, false
	}
	return o.Nbrs, true
}

// HasNbrs returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) HasNbrs() bool {
	if o != nil && !IsNil(o.Nbrs) {
		return true
	}

	return false
}

// SetNbrs gets a reference to the given []V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner and assigns it to the Nbrs field.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) SetNbrs(v []V1DeviceRoutingOspfv2AreaNbrGet200ResponseNbrsInner) {
	o.Nbrs = v
}

// GetPageInfo returns the PageInfo field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) GetPageInfo() V1NatEntriesDeviceIdGet200ResponsePageInfo {
	if o == nil || IsNil(o.PageInfo) {
		var ret V1NatEntriesDeviceIdGet200ResponsePageInfo
		return ret
	}
	return *o.PageInfo
}

// GetPageInfoOk returns a tuple with the PageInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) GetPageInfoOk() (*V1NatEntriesDeviceIdGet200ResponsePageInfo, bool) {
	if o == nil || IsNil(o.PageInfo) {
		return nil, false
	}
	return o.PageInfo, true
}

// HasPageInfo returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) HasPageInfo() bool {
	if o != nil && !IsNil(o.PageInfo) {
		return true
	}

	return false
}

// SetPageInfo gets a reference to the given V1NatEntriesDeviceIdGet200ResponsePageInfo and assigns it to the PageInfo field.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) SetPageInfo(v V1NatEntriesDeviceIdGet200ResponsePageInfo) {
	o.PageInfo = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *V1DeviceRoutingOspfv2AreaNbrGet200Response) SetToken(v string) {
	o.Token = &v
}

func (o V1DeviceRoutingOspfv2AreaNbrGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeviceRoutingOspfv2AreaNbrGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Nbrs) {
		toSerialize["nbrs"] = o.Nbrs
	}
	if !IsNil(o.PageInfo) {
		toSerialize["pageInfo"] = o.PageInfo
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableV1DeviceRoutingOspfv2AreaNbrGet200Response struct {
	value *V1DeviceRoutingOspfv2AreaNbrGet200Response
	isSet bool
}

func (v NullableV1DeviceRoutingOspfv2AreaNbrGet200Response) Get() *V1DeviceRoutingOspfv2AreaNbrGet200Response {
	return v.value
}

func (v *NullableV1DeviceRoutingOspfv2AreaNbrGet200Response) Set(val *V1DeviceRoutingOspfv2AreaNbrGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeviceRoutingOspfv2AreaNbrGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeviceRoutingOspfv2AreaNbrGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeviceRoutingOspfv2AreaNbrGet200Response(val *V1DeviceRoutingOspfv2AreaNbrGet200Response) *NullableV1DeviceRoutingOspfv2AreaNbrGet200Response {
	return &NullableV1DeviceRoutingOspfv2AreaNbrGet200Response{value: val, isSet: true}
}

func (v NullableV1DeviceRoutingOspfv2AreaNbrGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeviceRoutingOspfv2AreaNbrGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


