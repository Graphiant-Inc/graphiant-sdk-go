/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1GatewaysPutRequestDetailsIpsecGatewayTunnel1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1GatewaysPutRequestDetailsIpsecGatewayTunnel1{}

// V1GatewaysPutRequestDetailsIpsecGatewayTunnel1 struct for V1GatewaysPutRequestDetailsIpsecGatewayTunnel1
type V1GatewaysPutRequestDetailsIpsecGatewayTunnel1 struct {
	InsideIpv4Cidr *string `json:"insideIpv4Cidr,omitempty"`
	InsideIpv6Cidr *string `json:"insideIpv6Cidr,omitempty"`
	LocalIkePeerIdentity *string `json:"localIkePeerIdentity,omitempty"`
	Psk *string `json:"psk,omitempty"`
}

// NewV1GatewaysPutRequestDetailsIpsecGatewayTunnel1 instantiates a new V1GatewaysPutRequestDetailsIpsecGatewayTunnel1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GatewaysPutRequestDetailsIpsecGatewayTunnel1() *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1 {
	this := V1GatewaysPutRequestDetailsIpsecGatewayTunnel1{}
	return &this
}

// NewV1GatewaysPutRequestDetailsIpsecGatewayTunnel1WithDefaults instantiates a new V1GatewaysPutRequestDetailsIpsecGatewayTunnel1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GatewaysPutRequestDetailsIpsecGatewayTunnel1WithDefaults() *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1 {
	this := V1GatewaysPutRequestDetailsIpsecGatewayTunnel1{}
	return &this
}

// GetInsideIpv4Cidr returns the InsideIpv4Cidr field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) GetInsideIpv4Cidr() string {
	if o == nil || IsNil(o.InsideIpv4Cidr) {
		var ret string
		return ret
	}
	return *o.InsideIpv4Cidr
}

// GetInsideIpv4CidrOk returns a tuple with the InsideIpv4Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) GetInsideIpv4CidrOk() (*string, bool) {
	if o == nil || IsNil(o.InsideIpv4Cidr) {
		return nil, false
	}
	return o.InsideIpv4Cidr, true
}

// HasInsideIpv4Cidr returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) HasInsideIpv4Cidr() bool {
	if o != nil && !IsNil(o.InsideIpv4Cidr) {
		return true
	}

	return false
}

// SetInsideIpv4Cidr gets a reference to the given string and assigns it to the InsideIpv4Cidr field.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) SetInsideIpv4Cidr(v string) {
	o.InsideIpv4Cidr = &v
}

// GetInsideIpv6Cidr returns the InsideIpv6Cidr field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) GetInsideIpv6Cidr() string {
	if o == nil || IsNil(o.InsideIpv6Cidr) {
		var ret string
		return ret
	}
	return *o.InsideIpv6Cidr
}

// GetInsideIpv6CidrOk returns a tuple with the InsideIpv6Cidr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) GetInsideIpv6CidrOk() (*string, bool) {
	if o == nil || IsNil(o.InsideIpv6Cidr) {
		return nil, false
	}
	return o.InsideIpv6Cidr, true
}

// HasInsideIpv6Cidr returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) HasInsideIpv6Cidr() bool {
	if o != nil && !IsNil(o.InsideIpv6Cidr) {
		return true
	}

	return false
}

// SetInsideIpv6Cidr gets a reference to the given string and assigns it to the InsideIpv6Cidr field.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) SetInsideIpv6Cidr(v string) {
	o.InsideIpv6Cidr = &v
}

// GetLocalIkePeerIdentity returns the LocalIkePeerIdentity field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) GetLocalIkePeerIdentity() string {
	if o == nil || IsNil(o.LocalIkePeerIdentity) {
		var ret string
		return ret
	}
	return *o.LocalIkePeerIdentity
}

// GetLocalIkePeerIdentityOk returns a tuple with the LocalIkePeerIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) GetLocalIkePeerIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.LocalIkePeerIdentity) {
		return nil, false
	}
	return o.LocalIkePeerIdentity, true
}

// HasLocalIkePeerIdentity returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) HasLocalIkePeerIdentity() bool {
	if o != nil && !IsNil(o.LocalIkePeerIdentity) {
		return true
	}

	return false
}

// SetLocalIkePeerIdentity gets a reference to the given string and assigns it to the LocalIkePeerIdentity field.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) SetLocalIkePeerIdentity(v string) {
	o.LocalIkePeerIdentity = &v
}

// GetPsk returns the Psk field value if set, zero value otherwise.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) GetPsk() string {
	if o == nil || IsNil(o.Psk) {
		var ret string
		return ret
	}
	return *o.Psk
}

// GetPskOk returns a tuple with the Psk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) GetPskOk() (*string, bool) {
	if o == nil || IsNil(o.Psk) {
		return nil, false
	}
	return o.Psk, true
}

// HasPsk returns a boolean if a field has been set.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) HasPsk() bool {
	if o != nil && !IsNil(o.Psk) {
		return true
	}

	return false
}

// SetPsk gets a reference to the given string and assigns it to the Psk field.
func (o *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) SetPsk(v string) {
	o.Psk = &v
}

func (o V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InsideIpv4Cidr) {
		toSerialize["insideIpv4Cidr"] = o.InsideIpv4Cidr
	}
	if !IsNil(o.InsideIpv6Cidr) {
		toSerialize["insideIpv6Cidr"] = o.InsideIpv6Cidr
	}
	if !IsNil(o.LocalIkePeerIdentity) {
		toSerialize["localIkePeerIdentity"] = o.LocalIkePeerIdentity
	}
	if !IsNil(o.Psk) {
		toSerialize["psk"] = o.Psk
	}
	return toSerialize, nil
}

type NullableV1GatewaysPutRequestDetailsIpsecGatewayTunnel1 struct {
	value *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1
	isSet bool
}

func (v NullableV1GatewaysPutRequestDetailsIpsecGatewayTunnel1) Get() *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1 {
	return v.value
}

func (v *NullableV1GatewaysPutRequestDetailsIpsecGatewayTunnel1) Set(val *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GatewaysPutRequestDetailsIpsecGatewayTunnel1) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GatewaysPutRequestDetailsIpsecGatewayTunnel1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GatewaysPutRequestDetailsIpsecGatewayTunnel1(val *V1GatewaysPutRequestDetailsIpsecGatewayTunnel1) *NullableV1GatewaysPutRequestDetailsIpsecGatewayTunnel1 {
	return &NullableV1GatewaysPutRequestDetailsIpsecGatewayTunnel1{value: val, isSet: true}
}

func (v NullableV1GatewaysPutRequestDetailsIpsecGatewayTunnel1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GatewaysPutRequestDetailsIpsecGatewayTunnel1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


