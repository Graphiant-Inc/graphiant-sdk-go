/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCore{}

// V1DevicesDeviceIdConfigPutRequestCore struct for V1DevicesDeviceIdConfigPutRequestCore
type V1DevicesDeviceIdConfigPutRequestCore struct {
	BgpInstance *V1DevicesDeviceIdConfigPutRequestCoreBgpInstance `json:"bgpInstance,omitempty"`
	CoreVrf *V1DevicesDeviceIdConfigPutRequestCoreCoreVrf `json:"coreVrf,omitempty"`
	Interfaces *map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValue `json:"interfaces,omitempty"`
	IpfixExporters *map[string]V1GlobalConfigPatchRequestIpfixExportersValue `json:"ipfixExporters,omitempty"`
	IspVrfs *map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf `json:"ispVrfs,omitempty"`
	MaintenanceMode *bool `json:"maintenanceMode,omitempty"`
	Name *string `json:"name,omitempty"`
	PrefixSets *map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue `json:"prefixSets,omitempty"`
	Prometheus *V1DevicesDeviceIdConfigPutRequestCorePrometheus `json:"prometheus,omitempty"`
	Region *string `json:"region,omitempty"`
	RegionName *string `json:"regionName,omitempty"`
	RoutePolicies *map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue `json:"routePolicies,omitempty"`
	Site *V1SitesPostRequestSite `json:"site,omitempty"`
	TrafficPolicy *V1GlobalConfigPatchRequestTrafficPolicies `json:"trafficPolicy,omitempty"`
	Vrfs *map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf `json:"vrfs,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCore instantiates a new V1DevicesDeviceIdConfigPutRequestCore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCore() *V1DevicesDeviceIdConfigPutRequestCore {
	this := V1DevicesDeviceIdConfigPutRequestCore{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreWithDefaults() *V1DevicesDeviceIdConfigPutRequestCore {
	this := V1DevicesDeviceIdConfigPutRequestCore{}
	return &this
}

// GetBgpInstance returns the BgpInstance field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetBgpInstance() V1DevicesDeviceIdConfigPutRequestCoreBgpInstance {
	if o == nil || IsNil(o.BgpInstance) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreBgpInstance
		return ret
	}
	return *o.BgpInstance
}

// GetBgpInstanceOk returns a tuple with the BgpInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetBgpInstanceOk() (*V1DevicesDeviceIdConfigPutRequestCoreBgpInstance, bool) {
	if o == nil || IsNil(o.BgpInstance) {
		return nil, false
	}
	return o.BgpInstance, true
}

// HasBgpInstance returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasBgpInstance() bool {
	if o != nil && !IsNil(o.BgpInstance) {
		return true
	}

	return false
}

// SetBgpInstance gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreBgpInstance and assigns it to the BgpInstance field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetBgpInstance(v V1DevicesDeviceIdConfigPutRequestCoreBgpInstance) {
	o.BgpInstance = &v
}

// GetCoreVrf returns the CoreVrf field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetCoreVrf() V1DevicesDeviceIdConfigPutRequestCoreCoreVrf {
	if o == nil || IsNil(o.CoreVrf) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreCoreVrf
		return ret
	}
	return *o.CoreVrf
}

// GetCoreVrfOk returns a tuple with the CoreVrf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetCoreVrfOk() (*V1DevicesDeviceIdConfigPutRequestCoreCoreVrf, bool) {
	if o == nil || IsNil(o.CoreVrf) {
		return nil, false
	}
	return o.CoreVrf, true
}

// HasCoreVrf returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasCoreVrf() bool {
	if o != nil && !IsNil(o.CoreVrf) {
		return true
	}

	return false
}

// SetCoreVrf gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreCoreVrf and assigns it to the CoreVrf field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetCoreVrf(v V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) {
	o.CoreVrf = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetInterfaces() map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValue {
	if o == nil || IsNil(o.Interfaces) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValue
		return ret
	}
	return *o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetInterfacesOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValue, bool) {
	if o == nil || IsNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasInterfaces() bool {
	if o != nil && !IsNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValue and assigns it to the Interfaces field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetInterfaces(v map[string]V1DevicesDeviceIdConfigPutRequestCoreInterfacesValue) {
	o.Interfaces = &v
}

// GetIpfixExporters returns the IpfixExporters field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetIpfixExporters() map[string]V1GlobalConfigPatchRequestIpfixExportersValue {
	if o == nil || IsNil(o.IpfixExporters) {
		var ret map[string]V1GlobalConfigPatchRequestIpfixExportersValue
		return ret
	}
	return *o.IpfixExporters
}

// GetIpfixExportersOk returns a tuple with the IpfixExporters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetIpfixExportersOk() (*map[string]V1GlobalConfigPatchRequestIpfixExportersValue, bool) {
	if o == nil || IsNil(o.IpfixExporters) {
		return nil, false
	}
	return o.IpfixExporters, true
}

// HasIpfixExporters returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasIpfixExporters() bool {
	if o != nil && !IsNil(o.IpfixExporters) {
		return true
	}

	return false
}

// SetIpfixExporters gets a reference to the given map[string]V1GlobalConfigPatchRequestIpfixExportersValue and assigns it to the IpfixExporters field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetIpfixExporters(v map[string]V1GlobalConfigPatchRequestIpfixExportersValue) {
	o.IpfixExporters = &v
}

// GetIspVrfs returns the IspVrfs field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetIspVrfs() map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf {
	if o == nil || IsNil(o.IspVrfs) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf
		return ret
	}
	return *o.IspVrfs
}

// GetIspVrfsOk returns a tuple with the IspVrfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetIspVrfsOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf, bool) {
	if o == nil || IsNil(o.IspVrfs) {
		return nil, false
	}
	return o.IspVrfs, true
}

// HasIspVrfs returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasIspVrfs() bool {
	if o != nil && !IsNil(o.IspVrfs) {
		return true
	}

	return false
}

// SetIspVrfs gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf and assigns it to the IspVrfs field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetIspVrfs(v map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) {
	o.IspVrfs = &v
}

// GetMaintenanceMode returns the MaintenanceMode field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetMaintenanceMode() bool {
	if o == nil || IsNil(o.MaintenanceMode) {
		var ret bool
		return ret
	}
	return *o.MaintenanceMode
}

// GetMaintenanceModeOk returns a tuple with the MaintenanceMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetMaintenanceModeOk() (*bool, bool) {
	if o == nil || IsNil(o.MaintenanceMode) {
		return nil, false
	}
	return o.MaintenanceMode, true
}

// HasMaintenanceMode returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasMaintenanceMode() bool {
	if o != nil && !IsNil(o.MaintenanceMode) {
		return true
	}

	return false
}

// SetMaintenanceMode gets a reference to the given bool and assigns it to the MaintenanceMode field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetMaintenanceMode(v bool) {
	o.MaintenanceMode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetName(v string) {
	o.Name = &v
}

// GetPrefixSets returns the PrefixSets field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetPrefixSets() map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue {
	if o == nil || IsNil(o.PrefixSets) {
		var ret map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue
		return ret
	}
	return *o.PrefixSets
}

// GetPrefixSetsOk returns a tuple with the PrefixSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetPrefixSetsOk() (*map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue, bool) {
	if o == nil || IsNil(o.PrefixSets) {
		return nil, false
	}
	return o.PrefixSets, true
}

// HasPrefixSets returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasPrefixSets() bool {
	if o != nil && !IsNil(o.PrefixSets) {
		return true
	}

	return false
}

// SetPrefixSets gets a reference to the given map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue and assigns it to the PrefixSets field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetPrefixSets(v map[string]V1GlobalConfigPatchRequestGlobalPrefixSetsValue) {
	o.PrefixSets = &v
}

// GetPrometheus returns the Prometheus field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetPrometheus() V1DevicesDeviceIdConfigPutRequestCorePrometheus {
	if o == nil || IsNil(o.Prometheus) {
		var ret V1DevicesDeviceIdConfigPutRequestCorePrometheus
		return ret
	}
	return *o.Prometheus
}

// GetPrometheusOk returns a tuple with the Prometheus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetPrometheusOk() (*V1DevicesDeviceIdConfigPutRequestCorePrometheus, bool) {
	if o == nil || IsNil(o.Prometheus) {
		return nil, false
	}
	return o.Prometheus, true
}

// HasPrometheus returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasPrometheus() bool {
	if o != nil && !IsNil(o.Prometheus) {
		return true
	}

	return false
}

// SetPrometheus gets a reference to the given V1DevicesDeviceIdConfigPutRequestCorePrometheus and assigns it to the Prometheus field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetPrometheus(v V1DevicesDeviceIdConfigPutRequestCorePrometheus) {
	o.Prometheus = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetRegion(v string) {
	o.Region = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetRegionName() string {
	if o == nil || IsNil(o.RegionName) {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetRegionNameOk() (*string, bool) {
	if o == nil || IsNil(o.RegionName) {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasRegionName() bool {
	if o != nil && !IsNil(o.RegionName) {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetRegionName(v string) {
	o.RegionName = &v
}

// GetRoutePolicies returns the RoutePolicies field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetRoutePolicies() map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue {
	if o == nil || IsNil(o.RoutePolicies) {
		var ret map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue
		return ret
	}
	return *o.RoutePolicies
}

// GetRoutePoliciesOk returns a tuple with the RoutePolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetRoutePoliciesOk() (*map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue, bool) {
	if o == nil || IsNil(o.RoutePolicies) {
		return nil, false
	}
	return o.RoutePolicies, true
}

// HasRoutePolicies returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasRoutePolicies() bool {
	if o != nil && !IsNil(o.RoutePolicies) {
		return true
	}

	return false
}

// SetRoutePolicies gets a reference to the given map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue and assigns it to the RoutePolicies field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetRoutePolicies(v map[string]V1GlobalConfigPatchRequestRoutingPoliciesValue) {
	o.RoutePolicies = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetSite() V1SitesPostRequestSite {
	if o == nil || IsNil(o.Site) {
		var ret V1SitesPostRequestSite
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetSiteOk() (*V1SitesPostRequestSite, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given V1SitesPostRequestSite and assigns it to the Site field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetSite(v V1SitesPostRequestSite) {
	o.Site = &v
}

// GetTrafficPolicy returns the TrafficPolicy field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetTrafficPolicy() V1GlobalConfigPatchRequestTrafficPolicies {
	if o == nil || IsNil(o.TrafficPolicy) {
		var ret V1GlobalConfigPatchRequestTrafficPolicies
		return ret
	}
	return *o.TrafficPolicy
}

// GetTrafficPolicyOk returns a tuple with the TrafficPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetTrafficPolicyOk() (*V1GlobalConfigPatchRequestTrafficPolicies, bool) {
	if o == nil || IsNil(o.TrafficPolicy) {
		return nil, false
	}
	return o.TrafficPolicy, true
}

// HasTrafficPolicy returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasTrafficPolicy() bool {
	if o != nil && !IsNil(o.TrafficPolicy) {
		return true
	}

	return false
}

// SetTrafficPolicy gets a reference to the given V1GlobalConfigPatchRequestTrafficPolicies and assigns it to the TrafficPolicy field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetTrafficPolicy(v V1GlobalConfigPatchRequestTrafficPolicies) {
	o.TrafficPolicy = &v
}

// GetVrfs returns the Vrfs field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetVrfs() map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf {
	if o == nil || IsNil(o.Vrfs) {
		var ret map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf
		return ret
	}
	return *o.Vrfs
}

// GetVrfsOk returns a tuple with the Vrfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) GetVrfsOk() (*map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf, bool) {
	if o == nil || IsNil(o.Vrfs) {
		return nil, false
	}
	return o.Vrfs, true
}

// HasVrfs returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCore) HasVrfs() bool {
	if o != nil && !IsNil(o.Vrfs) {
		return true
	}

	return false
}

// SetVrfs gets a reference to the given map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf and assigns it to the Vrfs field.
func (o *V1DevicesDeviceIdConfigPutRequestCore) SetVrfs(v map[string]V1DevicesDeviceIdConfigPutRequestCoreCoreVrf) {
	o.Vrfs = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BgpInstance) {
		toSerialize["bgpInstance"] = o.BgpInstance
	}
	if !IsNil(o.CoreVrf) {
		toSerialize["coreVrf"] = o.CoreVrf
	}
	if !IsNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	if !IsNil(o.IpfixExporters) {
		toSerialize["ipfixExporters"] = o.IpfixExporters
	}
	if !IsNil(o.IspVrfs) {
		toSerialize["ispVrfs"] = o.IspVrfs
	}
	if !IsNil(o.MaintenanceMode) {
		toSerialize["maintenanceMode"] = o.MaintenanceMode
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PrefixSets) {
		toSerialize["prefixSets"] = o.PrefixSets
	}
	if !IsNil(o.Prometheus) {
		toSerialize["prometheus"] = o.Prometheus
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.RegionName) {
		toSerialize["regionName"] = o.RegionName
	}
	if !IsNil(o.RoutePolicies) {
		toSerialize["routePolicies"] = o.RoutePolicies
	}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !IsNil(o.TrafficPolicy) {
		toSerialize["trafficPolicy"] = o.TrafficPolicy
	}
	if !IsNil(o.Vrfs) {
		toSerialize["vrfs"] = o.Vrfs
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCore struct {
	value *V1DevicesDeviceIdConfigPutRequestCore
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCore) Get() *V1DevicesDeviceIdConfigPutRequestCore {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCore) Set(val *V1DevicesDeviceIdConfigPutRequestCore) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCore) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCore(val *V1DevicesDeviceIdConfigPutRequestCore) *NullableV1DevicesDeviceIdConfigPutRequestCore {
	return &NullableV1DevicesDeviceIdConfigPutRequestCore{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


