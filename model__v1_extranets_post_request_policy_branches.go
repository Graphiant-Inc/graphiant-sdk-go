/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1ExtranetsPostRequestPolicyBranches type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ExtranetsPostRequestPolicyBranches{}

// V1ExtranetsPostRequestPolicyBranches struct for V1ExtranetsPostRequestPolicyBranches
type V1ExtranetsPostRequestPolicyBranches struct {
	ExcludedDevices []int64 `json:"excludedDevices,omitempty"`
	PrefixSet *V1ExtranetsPostRequestPolicyBranchesPrefixSet `json:"prefixSet,omitempty"`
	Sites []int64 `json:"sites,omitempty"`
}

// NewV1ExtranetsPostRequestPolicyBranches instantiates a new V1ExtranetsPostRequestPolicyBranches object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExtranetsPostRequestPolicyBranches() *V1ExtranetsPostRequestPolicyBranches {
	this := V1ExtranetsPostRequestPolicyBranches{}
	return &this
}

// NewV1ExtranetsPostRequestPolicyBranchesWithDefaults instantiates a new V1ExtranetsPostRequestPolicyBranches object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExtranetsPostRequestPolicyBranchesWithDefaults() *V1ExtranetsPostRequestPolicyBranches {
	this := V1ExtranetsPostRequestPolicyBranches{}
	return &this
}

// GetExcludedDevices returns the ExcludedDevices field value if set, zero value otherwise.
func (o *V1ExtranetsPostRequestPolicyBranches) GetExcludedDevices() []int64 {
	if o == nil || IsNil(o.ExcludedDevices) {
		var ret []int64
		return ret
	}
	return o.ExcludedDevices
}

// GetExcludedDevicesOk returns a tuple with the ExcludedDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsPostRequestPolicyBranches) GetExcludedDevicesOk() ([]int64, bool) {
	if o == nil || IsNil(o.ExcludedDevices) {
		return nil, false
	}
	return o.ExcludedDevices, true
}

// HasExcludedDevices returns a boolean if a field has been set.
func (o *V1ExtranetsPostRequestPolicyBranches) HasExcludedDevices() bool {
	if o != nil && !IsNil(o.ExcludedDevices) {
		return true
	}

	return false
}

// SetExcludedDevices gets a reference to the given []int64 and assigns it to the ExcludedDevices field.
func (o *V1ExtranetsPostRequestPolicyBranches) SetExcludedDevices(v []int64) {
	o.ExcludedDevices = v
}

// GetPrefixSet returns the PrefixSet field value if set, zero value otherwise.
func (o *V1ExtranetsPostRequestPolicyBranches) GetPrefixSet() V1ExtranetsPostRequestPolicyBranchesPrefixSet {
	if o == nil || IsNil(o.PrefixSet) {
		var ret V1ExtranetsPostRequestPolicyBranchesPrefixSet
		return ret
	}
	return *o.PrefixSet
}

// GetPrefixSetOk returns a tuple with the PrefixSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsPostRequestPolicyBranches) GetPrefixSetOk() (*V1ExtranetsPostRequestPolicyBranchesPrefixSet, bool) {
	if o == nil || IsNil(o.PrefixSet) {
		return nil, false
	}
	return o.PrefixSet, true
}

// HasPrefixSet returns a boolean if a field has been set.
func (o *V1ExtranetsPostRequestPolicyBranches) HasPrefixSet() bool {
	if o != nil && !IsNil(o.PrefixSet) {
		return true
	}

	return false
}

// SetPrefixSet gets a reference to the given V1ExtranetsPostRequestPolicyBranchesPrefixSet and assigns it to the PrefixSet field.
func (o *V1ExtranetsPostRequestPolicyBranches) SetPrefixSet(v V1ExtranetsPostRequestPolicyBranchesPrefixSet) {
	o.PrefixSet = &v
}

// GetSites returns the Sites field value if set, zero value otherwise.
func (o *V1ExtranetsPostRequestPolicyBranches) GetSites() []int64 {
	if o == nil || IsNil(o.Sites) {
		var ret []int64
		return ret
	}
	return o.Sites
}

// GetSitesOk returns a tuple with the Sites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExtranetsPostRequestPolicyBranches) GetSitesOk() ([]int64, bool) {
	if o == nil || IsNil(o.Sites) {
		return nil, false
	}
	return o.Sites, true
}

// HasSites returns a boolean if a field has been set.
func (o *V1ExtranetsPostRequestPolicyBranches) HasSites() bool {
	if o != nil && !IsNil(o.Sites) {
		return true
	}

	return false
}

// SetSites gets a reference to the given []int64 and assigns it to the Sites field.
func (o *V1ExtranetsPostRequestPolicyBranches) SetSites(v []int64) {
	o.Sites = v
}

func (o V1ExtranetsPostRequestPolicyBranches) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ExtranetsPostRequestPolicyBranches) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExcludedDevices) {
		toSerialize["excludedDevices"] = o.ExcludedDevices
	}
	if !IsNil(o.PrefixSet) {
		toSerialize["prefixSet"] = o.PrefixSet
	}
	if !IsNil(o.Sites) {
		toSerialize["sites"] = o.Sites
	}
	return toSerialize, nil
}

type NullableV1ExtranetsPostRequestPolicyBranches struct {
	value *V1ExtranetsPostRequestPolicyBranches
	isSet bool
}

func (v NullableV1ExtranetsPostRequestPolicyBranches) Get() *V1ExtranetsPostRequestPolicyBranches {
	return v.value
}

func (v *NullableV1ExtranetsPostRequestPolicyBranches) Set(val *V1ExtranetsPostRequestPolicyBranches) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExtranetsPostRequestPolicyBranches) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExtranetsPostRequestPolicyBranches) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExtranetsPostRequestPolicyBranches(val *V1ExtranetsPostRequestPolicyBranches) *NullableV1ExtranetsPostRequestPolicyBranches {
	return &NullableV1ExtranetsPostRequestPolicyBranches{value: val, isSet: true}
}

func (v NullableV1ExtranetsPostRequestPolicyBranches) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExtranetsPostRequestPolicyBranches) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


