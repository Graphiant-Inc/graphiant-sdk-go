/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats{}

// V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats struct for V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats
type V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats struct {
	HealthAvg *string `json:"healthAvg,omitempty"`
	Jitter *float64 `json:"jitter,omitempty"`
	Latency *float64 `json:"latency,omitempty"`
	Loss *float32 `json:"loss,omitempty"`
	Mos *float32 `json:"mos,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats instantiates a new V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats() *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats {
	this := V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats{}
	return &this
}

// NewV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStatsWithDefaults instantiates a new V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStatsWithDefaults() *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats {
	this := V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats{}
	return &this
}

// GetHealthAvg returns the HealthAvg field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetHealthAvg() string {
	if o == nil || IsNil(o.HealthAvg) {
		var ret string
		return ret
	}
	return *o.HealthAvg
}

// GetHealthAvgOk returns a tuple with the HealthAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetHealthAvgOk() (*string, bool) {
	if o == nil || IsNil(o.HealthAvg) {
		return nil, false
	}
	return o.HealthAvg, true
}

// HasHealthAvg returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) HasHealthAvg() bool {
	if o != nil && !IsNil(o.HealthAvg) {
		return true
	}

	return false
}

// SetHealthAvg gets a reference to the given string and assigns it to the HealthAvg field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) SetHealthAvg(v string) {
	o.HealthAvg = &v
}

// GetJitter returns the Jitter field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetJitter() float64 {
	if o == nil || IsNil(o.Jitter) {
		var ret float64
		return ret
	}
	return *o.Jitter
}

// GetJitterOk returns a tuple with the Jitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetJitterOk() (*float64, bool) {
	if o == nil || IsNil(o.Jitter) {
		return nil, false
	}
	return o.Jitter, true
}

// HasJitter returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) HasJitter() bool {
	if o != nil && !IsNil(o.Jitter) {
		return true
	}

	return false
}

// SetJitter gets a reference to the given float64 and assigns it to the Jitter field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) SetJitter(v float64) {
	o.Jitter = &v
}

// GetLatency returns the Latency field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetLatency() float64 {
	if o == nil || IsNil(o.Latency) {
		var ret float64
		return ret
	}
	return *o.Latency
}

// GetLatencyOk returns a tuple with the Latency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.Latency) {
		return nil, false
	}
	return o.Latency, true
}

// HasLatency returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) HasLatency() bool {
	if o != nil && !IsNil(o.Latency) {
		return true
	}

	return false
}

// SetLatency gets a reference to the given float64 and assigns it to the Latency field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) SetLatency(v float64) {
	o.Latency = &v
}

// GetLoss returns the Loss field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetLoss() float32 {
	if o == nil || IsNil(o.Loss) {
		var ret float32
		return ret
	}
	return *o.Loss
}

// GetLossOk returns a tuple with the Loss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetLossOk() (*float32, bool) {
	if o == nil || IsNil(o.Loss) {
		return nil, false
	}
	return o.Loss, true
}

// HasLoss returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) HasLoss() bool {
	if o != nil && !IsNil(o.Loss) {
		return true
	}

	return false
}

// SetLoss gets a reference to the given float32 and assigns it to the Loss field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) SetLoss(v float32) {
	o.Loss = &v
}

// GetMos returns the Mos field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetMos() float32 {
	if o == nil || IsNil(o.Mos) {
		var ret float32
		return ret
	}
	return *o.Mos
}

// GetMosOk returns a tuple with the Mos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetMosOk() (*float32, bool) {
	if o == nil || IsNil(o.Mos) {
		return nil, false
	}
	return o.Mos, true
}

// HasMos returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) HasMos() bool {
	if o != nil && !IsNil(o.Mos) {
		return true
	}

	return false
}

// SetMos gets a reference to the given float32 and assigns it to the Mos field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) SetMos(v float32) {
	o.Mos = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) SetStatus(v string) {
	o.Status = &v
}

func (o V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HealthAvg) {
		toSerialize["healthAvg"] = o.HealthAvg
	}
	if !IsNil(o.Jitter) {
		toSerialize["jitter"] = o.Jitter
	}
	if !IsNil(o.Latency) {
		toSerialize["latency"] = o.Latency
	}
	if !IsNil(o.Loss) {
		toSerialize["loss"] = o.Loss
	}
	if !IsNil(o.Mos) {
		toSerialize["mos"] = o.Mos
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats struct {
	value *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats
	isSet bool
}

func (v NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) Get() *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats {
	return v.value
}

func (v *NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) Set(val *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats(val *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) *NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats {
	return &NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats{value: val, isSet: true}
}

func (v NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


