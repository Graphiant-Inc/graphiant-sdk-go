/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1EnterprisesPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1EnterprisesPatchRequest{}

// V1EnterprisesPatchRequest struct for V1EnterprisesPatchRequest
type V1EnterprisesPatchRequest struct {
	AdminEmail *string `json:"adminEmail,omitempty"`
	CloudProvider *string `json:"cloudProvider,omitempty"`
	CompanyName *string `json:"companyName,omitempty"`
	CreditLimit *int32 `json:"creditLimit,omitempty"`
	EnterpriseId *int64 `json:"enterpriseId,omitempty"`
	ImpersonationEnabled *bool `json:"impersonationEnabled,omitempty"`
	Logo *string `json:"logo,omitempty"`
	PortalBanner *string `json:"portalBanner,omitempty"`
	SmallLogo *string `json:"smallLogo,omitempty"`
	TokenExpiry *V1EnterprisesPatchRequestTokenExpiry `json:"tokenExpiry,omitempty"`
}

// NewV1EnterprisesPatchRequest instantiates a new V1EnterprisesPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1EnterprisesPatchRequest() *V1EnterprisesPatchRequest {
	this := V1EnterprisesPatchRequest{}
	return &this
}

// NewV1EnterprisesPatchRequestWithDefaults instantiates a new V1EnterprisesPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EnterprisesPatchRequestWithDefaults() *V1EnterprisesPatchRequest {
	this := V1EnterprisesPatchRequest{}
	return &this
}

// GetAdminEmail returns the AdminEmail field value if set, zero value otherwise.
func (o *V1EnterprisesPatchRequest) GetAdminEmail() string {
	if o == nil || IsNil(o.AdminEmail) {
		var ret string
		return ret
	}
	return *o.AdminEmail
}

// GetAdminEmailOk returns a tuple with the AdminEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesPatchRequest) GetAdminEmailOk() (*string, bool) {
	if o == nil || IsNil(o.AdminEmail) {
		return nil, false
	}
	return o.AdminEmail, true
}

// HasAdminEmail returns a boolean if a field has been set.
func (o *V1EnterprisesPatchRequest) HasAdminEmail() bool {
	if o != nil && !IsNil(o.AdminEmail) {
		return true
	}

	return false
}

// SetAdminEmail gets a reference to the given string and assigns it to the AdminEmail field.
func (o *V1EnterprisesPatchRequest) SetAdminEmail(v string) {
	o.AdminEmail = &v
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *V1EnterprisesPatchRequest) GetCloudProvider() string {
	if o == nil || IsNil(o.CloudProvider) {
		var ret string
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesPatchRequest) GetCloudProviderOk() (*string, bool) {
	if o == nil || IsNil(o.CloudProvider) {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *V1EnterprisesPatchRequest) HasCloudProvider() bool {
	if o != nil && !IsNil(o.CloudProvider) {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given string and assigns it to the CloudProvider field.
func (o *V1EnterprisesPatchRequest) SetCloudProvider(v string) {
	o.CloudProvider = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *V1EnterprisesPatchRequest) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesPatchRequest) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *V1EnterprisesPatchRequest) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *V1EnterprisesPatchRequest) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCreditLimit returns the CreditLimit field value if set, zero value otherwise.
func (o *V1EnterprisesPatchRequest) GetCreditLimit() int32 {
	if o == nil || IsNil(o.CreditLimit) {
		var ret int32
		return ret
	}
	return *o.CreditLimit
}

// GetCreditLimitOk returns a tuple with the CreditLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesPatchRequest) GetCreditLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.CreditLimit) {
		return nil, false
	}
	return o.CreditLimit, true
}

// HasCreditLimit returns a boolean if a field has been set.
func (o *V1EnterprisesPatchRequest) HasCreditLimit() bool {
	if o != nil && !IsNil(o.CreditLimit) {
		return true
	}

	return false
}

// SetCreditLimit gets a reference to the given int32 and assigns it to the CreditLimit field.
func (o *V1EnterprisesPatchRequest) SetCreditLimit(v int32) {
	o.CreditLimit = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *V1EnterprisesPatchRequest) GetEnterpriseId() int64 {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret int64
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesPatchRequest) GetEnterpriseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *V1EnterprisesPatchRequest) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given int64 and assigns it to the EnterpriseId field.
func (o *V1EnterprisesPatchRequest) SetEnterpriseId(v int64) {
	o.EnterpriseId = &v
}

// GetImpersonationEnabled returns the ImpersonationEnabled field value if set, zero value otherwise.
func (o *V1EnterprisesPatchRequest) GetImpersonationEnabled() bool {
	if o == nil || IsNil(o.ImpersonationEnabled) {
		var ret bool
		return ret
	}
	return *o.ImpersonationEnabled
}

// GetImpersonationEnabledOk returns a tuple with the ImpersonationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesPatchRequest) GetImpersonationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ImpersonationEnabled) {
		return nil, false
	}
	return o.ImpersonationEnabled, true
}

// HasImpersonationEnabled returns a boolean if a field has been set.
func (o *V1EnterprisesPatchRequest) HasImpersonationEnabled() bool {
	if o != nil && !IsNil(o.ImpersonationEnabled) {
		return true
	}

	return false
}

// SetImpersonationEnabled gets a reference to the given bool and assigns it to the ImpersonationEnabled field.
func (o *V1EnterprisesPatchRequest) SetImpersonationEnabled(v bool) {
	o.ImpersonationEnabled = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *V1EnterprisesPatchRequest) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesPatchRequest) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *V1EnterprisesPatchRequest) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *V1EnterprisesPatchRequest) SetLogo(v string) {
	o.Logo = &v
}

// GetPortalBanner returns the PortalBanner field value if set, zero value otherwise.
func (o *V1EnterprisesPatchRequest) GetPortalBanner() string {
	if o == nil || IsNil(o.PortalBanner) {
		var ret string
		return ret
	}
	return *o.PortalBanner
}

// GetPortalBannerOk returns a tuple with the PortalBanner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesPatchRequest) GetPortalBannerOk() (*string, bool) {
	if o == nil || IsNil(o.PortalBanner) {
		return nil, false
	}
	return o.PortalBanner, true
}

// HasPortalBanner returns a boolean if a field has been set.
func (o *V1EnterprisesPatchRequest) HasPortalBanner() bool {
	if o != nil && !IsNil(o.PortalBanner) {
		return true
	}

	return false
}

// SetPortalBanner gets a reference to the given string and assigns it to the PortalBanner field.
func (o *V1EnterprisesPatchRequest) SetPortalBanner(v string) {
	o.PortalBanner = &v
}

// GetSmallLogo returns the SmallLogo field value if set, zero value otherwise.
func (o *V1EnterprisesPatchRequest) GetSmallLogo() string {
	if o == nil || IsNil(o.SmallLogo) {
		var ret string
		return ret
	}
	return *o.SmallLogo
}

// GetSmallLogoOk returns a tuple with the SmallLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesPatchRequest) GetSmallLogoOk() (*string, bool) {
	if o == nil || IsNil(o.SmallLogo) {
		return nil, false
	}
	return o.SmallLogo, true
}

// HasSmallLogo returns a boolean if a field has been set.
func (o *V1EnterprisesPatchRequest) HasSmallLogo() bool {
	if o != nil && !IsNil(o.SmallLogo) {
		return true
	}

	return false
}

// SetSmallLogo gets a reference to the given string and assigns it to the SmallLogo field.
func (o *V1EnterprisesPatchRequest) SetSmallLogo(v string) {
	o.SmallLogo = &v
}

// GetTokenExpiry returns the TokenExpiry field value if set, zero value otherwise.
func (o *V1EnterprisesPatchRequest) GetTokenExpiry() V1EnterprisesPatchRequestTokenExpiry {
	if o == nil || IsNil(o.TokenExpiry) {
		var ret V1EnterprisesPatchRequestTokenExpiry
		return ret
	}
	return *o.TokenExpiry
}

// GetTokenExpiryOk returns a tuple with the TokenExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterprisesPatchRequest) GetTokenExpiryOk() (*V1EnterprisesPatchRequestTokenExpiry, bool) {
	if o == nil || IsNil(o.TokenExpiry) {
		return nil, false
	}
	return o.TokenExpiry, true
}

// HasTokenExpiry returns a boolean if a field has been set.
func (o *V1EnterprisesPatchRequest) HasTokenExpiry() bool {
	if o != nil && !IsNil(o.TokenExpiry) {
		return true
	}

	return false
}

// SetTokenExpiry gets a reference to the given V1EnterprisesPatchRequestTokenExpiry and assigns it to the TokenExpiry field.
func (o *V1EnterprisesPatchRequest) SetTokenExpiry(v V1EnterprisesPatchRequestTokenExpiry) {
	o.TokenExpiry = &v
}

func (o V1EnterprisesPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1EnterprisesPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminEmail) {
		toSerialize["adminEmail"] = o.AdminEmail
	}
	if !IsNil(o.CloudProvider) {
		toSerialize["cloudProvider"] = o.CloudProvider
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.CreditLimit) {
		toSerialize["creditLimit"] = o.CreditLimit
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterpriseId"] = o.EnterpriseId
	}
	if !IsNil(o.ImpersonationEnabled) {
		toSerialize["impersonationEnabled"] = o.ImpersonationEnabled
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.PortalBanner) {
		toSerialize["portalBanner"] = o.PortalBanner
	}
	if !IsNil(o.SmallLogo) {
		toSerialize["smallLogo"] = o.SmallLogo
	}
	if !IsNil(o.TokenExpiry) {
		toSerialize["tokenExpiry"] = o.TokenExpiry
	}
	return toSerialize, nil
}

type NullableV1EnterprisesPatchRequest struct {
	value *V1EnterprisesPatchRequest
	isSet bool
}

func (v NullableV1EnterprisesPatchRequest) Get() *V1EnterprisesPatchRequest {
	return v.value
}

func (v *NullableV1EnterprisesPatchRequest) Set(val *V1EnterprisesPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1EnterprisesPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1EnterprisesPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1EnterprisesPatchRequest(val *V1EnterprisesPatchRequest) *NullableV1EnterprisesPatchRequest {
	return &NullableV1EnterprisesPatchRequest{value: val, isSet: true}
}

func (v NullableV1EnterprisesPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1EnterprisesPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


