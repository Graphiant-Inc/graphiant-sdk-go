/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DeviceRoutingBgpNbrsDetailsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeviceRoutingBgpNbrsDetailsGet200Response{}

// V1DeviceRoutingBgpNbrsDetailsGet200Response struct for V1DeviceRoutingBgpNbrsDetailsGet200Response
type V1DeviceRoutingBgpNbrsDetailsGet200Response struct {
	EbgpMultiHopTtl *int32 `json:"ebgpMultiHopTtl,omitempty"`
	HoldTimer *int32 `json:"holdTimer,omitempty"`
	KeepAliveTimer *int32 `json:"keepAliveTimer,omitempty"`
}

// NewV1DeviceRoutingBgpNbrsDetailsGet200Response instantiates a new V1DeviceRoutingBgpNbrsDetailsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeviceRoutingBgpNbrsDetailsGet200Response() *V1DeviceRoutingBgpNbrsDetailsGet200Response {
	this := V1DeviceRoutingBgpNbrsDetailsGet200Response{}
	return &this
}

// NewV1DeviceRoutingBgpNbrsDetailsGet200ResponseWithDefaults instantiates a new V1DeviceRoutingBgpNbrsDetailsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeviceRoutingBgpNbrsDetailsGet200ResponseWithDefaults() *V1DeviceRoutingBgpNbrsDetailsGet200Response {
	this := V1DeviceRoutingBgpNbrsDetailsGet200Response{}
	return &this
}

// GetEbgpMultiHopTtl returns the EbgpMultiHopTtl field value if set, zero value otherwise.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) GetEbgpMultiHopTtl() int32 {
	if o == nil || IsNil(o.EbgpMultiHopTtl) {
		var ret int32
		return ret
	}
	return *o.EbgpMultiHopTtl
}

// GetEbgpMultiHopTtlOk returns a tuple with the EbgpMultiHopTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) GetEbgpMultiHopTtlOk() (*int32, bool) {
	if o == nil || IsNil(o.EbgpMultiHopTtl) {
		return nil, false
	}
	return o.EbgpMultiHopTtl, true
}

// HasEbgpMultiHopTtl returns a boolean if a field has been set.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) HasEbgpMultiHopTtl() bool {
	if o != nil && !IsNil(o.EbgpMultiHopTtl) {
		return true
	}

	return false
}

// SetEbgpMultiHopTtl gets a reference to the given int32 and assigns it to the EbgpMultiHopTtl field.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) SetEbgpMultiHopTtl(v int32) {
	o.EbgpMultiHopTtl = &v
}

// GetHoldTimer returns the HoldTimer field value if set, zero value otherwise.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) GetHoldTimer() int32 {
	if o == nil || IsNil(o.HoldTimer) {
		var ret int32
		return ret
	}
	return *o.HoldTimer
}

// GetHoldTimerOk returns a tuple with the HoldTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) GetHoldTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.HoldTimer) {
		return nil, false
	}
	return o.HoldTimer, true
}

// HasHoldTimer returns a boolean if a field has been set.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) HasHoldTimer() bool {
	if o != nil && !IsNil(o.HoldTimer) {
		return true
	}

	return false
}

// SetHoldTimer gets a reference to the given int32 and assigns it to the HoldTimer field.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) SetHoldTimer(v int32) {
	o.HoldTimer = &v
}

// GetKeepAliveTimer returns the KeepAliveTimer field value if set, zero value otherwise.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) GetKeepAliveTimer() int32 {
	if o == nil || IsNil(o.KeepAliveTimer) {
		var ret int32
		return ret
	}
	return *o.KeepAliveTimer
}

// GetKeepAliveTimerOk returns a tuple with the KeepAliveTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) GetKeepAliveTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.KeepAliveTimer) {
		return nil, false
	}
	return o.KeepAliveTimer, true
}

// HasKeepAliveTimer returns a boolean if a field has been set.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) HasKeepAliveTimer() bool {
	if o != nil && !IsNil(o.KeepAliveTimer) {
		return true
	}

	return false
}

// SetKeepAliveTimer gets a reference to the given int32 and assigns it to the KeepAliveTimer field.
func (o *V1DeviceRoutingBgpNbrsDetailsGet200Response) SetKeepAliveTimer(v int32) {
	o.KeepAliveTimer = &v
}

func (o V1DeviceRoutingBgpNbrsDetailsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeviceRoutingBgpNbrsDetailsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EbgpMultiHopTtl) {
		toSerialize["ebgpMultiHopTtl"] = o.EbgpMultiHopTtl
	}
	if !IsNil(o.HoldTimer) {
		toSerialize["holdTimer"] = o.HoldTimer
	}
	if !IsNil(o.KeepAliveTimer) {
		toSerialize["keepAliveTimer"] = o.KeepAliveTimer
	}
	return toSerialize, nil
}

type NullableV1DeviceRoutingBgpNbrsDetailsGet200Response struct {
	value *V1DeviceRoutingBgpNbrsDetailsGet200Response
	isSet bool
}

func (v NullableV1DeviceRoutingBgpNbrsDetailsGet200Response) Get() *V1DeviceRoutingBgpNbrsDetailsGet200Response {
	return v.value
}

func (v *NullableV1DeviceRoutingBgpNbrsDetailsGet200Response) Set(val *V1DeviceRoutingBgpNbrsDetailsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeviceRoutingBgpNbrsDetailsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeviceRoutingBgpNbrsDetailsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeviceRoutingBgpNbrsDetailsGet200Response(val *V1DeviceRoutingBgpNbrsDetailsGet200Response) *NullableV1DeviceRoutingBgpNbrsDetailsGet200Response {
	return &NullableV1DeviceRoutingBgpNbrsDetailsGet200Response{value: val, isSet: true}
}

func (v NullableV1DeviceRoutingBgpNbrsDetailsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeviceRoutingBgpNbrsDetailsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


