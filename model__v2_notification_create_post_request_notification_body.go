/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2NotificationCreatePostRequestNotificationBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2NotificationCreatePostRequestNotificationBody{}

// V2NotificationCreatePostRequestNotificationBody struct for V2NotificationCreatePostRequestNotificationBody
type V2NotificationCreatePostRequestNotificationBody struct {
	Description *string `json:"description,omitempty"`
	Duration *string `json:"duration,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Frequency *int64 `json:"frequency,omitempty"`
	MessageBody *string `json:"messageBody,omitempty"`
	NotificationName *string `json:"notificationName,omitempty"`
	OpsgenieList []string `json:"opsgenieList,omitempty"`
	OpsrampList []string `json:"opsrampList,omitempty"`
	RecipientList []string `json:"recipientList,omitempty"`
	TeamsList []string `json:"teamsList,omitempty"`
}

// NewV2NotificationCreatePostRequestNotificationBody instantiates a new V2NotificationCreatePostRequestNotificationBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2NotificationCreatePostRequestNotificationBody() *V2NotificationCreatePostRequestNotificationBody {
	this := V2NotificationCreatePostRequestNotificationBody{}
	return &this
}

// NewV2NotificationCreatePostRequestNotificationBodyWithDefaults instantiates a new V2NotificationCreatePostRequestNotificationBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2NotificationCreatePostRequestNotificationBodyWithDefaults() *V2NotificationCreatePostRequestNotificationBody {
	this := V2NotificationCreatePostRequestNotificationBody{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *V2NotificationCreatePostRequestNotificationBody) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *V2NotificationCreatePostRequestNotificationBody) SetDescription(v string) {
	o.Description = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *V2NotificationCreatePostRequestNotificationBody) GetDuration() string {
	if o == nil || IsNil(o.Duration) {
		var ret string
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) GetDurationOk() (*string, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given string and assigns it to the Duration field.
func (o *V2NotificationCreatePostRequestNotificationBody) SetDuration(v string) {
	o.Duration = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *V2NotificationCreatePostRequestNotificationBody) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *V2NotificationCreatePostRequestNotificationBody) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *V2NotificationCreatePostRequestNotificationBody) GetFrequency() int64 {
	if o == nil || IsNil(o.Frequency) {
		var ret int64
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) GetFrequencyOk() (*int64, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given int64 and assigns it to the Frequency field.
func (o *V2NotificationCreatePostRequestNotificationBody) SetFrequency(v int64) {
	o.Frequency = &v
}

// GetMessageBody returns the MessageBody field value if set, zero value otherwise.
func (o *V2NotificationCreatePostRequestNotificationBody) GetMessageBody() string {
	if o == nil || IsNil(o.MessageBody) {
		var ret string
		return ret
	}
	return *o.MessageBody
}

// GetMessageBodyOk returns a tuple with the MessageBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) GetMessageBodyOk() (*string, bool) {
	if o == nil || IsNil(o.MessageBody) {
		return nil, false
	}
	return o.MessageBody, true
}

// HasMessageBody returns a boolean if a field has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) HasMessageBody() bool {
	if o != nil && !IsNil(o.MessageBody) {
		return true
	}

	return false
}

// SetMessageBody gets a reference to the given string and assigns it to the MessageBody field.
func (o *V2NotificationCreatePostRequestNotificationBody) SetMessageBody(v string) {
	o.MessageBody = &v
}

// GetNotificationName returns the NotificationName field value if set, zero value otherwise.
func (o *V2NotificationCreatePostRequestNotificationBody) GetNotificationName() string {
	if o == nil || IsNil(o.NotificationName) {
		var ret string
		return ret
	}
	return *o.NotificationName
}

// GetNotificationNameOk returns a tuple with the NotificationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) GetNotificationNameOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationName) {
		return nil, false
	}
	return o.NotificationName, true
}

// HasNotificationName returns a boolean if a field has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) HasNotificationName() bool {
	if o != nil && !IsNil(o.NotificationName) {
		return true
	}

	return false
}

// SetNotificationName gets a reference to the given string and assigns it to the NotificationName field.
func (o *V2NotificationCreatePostRequestNotificationBody) SetNotificationName(v string) {
	o.NotificationName = &v
}

// GetOpsgenieList returns the OpsgenieList field value if set, zero value otherwise.
func (o *V2NotificationCreatePostRequestNotificationBody) GetOpsgenieList() []string {
	if o == nil || IsNil(o.OpsgenieList) {
		var ret []string
		return ret
	}
	return o.OpsgenieList
}

// GetOpsgenieListOk returns a tuple with the OpsgenieList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) GetOpsgenieListOk() ([]string, bool) {
	if o == nil || IsNil(o.OpsgenieList) {
		return nil, false
	}
	return o.OpsgenieList, true
}

// HasOpsgenieList returns a boolean if a field has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) HasOpsgenieList() bool {
	if o != nil && !IsNil(o.OpsgenieList) {
		return true
	}

	return false
}

// SetOpsgenieList gets a reference to the given []string and assigns it to the OpsgenieList field.
func (o *V2NotificationCreatePostRequestNotificationBody) SetOpsgenieList(v []string) {
	o.OpsgenieList = v
}

// GetOpsrampList returns the OpsrampList field value if set, zero value otherwise.
func (o *V2NotificationCreatePostRequestNotificationBody) GetOpsrampList() []string {
	if o == nil || IsNil(o.OpsrampList) {
		var ret []string
		return ret
	}
	return o.OpsrampList
}

// GetOpsrampListOk returns a tuple with the OpsrampList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) GetOpsrampListOk() ([]string, bool) {
	if o == nil || IsNil(o.OpsrampList) {
		return nil, false
	}
	return o.OpsrampList, true
}

// HasOpsrampList returns a boolean if a field has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) HasOpsrampList() bool {
	if o != nil && !IsNil(o.OpsrampList) {
		return true
	}

	return false
}

// SetOpsrampList gets a reference to the given []string and assigns it to the OpsrampList field.
func (o *V2NotificationCreatePostRequestNotificationBody) SetOpsrampList(v []string) {
	o.OpsrampList = v
}

// GetRecipientList returns the RecipientList field value if set, zero value otherwise.
func (o *V2NotificationCreatePostRequestNotificationBody) GetRecipientList() []string {
	if o == nil || IsNil(o.RecipientList) {
		var ret []string
		return ret
	}
	return o.RecipientList
}

// GetRecipientListOk returns a tuple with the RecipientList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) GetRecipientListOk() ([]string, bool) {
	if o == nil || IsNil(o.RecipientList) {
		return nil, false
	}
	return o.RecipientList, true
}

// HasRecipientList returns a boolean if a field has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) HasRecipientList() bool {
	if o != nil && !IsNil(o.RecipientList) {
		return true
	}

	return false
}

// SetRecipientList gets a reference to the given []string and assigns it to the RecipientList field.
func (o *V2NotificationCreatePostRequestNotificationBody) SetRecipientList(v []string) {
	o.RecipientList = v
}

// GetTeamsList returns the TeamsList field value if set, zero value otherwise.
func (o *V2NotificationCreatePostRequestNotificationBody) GetTeamsList() []string {
	if o == nil || IsNil(o.TeamsList) {
		var ret []string
		return ret
	}
	return o.TeamsList
}

// GetTeamsListOk returns a tuple with the TeamsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) GetTeamsListOk() ([]string, bool) {
	if o == nil || IsNil(o.TeamsList) {
		return nil, false
	}
	return o.TeamsList, true
}

// HasTeamsList returns a boolean if a field has been set.
func (o *V2NotificationCreatePostRequestNotificationBody) HasTeamsList() bool {
	if o != nil && !IsNil(o.TeamsList) {
		return true
	}

	return false
}

// SetTeamsList gets a reference to the given []string and assigns it to the TeamsList field.
func (o *V2NotificationCreatePostRequestNotificationBody) SetTeamsList(v []string) {
	o.TeamsList = v
}

func (o V2NotificationCreatePostRequestNotificationBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2NotificationCreatePostRequestNotificationBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.MessageBody) {
		toSerialize["messageBody"] = o.MessageBody
	}
	if !IsNil(o.NotificationName) {
		toSerialize["notificationName"] = o.NotificationName
	}
	if !IsNil(o.OpsgenieList) {
		toSerialize["opsgenieList"] = o.OpsgenieList
	}
	if !IsNil(o.OpsrampList) {
		toSerialize["opsrampList"] = o.OpsrampList
	}
	if !IsNil(o.RecipientList) {
		toSerialize["recipientList"] = o.RecipientList
	}
	if !IsNil(o.TeamsList) {
		toSerialize["teamsList"] = o.TeamsList
	}
	return toSerialize, nil
}

type NullableV2NotificationCreatePostRequestNotificationBody struct {
	value *V2NotificationCreatePostRequestNotificationBody
	isSet bool
}

func (v NullableV2NotificationCreatePostRequestNotificationBody) Get() *V2NotificationCreatePostRequestNotificationBody {
	return v.value
}

func (v *NullableV2NotificationCreatePostRequestNotificationBody) Set(val *V2NotificationCreatePostRequestNotificationBody) {
	v.value = val
	v.isSet = true
}

func (v NullableV2NotificationCreatePostRequestNotificationBody) IsSet() bool {
	return v.isSet
}

func (v *NullableV2NotificationCreatePostRequestNotificationBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2NotificationCreatePostRequestNotificationBody(val *V2NotificationCreatePostRequestNotificationBody) *NullableV2NotificationCreatePostRequestNotificationBody {
	return &NullableV2NotificationCreatePostRequestNotificationBody{value: val, isSet: true}
}

func (v NullableV2NotificationCreatePostRequestNotificationBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2NotificationCreatePostRequestNotificationBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


