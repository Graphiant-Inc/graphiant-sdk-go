/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner{}

// V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner struct for V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner
type V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner struct {
	AppId *int32 `json:"appId,omitempty"`
	AppName *string `json:"appName,omitempty"`
	Usage *int64 `json:"usage,omitempty"`
}

// NewV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner instantiates a new V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner() *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner {
	this := V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner{}
	return &this
}

// NewV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInnerWithDefaults instantiates a new V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInnerWithDefaults() *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner {
	this := V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) GetAppId() int32 {
	if o == nil || IsNil(o.AppId) {
		var ret int32
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) GetAppIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int32 and assigns it to the AppId field.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) SetAppId(v int32) {
	o.AppId = &v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) SetAppName(v string) {
	o.AppName = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) GetUsage() int64 {
	if o == nil || IsNil(o.Usage) {
		var ret int64
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) GetUsageOk() (*int64, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given int64 and assigns it to the Usage field.
func (o *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) SetUsage(v int64) {
	o.Usage = &v
}

func (o V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.AppName) {
		toSerialize["appName"] = o.AppName
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	return toSerialize, nil
}

type NullableV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner struct {
	value *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner
	isSet bool
}

func (v NullableV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) Get() *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner {
	return v.value
}

func (v *NullableV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) Set(val *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner(val *V1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) *NullableV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner {
	return &NullableV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner{value: val, isSet: true}
}

func (v NullableV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AppsDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


