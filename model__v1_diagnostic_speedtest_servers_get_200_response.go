/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DiagnosticSpeedtestServersGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DiagnosticSpeedtestServersGet200Response{}

// V1DiagnosticSpeedtestServersGet200Response struct for V1DiagnosticSpeedtestServersGet200Response
type V1DiagnosticSpeedtestServersGet200Response struct {
	Server []V1DiagnosticSpeedtestServersGet200ResponseServerInner `json:"server,omitempty"`
}

// NewV1DiagnosticSpeedtestServersGet200Response instantiates a new V1DiagnosticSpeedtestServersGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DiagnosticSpeedtestServersGet200Response() *V1DiagnosticSpeedtestServersGet200Response {
	this := V1DiagnosticSpeedtestServersGet200Response{}
	return &this
}

// NewV1DiagnosticSpeedtestServersGet200ResponseWithDefaults instantiates a new V1DiagnosticSpeedtestServersGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DiagnosticSpeedtestServersGet200ResponseWithDefaults() *V1DiagnosticSpeedtestServersGet200Response {
	this := V1DiagnosticSpeedtestServersGet200Response{}
	return &this
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestServersGet200Response) GetServer() []V1DiagnosticSpeedtestServersGet200ResponseServerInner {
	if o == nil || IsNil(o.Server) {
		var ret []V1DiagnosticSpeedtestServersGet200ResponseServerInner
		return ret
	}
	return o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestServersGet200Response) GetServerOk() ([]V1DiagnosticSpeedtestServersGet200ResponseServerInner, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestServersGet200Response) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given []V1DiagnosticSpeedtestServersGet200ResponseServerInner and assigns it to the Server field.
func (o *V1DiagnosticSpeedtestServersGet200Response) SetServer(v []V1DiagnosticSpeedtestServersGet200ResponseServerInner) {
	o.Server = v
}

func (o V1DiagnosticSpeedtestServersGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DiagnosticSpeedtestServersGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	return toSerialize, nil
}

type NullableV1DiagnosticSpeedtestServersGet200Response struct {
	value *V1DiagnosticSpeedtestServersGet200Response
	isSet bool
}

func (v NullableV1DiagnosticSpeedtestServersGet200Response) Get() *V1DiagnosticSpeedtestServersGet200Response {
	return v.value
}

func (v *NullableV1DiagnosticSpeedtestServersGet200Response) Set(val *V1DiagnosticSpeedtestServersGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DiagnosticSpeedtestServersGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DiagnosticSpeedtestServersGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DiagnosticSpeedtestServersGet200Response(val *V1DiagnosticSpeedtestServersGet200Response) *NullableV1DiagnosticSpeedtestServersGet200Response {
	return &NullableV1DiagnosticSpeedtestServersGet200Response{value: val, isSet: true}
}

func (v NullableV1DiagnosticSpeedtestServersGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DiagnosticSpeedtestServersGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


