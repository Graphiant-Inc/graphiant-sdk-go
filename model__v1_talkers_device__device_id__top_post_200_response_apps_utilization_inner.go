/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner{}

// V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner struct for V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner
type V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner struct {
	ClientIpAddress *string `json:"clientIpAddress,omitempty"`
	Usage *int64 `json:"usage,omitempty"`
}

// NewV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner instantiates a new V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner() *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner {
	this := V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner{}
	return &this
}

// NewV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInnerWithDefaults instantiates a new V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInnerWithDefaults() *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner {
	this := V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner{}
	return &this
}

// GetClientIpAddress returns the ClientIpAddress field value if set, zero value otherwise.
func (o *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) GetClientIpAddress() string {
	if o == nil || IsNil(o.ClientIpAddress) {
		var ret string
		return ret
	}
	return *o.ClientIpAddress
}

// GetClientIpAddressOk returns a tuple with the ClientIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) GetClientIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ClientIpAddress) {
		return nil, false
	}
	return o.ClientIpAddress, true
}

// HasClientIpAddress returns a boolean if a field has been set.
func (o *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) HasClientIpAddress() bool {
	if o != nil && !IsNil(o.ClientIpAddress) {
		return true
	}

	return false
}

// SetClientIpAddress gets a reference to the given string and assigns it to the ClientIpAddress field.
func (o *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) SetClientIpAddress(v string) {
	o.ClientIpAddress = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) GetUsage() int64 {
	if o == nil || IsNil(o.Usage) {
		var ret int64
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) GetUsageOk() (*int64, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given int64 and assigns it to the Usage field.
func (o *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) SetUsage(v int64) {
	o.Usage = &v
}

func (o V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientIpAddress) {
		toSerialize["clientIpAddress"] = o.ClientIpAddress
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	return toSerialize, nil
}

type NullableV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner struct {
	value *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner
	isSet bool
}

func (v NullableV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) Get() *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner {
	return v.value
}

func (v *NullableV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) Set(val *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner(val *V1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) *NullableV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner {
	return &NullableV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner{value: val, isSet: true}
}

func (v NullableV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TalkersDeviceDeviceIdTopPost200ResponseAppsUtilizationInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


