/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType{}

// V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType struct for V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType
type V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType struct {
	CoreNeighbor *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor `json:"coreNeighbor,omitempty"`
	CoreToCoreTunnel map[string]interface{} `json:"coreToCoreTunnel,omitempty"`
	Default map[string]interface{} `json:"default,omitempty"`
	GatewayNeighbor *V1AccountMfaGet200Response `json:"gatewayNeighbor,omitempty"`
	Wan *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWan `json:"wan,omitempty"`
	WanManagement map[string]interface{} `json:"wanManagement,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType {
	this := V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType{}
	return &this
}

// GetCoreNeighbor returns the CoreNeighbor field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetCoreNeighbor() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor {
	if o == nil || IsNil(o.CoreNeighbor) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor
		return ret
	}
	return *o.CoreNeighbor
}

// GetCoreNeighborOk returns a tuple with the CoreNeighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetCoreNeighborOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor, bool) {
	if o == nil || IsNil(o.CoreNeighbor) {
		return nil, false
	}
	return o.CoreNeighbor, true
}

// HasCoreNeighbor returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) HasCoreNeighbor() bool {
	if o != nil && !IsNil(o.CoreNeighbor) {
		return true
	}

	return false
}

// SetCoreNeighbor gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor and assigns it to the CoreNeighbor field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) SetCoreNeighbor(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceCoreNeighbor) {
	o.CoreNeighbor = &v
}

// GetCoreToCoreTunnel returns the CoreToCoreTunnel field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetCoreToCoreTunnel() map[string]interface{} {
	if o == nil || IsNil(o.CoreToCoreTunnel) {
		var ret map[string]interface{}
		return ret
	}
	return o.CoreToCoreTunnel
}

// GetCoreToCoreTunnelOk returns a tuple with the CoreToCoreTunnel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetCoreToCoreTunnelOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CoreToCoreTunnel) {
		return map[string]interface{}{}, false
	}
	return o.CoreToCoreTunnel, true
}

// HasCoreToCoreTunnel returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) HasCoreToCoreTunnel() bool {
	if o != nil && !IsNil(o.CoreToCoreTunnel) {
		return true
	}

	return false
}

// SetCoreToCoreTunnel gets a reference to the given map[string]interface{} and assigns it to the CoreToCoreTunnel field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) SetCoreToCoreTunnel(v map[string]interface{}) {
	o.CoreToCoreTunnel = v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetDefault() map[string]interface{} {
	if o == nil || IsNil(o.Default) {
		var ret map[string]interface{}
		return ret
	}
	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetDefaultOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Default) {
		return map[string]interface{}{}, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given map[string]interface{} and assigns it to the Default field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) SetDefault(v map[string]interface{}) {
	o.Default = v
}

// GetGatewayNeighbor returns the GatewayNeighbor field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetGatewayNeighbor() V1AccountMfaGet200Response {
	if o == nil || IsNil(o.GatewayNeighbor) {
		var ret V1AccountMfaGet200Response
		return ret
	}
	return *o.GatewayNeighbor
}

// GetGatewayNeighborOk returns a tuple with the GatewayNeighbor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetGatewayNeighborOk() (*V1AccountMfaGet200Response, bool) {
	if o == nil || IsNil(o.GatewayNeighbor) {
		return nil, false
	}
	return o.GatewayNeighbor, true
}

// HasGatewayNeighbor returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) HasGatewayNeighbor() bool {
	if o != nil && !IsNil(o.GatewayNeighbor) {
		return true
	}

	return false
}

// SetGatewayNeighbor gets a reference to the given V1AccountMfaGet200Response and assigns it to the GatewayNeighbor field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) SetGatewayNeighbor(v V1AccountMfaGet200Response) {
	o.GatewayNeighbor = &v
}

// GetWan returns the Wan field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetWan() V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWan {
	if o == nil || IsNil(o.Wan) {
		var ret V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWan
		return ret
	}
	return *o.Wan
}

// GetWanOk returns a tuple with the Wan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetWanOk() (*V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWan, bool) {
	if o == nil || IsNil(o.Wan) {
		return nil, false
	}
	return o.Wan, true
}

// HasWan returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) HasWan() bool {
	if o != nil && !IsNil(o.Wan) {
		return true
	}

	return false
}

// SetWan gets a reference to the given V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWan and assigns it to the Wan field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) SetWan(v V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceTypeWan) {
	o.Wan = &v
}

// GetWanManagement returns the WanManagement field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetWanManagement() map[string]interface{} {
	if o == nil || IsNil(o.WanManagement) {
		var ret map[string]interface{}
		return ret
	}
	return o.WanManagement
}

// GetWanManagementOk returns a tuple with the WanManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) GetWanManagementOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.WanManagement) {
		return map[string]interface{}{}, false
	}
	return o.WanManagement, true
}

// HasWanManagement returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) HasWanManagement() bool {
	if o != nil && !IsNil(o.WanManagement) {
		return true
	}

	return false
}

// SetWanManagement gets a reference to the given map[string]interface{} and assigns it to the WanManagement field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) SetWanManagement(v map[string]interface{}) {
	o.WanManagement = v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CoreNeighbor) {
		toSerialize["coreNeighbor"] = o.CoreNeighbor
	}
	if !IsNil(o.CoreToCoreTunnel) {
		toSerialize["coreToCoreTunnel"] = o.CoreToCoreTunnel
	}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.GatewayNeighbor) {
		toSerialize["gatewayNeighbor"] = o.GatewayNeighbor
	}
	if !IsNil(o.Wan) {
		toSerialize["wan"] = o.Wan
	}
	if !IsNil(o.WanManagement) {
		toSerialize["wanManagement"] = o.WanManagement
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) Get() *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) Set(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType(val *V1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreInterfacesValueInterfaceInterfaceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


