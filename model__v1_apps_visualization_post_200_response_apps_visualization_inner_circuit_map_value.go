/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue{}

// V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue struct for V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue
type V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue struct {
	Name *string `json:"name,omitempty"`
	SlaClass *string `json:"slaClass,omitempty"`
	Stats *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats `json:"stats,omitempty"`
	Usage *float64 `json:"usage,omitempty"`
	UsagePct *float32 `json:"usagePct,omitempty"`
}

// NewV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue instantiates a new V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue() *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue {
	this := V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue{}
	return &this
}

// NewV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueWithDefaults instantiates a new V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueWithDefaults() *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue {
	this := V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) SetName(v string) {
	o.Name = &v
}

// GetSlaClass returns the SlaClass field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) GetSlaClass() string {
	if o == nil || IsNil(o.SlaClass) {
		var ret string
		return ret
	}
	return *o.SlaClass
}

// GetSlaClassOk returns a tuple with the SlaClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) GetSlaClassOk() (*string, bool) {
	if o == nil || IsNil(o.SlaClass) {
		return nil, false
	}
	return o.SlaClass, true
}

// HasSlaClass returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) HasSlaClass() bool {
	if o != nil && !IsNil(o.SlaClass) {
		return true
	}

	return false
}

// SetSlaClass gets a reference to the given string and assigns it to the SlaClass field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) SetSlaClass(v string) {
	o.SlaClass = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) GetStats() V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats {
	if o == nil || IsNil(o.Stats) {
		var ret V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) GetStatsOk() (*V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) HasStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats and assigns it to the Stats field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) SetStats(v V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValueStats) {
	o.Stats = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) GetUsage() float64 {
	if o == nil || IsNil(o.Usage) {
		var ret float64
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) GetUsageOk() (*float64, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given float64 and assigns it to the Usage field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) SetUsage(v float64) {
	o.Usage = &v
}

// GetUsagePct returns the UsagePct field value if set, zero value otherwise.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) GetUsagePct() float32 {
	if o == nil || IsNil(o.UsagePct) {
		var ret float32
		return ret
	}
	return *o.UsagePct
}

// GetUsagePctOk returns a tuple with the UsagePct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) GetUsagePctOk() (*float32, bool) {
	if o == nil || IsNil(o.UsagePct) {
		return nil, false
	}
	return o.UsagePct, true
}

// HasUsagePct returns a boolean if a field has been set.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) HasUsagePct() bool {
	if o != nil && !IsNil(o.UsagePct) {
		return true
	}

	return false
}

// SetUsagePct gets a reference to the given float32 and assigns it to the UsagePct field.
func (o *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) SetUsagePct(v float32) {
	o.UsagePct = &v
}

func (o V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SlaClass) {
		toSerialize["slaClass"] = o.SlaClass
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.UsagePct) {
		toSerialize["usagePct"] = o.UsagePct
	}
	return toSerialize, nil
}

type NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue struct {
	value *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue
	isSet bool
}

func (v NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) Get() *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue {
	return v.value
}

func (v *NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) Set(val *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue(val *V1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) *NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue {
	return &NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue{value: val, isSet: true}
}

func (v NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AppsVisualizationPost200ResponseAppsVisualizationInnerCircuitMapValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


