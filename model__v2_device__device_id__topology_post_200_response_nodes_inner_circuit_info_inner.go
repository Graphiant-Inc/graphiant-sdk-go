/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner{}

// V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner struct for V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner
type V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner struct {
	AverageDownlinkUtilization *float64 `json:"averageDownlinkUtilization,omitempty"`
	AverageUplinkUtilization *float64 `json:"averageUplinkUtilization,omitempty"`
	CircuitCarrier *string `json:"circuitCarrier,omitempty"`
	CircuitName *string `json:"circuitName,omitempty"`
	CurrentDownlinkUtilization *float64 `json:"currentDownlinkUtilization,omitempty"`
	CurrentUplinkUtilization *float64 `json:"currentUplinkUtilization,omitempty"`
	DeviceId *int64 `json:"deviceId,omitempty"`
	InterfaceName *string `json:"interfaceName,omitempty"`
	Jitter *int64 `json:"jitter,omitempty"`
	Label *string `json:"label,omitempty"`
	LastResort *bool `json:"lastResort,omitempty"`
	Latency *int64 `json:"latency,omitempty"`
	Loss *float32 `json:"loss,omitempty"`
	Qoe *float32 `json:"qoe,omitempty"`
	Quality *string `json:"quality,omitempty"`
}

// NewV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner instantiates a new V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner() *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner {
	this := V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner{}
	return &this
}

// NewV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInnerWithDefaults instantiates a new V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInnerWithDefaults() *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner {
	this := V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner{}
	return &this
}

// GetAverageDownlinkUtilization returns the AverageDownlinkUtilization field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetAverageDownlinkUtilization() float64 {
	if o == nil || IsNil(o.AverageDownlinkUtilization) {
		var ret float64
		return ret
	}
	return *o.AverageDownlinkUtilization
}

// GetAverageDownlinkUtilizationOk returns a tuple with the AverageDownlinkUtilization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetAverageDownlinkUtilizationOk() (*float64, bool) {
	if o == nil || IsNil(o.AverageDownlinkUtilization) {
		return nil, false
	}
	return o.AverageDownlinkUtilization, true
}

// HasAverageDownlinkUtilization returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasAverageDownlinkUtilization() bool {
	if o != nil && !IsNil(o.AverageDownlinkUtilization) {
		return true
	}

	return false
}

// SetAverageDownlinkUtilization gets a reference to the given float64 and assigns it to the AverageDownlinkUtilization field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetAverageDownlinkUtilization(v float64) {
	o.AverageDownlinkUtilization = &v
}

// GetAverageUplinkUtilization returns the AverageUplinkUtilization field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetAverageUplinkUtilization() float64 {
	if o == nil || IsNil(o.AverageUplinkUtilization) {
		var ret float64
		return ret
	}
	return *o.AverageUplinkUtilization
}

// GetAverageUplinkUtilizationOk returns a tuple with the AverageUplinkUtilization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetAverageUplinkUtilizationOk() (*float64, bool) {
	if o == nil || IsNil(o.AverageUplinkUtilization) {
		return nil, false
	}
	return o.AverageUplinkUtilization, true
}

// HasAverageUplinkUtilization returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasAverageUplinkUtilization() bool {
	if o != nil && !IsNil(o.AverageUplinkUtilization) {
		return true
	}

	return false
}

// SetAverageUplinkUtilization gets a reference to the given float64 and assigns it to the AverageUplinkUtilization field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetAverageUplinkUtilization(v float64) {
	o.AverageUplinkUtilization = &v
}

// GetCircuitCarrier returns the CircuitCarrier field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetCircuitCarrier() string {
	if o == nil || IsNil(o.CircuitCarrier) {
		var ret string
		return ret
	}
	return *o.CircuitCarrier
}

// GetCircuitCarrierOk returns a tuple with the CircuitCarrier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetCircuitCarrierOk() (*string, bool) {
	if o == nil || IsNil(o.CircuitCarrier) {
		return nil, false
	}
	return o.CircuitCarrier, true
}

// HasCircuitCarrier returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasCircuitCarrier() bool {
	if o != nil && !IsNil(o.CircuitCarrier) {
		return true
	}

	return false
}

// SetCircuitCarrier gets a reference to the given string and assigns it to the CircuitCarrier field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetCircuitCarrier(v string) {
	o.CircuitCarrier = &v
}

// GetCircuitName returns the CircuitName field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetCircuitName() string {
	if o == nil || IsNil(o.CircuitName) {
		var ret string
		return ret
	}
	return *o.CircuitName
}

// GetCircuitNameOk returns a tuple with the CircuitName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetCircuitNameOk() (*string, bool) {
	if o == nil || IsNil(o.CircuitName) {
		return nil, false
	}
	return o.CircuitName, true
}

// HasCircuitName returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasCircuitName() bool {
	if o != nil && !IsNil(o.CircuitName) {
		return true
	}

	return false
}

// SetCircuitName gets a reference to the given string and assigns it to the CircuitName field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetCircuitName(v string) {
	o.CircuitName = &v
}

// GetCurrentDownlinkUtilization returns the CurrentDownlinkUtilization field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetCurrentDownlinkUtilization() float64 {
	if o == nil || IsNil(o.CurrentDownlinkUtilization) {
		var ret float64
		return ret
	}
	return *o.CurrentDownlinkUtilization
}

// GetCurrentDownlinkUtilizationOk returns a tuple with the CurrentDownlinkUtilization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetCurrentDownlinkUtilizationOk() (*float64, bool) {
	if o == nil || IsNil(o.CurrentDownlinkUtilization) {
		return nil, false
	}
	return o.CurrentDownlinkUtilization, true
}

// HasCurrentDownlinkUtilization returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasCurrentDownlinkUtilization() bool {
	if o != nil && !IsNil(o.CurrentDownlinkUtilization) {
		return true
	}

	return false
}

// SetCurrentDownlinkUtilization gets a reference to the given float64 and assigns it to the CurrentDownlinkUtilization field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetCurrentDownlinkUtilization(v float64) {
	o.CurrentDownlinkUtilization = &v
}

// GetCurrentUplinkUtilization returns the CurrentUplinkUtilization field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetCurrentUplinkUtilization() float64 {
	if o == nil || IsNil(o.CurrentUplinkUtilization) {
		var ret float64
		return ret
	}
	return *o.CurrentUplinkUtilization
}

// GetCurrentUplinkUtilizationOk returns a tuple with the CurrentUplinkUtilization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetCurrentUplinkUtilizationOk() (*float64, bool) {
	if o == nil || IsNil(o.CurrentUplinkUtilization) {
		return nil, false
	}
	return o.CurrentUplinkUtilization, true
}

// HasCurrentUplinkUtilization returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasCurrentUplinkUtilization() bool {
	if o != nil && !IsNil(o.CurrentUplinkUtilization) {
		return true
	}

	return false
}

// SetCurrentUplinkUtilization gets a reference to the given float64 and assigns it to the CurrentUplinkUtilization field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetCurrentUplinkUtilization(v float64) {
	o.CurrentUplinkUtilization = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetInterfaceName returns the InterfaceName field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetInterfaceName() string {
	if o == nil || IsNil(o.InterfaceName) {
		var ret string
		return ret
	}
	return *o.InterfaceName
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetInterfaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceName) {
		return nil, false
	}
	return o.InterfaceName, true
}

// HasInterfaceName returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasInterfaceName() bool {
	if o != nil && !IsNil(o.InterfaceName) {
		return true
	}

	return false
}

// SetInterfaceName gets a reference to the given string and assigns it to the InterfaceName field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetInterfaceName(v string) {
	o.InterfaceName = &v
}

// GetJitter returns the Jitter field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetJitter() int64 {
	if o == nil || IsNil(o.Jitter) {
		var ret int64
		return ret
	}
	return *o.Jitter
}

// GetJitterOk returns a tuple with the Jitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetJitterOk() (*int64, bool) {
	if o == nil || IsNil(o.Jitter) {
		return nil, false
	}
	return o.Jitter, true
}

// HasJitter returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasJitter() bool {
	if o != nil && !IsNil(o.Jitter) {
		return true
	}

	return false
}

// SetJitter gets a reference to the given int64 and assigns it to the Jitter field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetJitter(v int64) {
	o.Jitter = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetLabel(v string) {
	o.Label = &v
}

// GetLastResort returns the LastResort field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetLastResort() bool {
	if o == nil || IsNil(o.LastResort) {
		var ret bool
		return ret
	}
	return *o.LastResort
}

// GetLastResortOk returns a tuple with the LastResort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetLastResortOk() (*bool, bool) {
	if o == nil || IsNil(o.LastResort) {
		return nil, false
	}
	return o.LastResort, true
}

// HasLastResort returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasLastResort() bool {
	if o != nil && !IsNil(o.LastResort) {
		return true
	}

	return false
}

// SetLastResort gets a reference to the given bool and assigns it to the LastResort field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetLastResort(v bool) {
	o.LastResort = &v
}

// GetLatency returns the Latency field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetLatency() int64 {
	if o == nil || IsNil(o.Latency) {
		var ret int64
		return ret
	}
	return *o.Latency
}

// GetLatencyOk returns a tuple with the Latency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetLatencyOk() (*int64, bool) {
	if o == nil || IsNil(o.Latency) {
		return nil, false
	}
	return o.Latency, true
}

// HasLatency returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasLatency() bool {
	if o != nil && !IsNil(o.Latency) {
		return true
	}

	return false
}

// SetLatency gets a reference to the given int64 and assigns it to the Latency field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetLatency(v int64) {
	o.Latency = &v
}

// GetLoss returns the Loss field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetLoss() float32 {
	if o == nil || IsNil(o.Loss) {
		var ret float32
		return ret
	}
	return *o.Loss
}

// GetLossOk returns a tuple with the Loss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetLossOk() (*float32, bool) {
	if o == nil || IsNil(o.Loss) {
		return nil, false
	}
	return o.Loss, true
}

// HasLoss returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasLoss() bool {
	if o != nil && !IsNil(o.Loss) {
		return true
	}

	return false
}

// SetLoss gets a reference to the given float32 and assigns it to the Loss field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetLoss(v float32) {
	o.Loss = &v
}

// GetQoe returns the Qoe field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetQoe() float32 {
	if o == nil || IsNil(o.Qoe) {
		var ret float32
		return ret
	}
	return *o.Qoe
}

// GetQoeOk returns a tuple with the Qoe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetQoeOk() (*float32, bool) {
	if o == nil || IsNil(o.Qoe) {
		return nil, false
	}
	return o.Qoe, true
}

// HasQoe returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasQoe() bool {
	if o != nil && !IsNil(o.Qoe) {
		return true
	}

	return false
}

// SetQoe gets a reference to the given float32 and assigns it to the Qoe field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetQoe(v float32) {
	o.Qoe = &v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetQuality() string {
	if o == nil || IsNil(o.Quality) {
		var ret string
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) GetQualityOk() (*string, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given string and assigns it to the Quality field.
func (o *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) SetQuality(v string) {
	o.Quality = &v
}

func (o V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AverageDownlinkUtilization) {
		toSerialize["averageDownlinkUtilization"] = o.AverageDownlinkUtilization
	}
	if !IsNil(o.AverageUplinkUtilization) {
		toSerialize["averageUplinkUtilization"] = o.AverageUplinkUtilization
	}
	if !IsNil(o.CircuitCarrier) {
		toSerialize["circuitCarrier"] = o.CircuitCarrier
	}
	if !IsNil(o.CircuitName) {
		toSerialize["circuitName"] = o.CircuitName
	}
	if !IsNil(o.CurrentDownlinkUtilization) {
		toSerialize["currentDownlinkUtilization"] = o.CurrentDownlinkUtilization
	}
	if !IsNil(o.CurrentUplinkUtilization) {
		toSerialize["currentUplinkUtilization"] = o.CurrentUplinkUtilization
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.InterfaceName) {
		toSerialize["interfaceName"] = o.InterfaceName
	}
	if !IsNil(o.Jitter) {
		toSerialize["jitter"] = o.Jitter
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.LastResort) {
		toSerialize["lastResort"] = o.LastResort
	}
	if !IsNil(o.Latency) {
		toSerialize["latency"] = o.Latency
	}
	if !IsNil(o.Loss) {
		toSerialize["loss"] = o.Loss
	}
	if !IsNil(o.Qoe) {
		toSerialize["qoe"] = o.Qoe
	}
	if !IsNil(o.Quality) {
		toSerialize["quality"] = o.Quality
	}
	return toSerialize, nil
}

type NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner struct {
	value *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner
	isSet bool
}

func (v NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) Get() *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner {
	return v.value
}

func (v *NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) Set(val *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner(val *V2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) *NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner {
	return &NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner{value: val, isSet: true}
}

func (v NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2DeviceDeviceIdTopologyPost200ResponseNodesInnerCircuitInfoInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


