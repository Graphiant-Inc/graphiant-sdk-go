/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1PortalPrivateSyncPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1PortalPrivateSyncPostRequest{}

// V1PortalPrivateSyncPostRequest struct for V1PortalPrivateSyncPostRequest
type V1PortalPrivateSyncPostRequest struct {
	GcsName *string `json:"gcsName,omitempty"`
	Inventory []V1PortalPrivateSyncPostRequestInventoryInner `json:"inventory,omitempty"`
	IsFullSync *bool `json:"isFullSync,omitempty"`
}

// NewV1PortalPrivateSyncPostRequest instantiates a new V1PortalPrivateSyncPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1PortalPrivateSyncPostRequest() *V1PortalPrivateSyncPostRequest {
	this := V1PortalPrivateSyncPostRequest{}
	return &this
}

// NewV1PortalPrivateSyncPostRequestWithDefaults instantiates a new V1PortalPrivateSyncPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1PortalPrivateSyncPostRequestWithDefaults() *V1PortalPrivateSyncPostRequest {
	this := V1PortalPrivateSyncPostRequest{}
	return &this
}

// GetGcsName returns the GcsName field value if set, zero value otherwise.
func (o *V1PortalPrivateSyncPostRequest) GetGcsName() string {
	if o == nil || IsNil(o.GcsName) {
		var ret string
		return ret
	}
	return *o.GcsName
}

// GetGcsNameOk returns a tuple with the GcsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PortalPrivateSyncPostRequest) GetGcsNameOk() (*string, bool) {
	if o == nil || IsNil(o.GcsName) {
		return nil, false
	}
	return o.GcsName, true
}

// HasGcsName returns a boolean if a field has been set.
func (o *V1PortalPrivateSyncPostRequest) HasGcsName() bool {
	if o != nil && !IsNil(o.GcsName) {
		return true
	}

	return false
}

// SetGcsName gets a reference to the given string and assigns it to the GcsName field.
func (o *V1PortalPrivateSyncPostRequest) SetGcsName(v string) {
	o.GcsName = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *V1PortalPrivateSyncPostRequest) GetInventory() []V1PortalPrivateSyncPostRequestInventoryInner {
	if o == nil || IsNil(o.Inventory) {
		var ret []V1PortalPrivateSyncPostRequestInventoryInner
		return ret
	}
	return o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PortalPrivateSyncPostRequest) GetInventoryOk() ([]V1PortalPrivateSyncPostRequestInventoryInner, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *V1PortalPrivateSyncPostRequest) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given []V1PortalPrivateSyncPostRequestInventoryInner and assigns it to the Inventory field.
func (o *V1PortalPrivateSyncPostRequest) SetInventory(v []V1PortalPrivateSyncPostRequestInventoryInner) {
	o.Inventory = v
}

// GetIsFullSync returns the IsFullSync field value if set, zero value otherwise.
func (o *V1PortalPrivateSyncPostRequest) GetIsFullSync() bool {
	if o == nil || IsNil(o.IsFullSync) {
		var ret bool
		return ret
	}
	return *o.IsFullSync
}

// GetIsFullSyncOk returns a tuple with the IsFullSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PortalPrivateSyncPostRequest) GetIsFullSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFullSync) {
		return nil, false
	}
	return o.IsFullSync, true
}

// HasIsFullSync returns a boolean if a field has been set.
func (o *V1PortalPrivateSyncPostRequest) HasIsFullSync() bool {
	if o != nil && !IsNil(o.IsFullSync) {
		return true
	}

	return false
}

// SetIsFullSync gets a reference to the given bool and assigns it to the IsFullSync field.
func (o *V1PortalPrivateSyncPostRequest) SetIsFullSync(v bool) {
	o.IsFullSync = &v
}

func (o V1PortalPrivateSyncPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1PortalPrivateSyncPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GcsName) {
		toSerialize["gcsName"] = o.GcsName
	}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.IsFullSync) {
		toSerialize["isFullSync"] = o.IsFullSync
	}
	return toSerialize, nil
}

type NullableV1PortalPrivateSyncPostRequest struct {
	value *V1PortalPrivateSyncPostRequest
	isSet bool
}

func (v NullableV1PortalPrivateSyncPostRequest) Get() *V1PortalPrivateSyncPostRequest {
	return v.value
}

func (v *NullableV1PortalPrivateSyncPostRequest) Set(val *V1PortalPrivateSyncPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1PortalPrivateSyncPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1PortalPrivateSyncPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1PortalPrivateSyncPostRequest(val *V1PortalPrivateSyncPostRequest) *NullableV1PortalPrivateSyncPostRequest {
	return &NullableV1PortalPrivateSyncPostRequest{value: val, isSet: true}
}

func (v NullableV1PortalPrivateSyncPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1PortalPrivateSyncPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


