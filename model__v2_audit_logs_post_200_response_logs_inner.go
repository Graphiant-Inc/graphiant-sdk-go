/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AuditLogsPost200ResponseLogsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AuditLogsPost200ResponseLogsInner{}

// V2AuditLogsPost200ResponseLogsInner struct for V2AuditLogsPost200ResponseLogsInner
type V2AuditLogsPost200ResponseLogsInner struct {
	Action *string `json:"action,omitempty"`
	ActivityId *string `json:"activityId,omitempty"`
	Category *string `json:"category,omitempty"`
	Entity *V1ActivityLogsPostRequestSelectorJobEntity `json:"entity,omitempty"`
	JobType *string `json:"jobType,omitempty"`
	Target *V1ActivityLogsPostRequestSelectorJobEntity `json:"target,omitempty"`
	Ts *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"ts,omitempty"`
	User *string `json:"user,omitempty"`
}

// NewV2AuditLogsPost200ResponseLogsInner instantiates a new V2AuditLogsPost200ResponseLogsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AuditLogsPost200ResponseLogsInner() *V2AuditLogsPost200ResponseLogsInner {
	this := V2AuditLogsPost200ResponseLogsInner{}
	return &this
}

// NewV2AuditLogsPost200ResponseLogsInnerWithDefaults instantiates a new V2AuditLogsPost200ResponseLogsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AuditLogsPost200ResponseLogsInnerWithDefaults() *V2AuditLogsPost200ResponseLogsInner {
	this := V2AuditLogsPost200ResponseLogsInner{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *V2AuditLogsPost200ResponseLogsInner) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *V2AuditLogsPost200ResponseLogsInner) SetAction(v string) {
	o.Action = &v
}

// GetActivityId returns the ActivityId field value if set, zero value otherwise.
func (o *V2AuditLogsPost200ResponseLogsInner) GetActivityId() string {
	if o == nil || IsNil(o.ActivityId) {
		var ret string
		return ret
	}
	return *o.ActivityId
}

// GetActivityIdOk returns a tuple with the ActivityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) GetActivityIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActivityId) {
		return nil, false
	}
	return o.ActivityId, true
}

// HasActivityId returns a boolean if a field has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) HasActivityId() bool {
	if o != nil && !IsNil(o.ActivityId) {
		return true
	}

	return false
}

// SetActivityId gets a reference to the given string and assigns it to the ActivityId field.
func (o *V2AuditLogsPost200ResponseLogsInner) SetActivityId(v string) {
	o.ActivityId = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *V2AuditLogsPost200ResponseLogsInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *V2AuditLogsPost200ResponseLogsInner) SetCategory(v string) {
	o.Category = &v
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *V2AuditLogsPost200ResponseLogsInner) GetEntity() V1ActivityLogsPostRequestSelectorJobEntity {
	if o == nil || IsNil(o.Entity) {
		var ret V1ActivityLogsPostRequestSelectorJobEntity
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) GetEntityOk() (*V1ActivityLogsPostRequestSelectorJobEntity, bool) {
	if o == nil || IsNil(o.Entity) {
		return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) HasEntity() bool {
	if o != nil && !IsNil(o.Entity) {
		return true
	}

	return false
}

// SetEntity gets a reference to the given V1ActivityLogsPostRequestSelectorJobEntity and assigns it to the Entity field.
func (o *V2AuditLogsPost200ResponseLogsInner) SetEntity(v V1ActivityLogsPostRequestSelectorJobEntity) {
	o.Entity = &v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *V2AuditLogsPost200ResponseLogsInner) GetJobType() string {
	if o == nil || IsNil(o.JobType) {
		var ret string
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) GetJobTypeOk() (*string, bool) {
	if o == nil || IsNil(o.JobType) {
		return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) HasJobType() bool {
	if o != nil && !IsNil(o.JobType) {
		return true
	}

	return false
}

// SetJobType gets a reference to the given string and assigns it to the JobType field.
func (o *V2AuditLogsPost200ResponseLogsInner) SetJobType(v string) {
	o.JobType = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *V2AuditLogsPost200ResponseLogsInner) GetTarget() V1ActivityLogsPostRequestSelectorJobEntity {
	if o == nil || IsNil(o.Target) {
		var ret V1ActivityLogsPostRequestSelectorJobEntity
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) GetTargetOk() (*V1ActivityLogsPostRequestSelectorJobEntity, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given V1ActivityLogsPostRequestSelectorJobEntity and assigns it to the Target field.
func (o *V2AuditLogsPost200ResponseLogsInner) SetTarget(v V1ActivityLogsPostRequestSelectorJobEntity) {
	o.Target = &v
}

// GetTs returns the Ts field value if set, zero value otherwise.
func (o *V2AuditLogsPost200ResponseLogsInner) GetTs() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.Ts) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.Ts
}

// GetTsOk returns a tuple with the Ts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) GetTsOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.Ts) {
		return nil, false
	}
	return o.Ts, true
}

// HasTs returns a boolean if a field has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) HasTs() bool {
	if o != nil && !IsNil(o.Ts) {
		return true
	}

	return false
}

// SetTs gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the Ts field.
func (o *V2AuditLogsPost200ResponseLogsInner) SetTs(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.Ts = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *V2AuditLogsPost200ResponseLogsInner) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *V2AuditLogsPost200ResponseLogsInner) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *V2AuditLogsPost200ResponseLogsInner) SetUser(v string) {
	o.User = &v
}

func (o V2AuditLogsPost200ResponseLogsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AuditLogsPost200ResponseLogsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.ActivityId) {
		toSerialize["activityId"] = o.ActivityId
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Entity) {
		toSerialize["entity"] = o.Entity
	}
	if !IsNil(o.JobType) {
		toSerialize["jobType"] = o.JobType
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Ts) {
		toSerialize["ts"] = o.Ts
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableV2AuditLogsPost200ResponseLogsInner struct {
	value *V2AuditLogsPost200ResponseLogsInner
	isSet bool
}

func (v NullableV2AuditLogsPost200ResponseLogsInner) Get() *V2AuditLogsPost200ResponseLogsInner {
	return v.value
}

func (v *NullableV2AuditLogsPost200ResponseLogsInner) Set(val *V2AuditLogsPost200ResponseLogsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AuditLogsPost200ResponseLogsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AuditLogsPost200ResponseLogsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AuditLogsPost200ResponseLogsInner(val *V2AuditLogsPost200ResponseLogsInner) *NullableV2AuditLogsPost200ResponseLogsInner {
	return &NullableV2AuditLogsPost200ResponseLogsInner{value: val, isSet: true}
}

func (v NullableV2AuditLogsPost200ResponseLogsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AuditLogsPost200ResponseLogsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


