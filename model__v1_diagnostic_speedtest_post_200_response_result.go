/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DiagnosticSpeedtestPost200ResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DiagnosticSpeedtestPost200ResponseResult{}

// V1DiagnosticSpeedtestPost200ResponseResult struct for V1DiagnosticSpeedtestPost200ResponseResult
type V1DiagnosticSpeedtestPost200ResponseResult struct {
	AvgPingTime *float64 `json:"avgPingTime,omitempty"`
	DateTime *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"dateTime,omitempty"`
	DownloadSpeed *float64 `json:"downloadSpeed,omitempty"`
	Isp *string `json:"isp,omitempty"`
	MaxPingTime *float64 `json:"maxPingTime,omitempty"`
	MinPingTime *float64 `json:"minPingTime,omitempty"`
	Result *string `json:"result,omitempty"`
	ServerDetails *V1DiagnosticSpeedtestServersGet200ResponseServerInner `json:"serverDetails,omitempty"`
	UploadSpeed *float64 `json:"uploadSpeed,omitempty"`
}

// NewV1DiagnosticSpeedtestPost200ResponseResult instantiates a new V1DiagnosticSpeedtestPost200ResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DiagnosticSpeedtestPost200ResponseResult() *V1DiagnosticSpeedtestPost200ResponseResult {
	this := V1DiagnosticSpeedtestPost200ResponseResult{}
	return &this
}

// NewV1DiagnosticSpeedtestPost200ResponseResultWithDefaults instantiates a new V1DiagnosticSpeedtestPost200ResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DiagnosticSpeedtestPost200ResponseResultWithDefaults() *V1DiagnosticSpeedtestPost200ResponseResult {
	this := V1DiagnosticSpeedtestPost200ResponseResult{}
	return &this
}

// GetAvgPingTime returns the AvgPingTime field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetAvgPingTime() float64 {
	if o == nil || IsNil(o.AvgPingTime) {
		var ret float64
		return ret
	}
	return *o.AvgPingTime
}

// GetAvgPingTimeOk returns a tuple with the AvgPingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetAvgPingTimeOk() (*float64, bool) {
	if o == nil || IsNil(o.AvgPingTime) {
		return nil, false
	}
	return o.AvgPingTime, true
}

// HasAvgPingTime returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) HasAvgPingTime() bool {
	if o != nil && !IsNil(o.AvgPingTime) {
		return true
	}

	return false
}

// SetAvgPingTime gets a reference to the given float64 and assigns it to the AvgPingTime field.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) SetAvgPingTime(v float64) {
	o.AvgPingTime = &v
}

// GetDateTime returns the DateTime field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetDateTime() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.DateTime) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.DateTime
}

// GetDateTimeOk returns a tuple with the DateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetDateTimeOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.DateTime) {
		return nil, false
	}
	return o.DateTime, true
}

// HasDateTime returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) HasDateTime() bool {
	if o != nil && !IsNil(o.DateTime) {
		return true
	}

	return false
}

// SetDateTime gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the DateTime field.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) SetDateTime(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.DateTime = &v
}

// GetDownloadSpeed returns the DownloadSpeed field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetDownloadSpeed() float64 {
	if o == nil || IsNil(o.DownloadSpeed) {
		var ret float64
		return ret
	}
	return *o.DownloadSpeed
}

// GetDownloadSpeedOk returns a tuple with the DownloadSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetDownloadSpeedOk() (*float64, bool) {
	if o == nil || IsNil(o.DownloadSpeed) {
		return nil, false
	}
	return o.DownloadSpeed, true
}

// HasDownloadSpeed returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) HasDownloadSpeed() bool {
	if o != nil && !IsNil(o.DownloadSpeed) {
		return true
	}

	return false
}

// SetDownloadSpeed gets a reference to the given float64 and assigns it to the DownloadSpeed field.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) SetDownloadSpeed(v float64) {
	o.DownloadSpeed = &v
}

// GetIsp returns the Isp field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetIsp() string {
	if o == nil || IsNil(o.Isp) {
		var ret string
		return ret
	}
	return *o.Isp
}

// GetIspOk returns a tuple with the Isp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetIspOk() (*string, bool) {
	if o == nil || IsNil(o.Isp) {
		return nil, false
	}
	return o.Isp, true
}

// HasIsp returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) HasIsp() bool {
	if o != nil && !IsNil(o.Isp) {
		return true
	}

	return false
}

// SetIsp gets a reference to the given string and assigns it to the Isp field.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) SetIsp(v string) {
	o.Isp = &v
}

// GetMaxPingTime returns the MaxPingTime field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetMaxPingTime() float64 {
	if o == nil || IsNil(o.MaxPingTime) {
		var ret float64
		return ret
	}
	return *o.MaxPingTime
}

// GetMaxPingTimeOk returns a tuple with the MaxPingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetMaxPingTimeOk() (*float64, bool) {
	if o == nil || IsNil(o.MaxPingTime) {
		return nil, false
	}
	return o.MaxPingTime, true
}

// HasMaxPingTime returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) HasMaxPingTime() bool {
	if o != nil && !IsNil(o.MaxPingTime) {
		return true
	}

	return false
}

// SetMaxPingTime gets a reference to the given float64 and assigns it to the MaxPingTime field.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) SetMaxPingTime(v float64) {
	o.MaxPingTime = &v
}

// GetMinPingTime returns the MinPingTime field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetMinPingTime() float64 {
	if o == nil || IsNil(o.MinPingTime) {
		var ret float64
		return ret
	}
	return *o.MinPingTime
}

// GetMinPingTimeOk returns a tuple with the MinPingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetMinPingTimeOk() (*float64, bool) {
	if o == nil || IsNil(o.MinPingTime) {
		return nil, false
	}
	return o.MinPingTime, true
}

// HasMinPingTime returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) HasMinPingTime() bool {
	if o != nil && !IsNil(o.MinPingTime) {
		return true
	}

	return false
}

// SetMinPingTime gets a reference to the given float64 and assigns it to the MinPingTime field.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) SetMinPingTime(v float64) {
	o.MinPingTime = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) SetResult(v string) {
	o.Result = &v
}

// GetServerDetails returns the ServerDetails field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetServerDetails() V1DiagnosticSpeedtestServersGet200ResponseServerInner {
	if o == nil || IsNil(o.ServerDetails) {
		var ret V1DiagnosticSpeedtestServersGet200ResponseServerInner
		return ret
	}
	return *o.ServerDetails
}

// GetServerDetailsOk returns a tuple with the ServerDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetServerDetailsOk() (*V1DiagnosticSpeedtestServersGet200ResponseServerInner, bool) {
	if o == nil || IsNil(o.ServerDetails) {
		return nil, false
	}
	return o.ServerDetails, true
}

// HasServerDetails returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) HasServerDetails() bool {
	if o != nil && !IsNil(o.ServerDetails) {
		return true
	}

	return false
}

// SetServerDetails gets a reference to the given V1DiagnosticSpeedtestServersGet200ResponseServerInner and assigns it to the ServerDetails field.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) SetServerDetails(v V1DiagnosticSpeedtestServersGet200ResponseServerInner) {
	o.ServerDetails = &v
}

// GetUploadSpeed returns the UploadSpeed field value if set, zero value otherwise.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetUploadSpeed() float64 {
	if o == nil || IsNil(o.UploadSpeed) {
		var ret float64
		return ret
	}
	return *o.UploadSpeed
}

// GetUploadSpeedOk returns a tuple with the UploadSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) GetUploadSpeedOk() (*float64, bool) {
	if o == nil || IsNil(o.UploadSpeed) {
		return nil, false
	}
	return o.UploadSpeed, true
}

// HasUploadSpeed returns a boolean if a field has been set.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) HasUploadSpeed() bool {
	if o != nil && !IsNil(o.UploadSpeed) {
		return true
	}

	return false
}

// SetUploadSpeed gets a reference to the given float64 and assigns it to the UploadSpeed field.
func (o *V1DiagnosticSpeedtestPost200ResponseResult) SetUploadSpeed(v float64) {
	o.UploadSpeed = &v
}

func (o V1DiagnosticSpeedtestPost200ResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DiagnosticSpeedtestPost200ResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvgPingTime) {
		toSerialize["avgPingTime"] = o.AvgPingTime
	}
	if !IsNil(o.DateTime) {
		toSerialize["dateTime"] = o.DateTime
	}
	if !IsNil(o.DownloadSpeed) {
		toSerialize["downloadSpeed"] = o.DownloadSpeed
	}
	if !IsNil(o.Isp) {
		toSerialize["isp"] = o.Isp
	}
	if !IsNil(o.MaxPingTime) {
		toSerialize["maxPingTime"] = o.MaxPingTime
	}
	if !IsNil(o.MinPingTime) {
		toSerialize["minPingTime"] = o.MinPingTime
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.ServerDetails) {
		toSerialize["serverDetails"] = o.ServerDetails
	}
	if !IsNil(o.UploadSpeed) {
		toSerialize["uploadSpeed"] = o.UploadSpeed
	}
	return toSerialize, nil
}

type NullableV1DiagnosticSpeedtestPost200ResponseResult struct {
	value *V1DiagnosticSpeedtestPost200ResponseResult
	isSet bool
}

func (v NullableV1DiagnosticSpeedtestPost200ResponseResult) Get() *V1DiagnosticSpeedtestPost200ResponseResult {
	return v.value
}

func (v *NullableV1DiagnosticSpeedtestPost200ResponseResult) Set(val *V1DiagnosticSpeedtestPost200ResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DiagnosticSpeedtestPost200ResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DiagnosticSpeedtestPost200ResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DiagnosticSpeedtestPost200ResponseResult(val *V1DiagnosticSpeedtestPost200ResponseResult) *NullableV1DiagnosticSpeedtestPost200ResponseResult {
	return &NullableV1DiagnosticSpeedtestPost200ResponseResult{value: val, isSet: true}
}

func (v NullableV1DiagnosticSpeedtestPost200ResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DiagnosticSpeedtestPost200ResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


