/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestEdgeDnsDns type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestEdgeDnsDns{}

// V1DevicesDeviceIdConfigPutRequestEdgeDnsDns struct for V1DevicesDeviceIdConfigPutRequestEdgeDnsDns
type V1DevicesDeviceIdConfigPutRequestEdgeDnsDns struct {
	Cloudflare map[string]interface{} `json:"cloudflare,omitempty"`
	Dynamic *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic `json:"dynamic,omitempty"`
	Static *V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsStatic `json:"static,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestEdgeDnsDns instantiates a new V1DevicesDeviceIdConfigPutRequestEdgeDnsDns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestEdgeDnsDns() *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns {
	this := V1DevicesDeviceIdConfigPutRequestEdgeDnsDns{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestEdgeDnsDns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestEdgeDnsDnsWithDefaults() *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns {
	this := V1DevicesDeviceIdConfigPutRequestEdgeDnsDns{}
	return &this
}

// GetCloudflare returns the Cloudflare field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) GetCloudflare() map[string]interface{} {
	if o == nil || IsNil(o.Cloudflare) {
		var ret map[string]interface{}
		return ret
	}
	return o.Cloudflare
}

// GetCloudflareOk returns a tuple with the Cloudflare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) GetCloudflareOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Cloudflare) {
		return map[string]interface{}{}, false
	}
	return o.Cloudflare, true
}

// HasCloudflare returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) HasCloudflare() bool {
	if o != nil && !IsNil(o.Cloudflare) {
		return true
	}

	return false
}

// SetCloudflare gets a reference to the given map[string]interface{} and assigns it to the Cloudflare field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) SetCloudflare(v map[string]interface{}) {
	o.Cloudflare = v
}

// GetDynamic returns the Dynamic field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) GetDynamic() V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic {
	if o == nil || IsNil(o.Dynamic) {
		var ret V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic
		return ret
	}
	return *o.Dynamic
}

// GetDynamicOk returns a tuple with the Dynamic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) GetDynamicOk() (*V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic, bool) {
	if o == nil || IsNil(o.Dynamic) {
		return nil, false
	}
	return o.Dynamic, true
}

// HasDynamic returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) HasDynamic() bool {
	if o != nil && !IsNil(o.Dynamic) {
		return true
	}

	return false
}

// SetDynamic gets a reference to the given V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic and assigns it to the Dynamic field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) SetDynamic(v V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsDynamic) {
	o.Dynamic = &v
}

// GetStatic returns the Static field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) GetStatic() V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsStatic {
	if o == nil || IsNil(o.Static) {
		var ret V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsStatic
		return ret
	}
	return *o.Static
}

// GetStaticOk returns a tuple with the Static field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) GetStaticOk() (*V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsStatic, bool) {
	if o == nil || IsNil(o.Static) {
		return nil, false
	}
	return o.Static, true
}

// HasStatic returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) HasStatic() bool {
	if o != nil && !IsNil(o.Static) {
		return true
	}

	return false
}

// SetStatic gets a reference to the given V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsStatic and assigns it to the Static field.
func (o *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) SetStatic(v V1DevicesDeviceIdConfigPutRequestEdgeDnsDnsStatic) {
	o.Static = &v
}

func (o V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cloudflare) {
		toSerialize["cloudflare"] = o.Cloudflare
	}
	if !IsNil(o.Dynamic) {
		toSerialize["dynamic"] = o.Dynamic
	}
	if !IsNil(o.Static) {
		toSerialize["static"] = o.Static
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDns struct {
	value *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDns) Get() *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDns) Set(val *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDns) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDns(val *V1DevicesDeviceIdConfigPutRequestEdgeDnsDns) *NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDns {
	return &NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDns{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestEdgeDnsDns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


