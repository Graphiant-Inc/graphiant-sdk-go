/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DiagnosticClearArpDeviceIdPutRequestEntryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DiagnosticClearArpDeviceIdPutRequestEntryInner{}

// V1DiagnosticClearArpDeviceIdPutRequestEntryInner struct for V1DiagnosticClearArpDeviceIdPutRequestEntryInner
type V1DiagnosticClearArpDeviceIdPutRequestEntryInner struct {
	Address *V1DiagnosticClearArpDeviceIdPutRequestEntryInnerAddress `json:"address,omitempty"`
	AllEntry *bool `json:"allEntry,omitempty"`
	InterfaceName *string `json:"interfaceName,omitempty"`
}

// NewV1DiagnosticClearArpDeviceIdPutRequestEntryInner instantiates a new V1DiagnosticClearArpDeviceIdPutRequestEntryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DiagnosticClearArpDeviceIdPutRequestEntryInner() *V1DiagnosticClearArpDeviceIdPutRequestEntryInner {
	this := V1DiagnosticClearArpDeviceIdPutRequestEntryInner{}
	return &this
}

// NewV1DiagnosticClearArpDeviceIdPutRequestEntryInnerWithDefaults instantiates a new V1DiagnosticClearArpDeviceIdPutRequestEntryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DiagnosticClearArpDeviceIdPutRequestEntryInnerWithDefaults() *V1DiagnosticClearArpDeviceIdPutRequestEntryInner {
	this := V1DiagnosticClearArpDeviceIdPutRequestEntryInner{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) GetAddress() V1DiagnosticClearArpDeviceIdPutRequestEntryInnerAddress {
	if o == nil || IsNil(o.Address) {
		var ret V1DiagnosticClearArpDeviceIdPutRequestEntryInnerAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) GetAddressOk() (*V1DiagnosticClearArpDeviceIdPutRequestEntryInnerAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given V1DiagnosticClearArpDeviceIdPutRequestEntryInnerAddress and assigns it to the Address field.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) SetAddress(v V1DiagnosticClearArpDeviceIdPutRequestEntryInnerAddress) {
	o.Address = &v
}

// GetAllEntry returns the AllEntry field value if set, zero value otherwise.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) GetAllEntry() bool {
	if o == nil || IsNil(o.AllEntry) {
		var ret bool
		return ret
	}
	return *o.AllEntry
}

// GetAllEntryOk returns a tuple with the AllEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) GetAllEntryOk() (*bool, bool) {
	if o == nil || IsNil(o.AllEntry) {
		return nil, false
	}
	return o.AllEntry, true
}

// HasAllEntry returns a boolean if a field has been set.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) HasAllEntry() bool {
	if o != nil && !IsNil(o.AllEntry) {
		return true
	}

	return false
}

// SetAllEntry gets a reference to the given bool and assigns it to the AllEntry field.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) SetAllEntry(v bool) {
	o.AllEntry = &v
}

// GetInterfaceName returns the InterfaceName field value if set, zero value otherwise.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) GetInterfaceName() string {
	if o == nil || IsNil(o.InterfaceName) {
		var ret string
		return ret
	}
	return *o.InterfaceName
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) GetInterfaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceName) {
		return nil, false
	}
	return o.InterfaceName, true
}

// HasInterfaceName returns a boolean if a field has been set.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) HasInterfaceName() bool {
	if o != nil && !IsNil(o.InterfaceName) {
		return true
	}

	return false
}

// SetInterfaceName gets a reference to the given string and assigns it to the InterfaceName field.
func (o *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) SetInterfaceName(v string) {
	o.InterfaceName = &v
}

func (o V1DiagnosticClearArpDeviceIdPutRequestEntryInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DiagnosticClearArpDeviceIdPutRequestEntryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.AllEntry) {
		toSerialize["allEntry"] = o.AllEntry
	}
	if !IsNil(o.InterfaceName) {
		toSerialize["interfaceName"] = o.InterfaceName
	}
	return toSerialize, nil
}

type NullableV1DiagnosticClearArpDeviceIdPutRequestEntryInner struct {
	value *V1DiagnosticClearArpDeviceIdPutRequestEntryInner
	isSet bool
}

func (v NullableV1DiagnosticClearArpDeviceIdPutRequestEntryInner) Get() *V1DiagnosticClearArpDeviceIdPutRequestEntryInner {
	return v.value
}

func (v *NullableV1DiagnosticClearArpDeviceIdPutRequestEntryInner) Set(val *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DiagnosticClearArpDeviceIdPutRequestEntryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DiagnosticClearArpDeviceIdPutRequestEntryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DiagnosticClearArpDeviceIdPutRequestEntryInner(val *V1DiagnosticClearArpDeviceIdPutRequestEntryInner) *NullableV1DiagnosticClearArpDeviceIdPutRequestEntryInner {
	return &NullableV1DiagnosticClearArpDeviceIdPutRequestEntryInner{value: val, isSet: true}
}

func (v NullableV1DiagnosticClearArpDeviceIdPutRequestEntryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DiagnosticClearArpDeviceIdPutRequestEntryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


