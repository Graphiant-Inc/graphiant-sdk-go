/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AssuranceCreateUserReportPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AssuranceCreateUserReportPostRequest{}

// V2AssuranceCreateUserReportPostRequest struct for V2AssuranceCreateUserReportPostRequest
type V2AssuranceCreateUserReportPostRequest struct {
	CreatedOn *int64 `json:"createdOn,omitempty"`
	EmailList []string `json:"emailList,omitempty"`
	PdfContent *string `json:"pdfContent,omitempty"`
	RawContent []string `json:"rawContent,omitempty"`
	ReportName *string `json:"reportName,omitempty"`
	ReportType *string `json:"reportType,omitempty"`
	TimePeriod *string `json:"timePeriod,omitempty"`
}

// NewV2AssuranceCreateUserReportPostRequest instantiates a new V2AssuranceCreateUserReportPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssuranceCreateUserReportPostRequest() *V2AssuranceCreateUserReportPostRequest {
	this := V2AssuranceCreateUserReportPostRequest{}
	return &this
}

// NewV2AssuranceCreateUserReportPostRequestWithDefaults instantiates a new V2AssuranceCreateUserReportPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssuranceCreateUserReportPostRequestWithDefaults() *V2AssuranceCreateUserReportPostRequest {
	this := V2AssuranceCreateUserReportPostRequest{}
	return &this
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *V2AssuranceCreateUserReportPostRequest) GetCreatedOn() int64 {
	if o == nil || IsNil(o.CreatedOn) {
		var ret int64
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceCreateUserReportPostRequest) GetCreatedOnOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *V2AssuranceCreateUserReportPostRequest) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given int64 and assigns it to the CreatedOn field.
func (o *V2AssuranceCreateUserReportPostRequest) SetCreatedOn(v int64) {
	o.CreatedOn = &v
}

// GetEmailList returns the EmailList field value if set, zero value otherwise.
func (o *V2AssuranceCreateUserReportPostRequest) GetEmailList() []string {
	if o == nil || IsNil(o.EmailList) {
		var ret []string
		return ret
	}
	return o.EmailList
}

// GetEmailListOk returns a tuple with the EmailList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceCreateUserReportPostRequest) GetEmailListOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailList) {
		return nil, false
	}
	return o.EmailList, true
}

// HasEmailList returns a boolean if a field has been set.
func (o *V2AssuranceCreateUserReportPostRequest) HasEmailList() bool {
	if o != nil && !IsNil(o.EmailList) {
		return true
	}

	return false
}

// SetEmailList gets a reference to the given []string and assigns it to the EmailList field.
func (o *V2AssuranceCreateUserReportPostRequest) SetEmailList(v []string) {
	o.EmailList = v
}

// GetPdfContent returns the PdfContent field value if set, zero value otherwise.
func (o *V2AssuranceCreateUserReportPostRequest) GetPdfContent() string {
	if o == nil || IsNil(o.PdfContent) {
		var ret string
		return ret
	}
	return *o.PdfContent
}

// GetPdfContentOk returns a tuple with the PdfContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceCreateUserReportPostRequest) GetPdfContentOk() (*string, bool) {
	if o == nil || IsNil(o.PdfContent) {
		return nil, false
	}
	return o.PdfContent, true
}

// HasPdfContent returns a boolean if a field has been set.
func (o *V2AssuranceCreateUserReportPostRequest) HasPdfContent() bool {
	if o != nil && !IsNil(o.PdfContent) {
		return true
	}

	return false
}

// SetPdfContent gets a reference to the given string and assigns it to the PdfContent field.
func (o *V2AssuranceCreateUserReportPostRequest) SetPdfContent(v string) {
	o.PdfContent = &v
}

// GetRawContent returns the RawContent field value if set, zero value otherwise.
func (o *V2AssuranceCreateUserReportPostRequest) GetRawContent() []string {
	if o == nil || IsNil(o.RawContent) {
		var ret []string
		return ret
	}
	return o.RawContent
}

// GetRawContentOk returns a tuple with the RawContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceCreateUserReportPostRequest) GetRawContentOk() ([]string, bool) {
	if o == nil || IsNil(o.RawContent) {
		return nil, false
	}
	return o.RawContent, true
}

// HasRawContent returns a boolean if a field has been set.
func (o *V2AssuranceCreateUserReportPostRequest) HasRawContent() bool {
	if o != nil && !IsNil(o.RawContent) {
		return true
	}

	return false
}

// SetRawContent gets a reference to the given []string and assigns it to the RawContent field.
func (o *V2AssuranceCreateUserReportPostRequest) SetRawContent(v []string) {
	o.RawContent = v
}

// GetReportName returns the ReportName field value if set, zero value otherwise.
func (o *V2AssuranceCreateUserReportPostRequest) GetReportName() string {
	if o == nil || IsNil(o.ReportName) {
		var ret string
		return ret
	}
	return *o.ReportName
}

// GetReportNameOk returns a tuple with the ReportName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceCreateUserReportPostRequest) GetReportNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReportName) {
		return nil, false
	}
	return o.ReportName, true
}

// HasReportName returns a boolean if a field has been set.
func (o *V2AssuranceCreateUserReportPostRequest) HasReportName() bool {
	if o != nil && !IsNil(o.ReportName) {
		return true
	}

	return false
}

// SetReportName gets a reference to the given string and assigns it to the ReportName field.
func (o *V2AssuranceCreateUserReportPostRequest) SetReportName(v string) {
	o.ReportName = &v
}

// GetReportType returns the ReportType field value if set, zero value otherwise.
func (o *V2AssuranceCreateUserReportPostRequest) GetReportType() string {
	if o == nil || IsNil(o.ReportType) {
		var ret string
		return ret
	}
	return *o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceCreateUserReportPostRequest) GetReportTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReportType) {
		return nil, false
	}
	return o.ReportType, true
}

// HasReportType returns a boolean if a field has been set.
func (o *V2AssuranceCreateUserReportPostRequest) HasReportType() bool {
	if o != nil && !IsNil(o.ReportType) {
		return true
	}

	return false
}

// SetReportType gets a reference to the given string and assigns it to the ReportType field.
func (o *V2AssuranceCreateUserReportPostRequest) SetReportType(v string) {
	o.ReportType = &v
}

// GetTimePeriod returns the TimePeriod field value if set, zero value otherwise.
func (o *V2AssuranceCreateUserReportPostRequest) GetTimePeriod() string {
	if o == nil || IsNil(o.TimePeriod) {
		var ret string
		return ret
	}
	return *o.TimePeriod
}

// GetTimePeriodOk returns a tuple with the TimePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceCreateUserReportPostRequest) GetTimePeriodOk() (*string, bool) {
	if o == nil || IsNil(o.TimePeriod) {
		return nil, false
	}
	return o.TimePeriod, true
}

// HasTimePeriod returns a boolean if a field has been set.
func (o *V2AssuranceCreateUserReportPostRequest) HasTimePeriod() bool {
	if o != nil && !IsNil(o.TimePeriod) {
		return true
	}

	return false
}

// SetTimePeriod gets a reference to the given string and assigns it to the TimePeriod field.
func (o *V2AssuranceCreateUserReportPostRequest) SetTimePeriod(v string) {
	o.TimePeriod = &v
}

func (o V2AssuranceCreateUserReportPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AssuranceCreateUserReportPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedOn) {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if !IsNil(o.EmailList) {
		toSerialize["emailList"] = o.EmailList
	}
	if !IsNil(o.PdfContent) {
		toSerialize["pdfContent"] = o.PdfContent
	}
	if !IsNil(o.RawContent) {
		toSerialize["rawContent"] = o.RawContent
	}
	if !IsNil(o.ReportName) {
		toSerialize["reportName"] = o.ReportName
	}
	if !IsNil(o.ReportType) {
		toSerialize["reportType"] = o.ReportType
	}
	if !IsNil(o.TimePeriod) {
		toSerialize["timePeriod"] = o.TimePeriod
	}
	return toSerialize, nil
}

type NullableV2AssuranceCreateUserReportPostRequest struct {
	value *V2AssuranceCreateUserReportPostRequest
	isSet bool
}

func (v NullableV2AssuranceCreateUserReportPostRequest) Get() *V2AssuranceCreateUserReportPostRequest {
	return v.value
}

func (v *NullableV2AssuranceCreateUserReportPostRequest) Set(val *V2AssuranceCreateUserReportPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssuranceCreateUserReportPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssuranceCreateUserReportPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssuranceCreateUserReportPostRequest(val *V2AssuranceCreateUserReportPostRequest) *NullableV2AssuranceCreateUserReportPostRequest {
	return &NullableV2AssuranceCreateUserReportPostRequest{value: val, isSet: true}
}

func (v NullableV2AssuranceCreateUserReportPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssuranceCreateUserReportPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


