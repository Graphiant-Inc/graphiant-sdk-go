/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner{}

// V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner struct for V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner
type V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner struct {
	Active *bool `json:"active,omitempty"`
	Location *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInnerLocation `json:"location,omitempty"`
	Name *string `json:"name,omitempty"`
	NodeId *string `json:"nodeId,omitempty"`
	NodeType *string `json:"nodeType,omitempty"`
}

// NewV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner instantiates a new V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner() *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner {
	this := V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner{}
	return &this
}

// NewV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInnerWithDefaults instantiates a new V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInnerWithDefaults() *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner {
	this := V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) SetActive(v bool) {
	o.Active = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) GetLocation() V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInnerLocation {
	if o == nil || IsNil(o.Location) {
		var ret V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInnerLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) GetLocationOk() (*V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInnerLocation, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInnerLocation and assigns it to the Location field.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) SetLocation(v V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInnerLocation) {
	o.Location = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) SetName(v string) {
	o.Name = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) SetNodeId(v string) {
	o.NodeId = &v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) GetNodeType() string {
	if o == nil || IsNil(o.NodeType) {
		var ret string
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) GetNodeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NodeType) {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) HasNodeType() bool {
	if o != nil && !IsNil(o.NodeType) {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given string and assigns it to the NodeType field.
func (o *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) SetNodeType(v string) {
	o.NodeType = &v
}

func (o V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NodeId) {
		toSerialize["nodeId"] = o.NodeId
	}
	if !IsNil(o.NodeType) {
		toSerialize["nodeType"] = o.NodeType
	}
	return toSerialize, nil
}

type NullableV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner struct {
	value *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner
	isSet bool
}

func (v NullableV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) Get() *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner {
	return v.value
}

func (v *NullableV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) Set(val *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner(val *V2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) *NullableV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner {
	return &NullableV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner{value: val, isSet: true}
}

func (v NullableV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV2AssuranceTopologyOverviewPost200ResponseTopologyNodesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


