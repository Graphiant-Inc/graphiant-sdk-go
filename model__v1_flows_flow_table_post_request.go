/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1FlowsFlowTablePostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1FlowsFlowTablePostRequest{}

// V1FlowsFlowTablePostRequest struct for V1FlowsFlowTablePostRequest
type V1FlowsFlowTablePostRequest struct {
	AppId *int32 `json:"appId,omitempty"`
	AppName *string `json:"appName,omitempty"`
	CursorRef *V1AlarmHistoryGet200ResponseHistoryInnerTime `json:"cursorRef,omitempty"`
	DeviceId *int64 `json:"deviceId,omitempty"`
	IsDia *bool `json:"isDia,omitempty"`
	NumFlowRecords *int32 `json:"numFlowRecords,omitempty"`
	Selector *V1FlowsFlowTablePostRequestSelector `json:"selector,omitempty"`
	TimeWindow *V2NotificationlistPostRequestTimeWindow `json:"timeWindow,omitempty"`
}

// NewV1FlowsFlowTablePostRequest instantiates a new V1FlowsFlowTablePostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1FlowsFlowTablePostRequest() *V1FlowsFlowTablePostRequest {
	this := V1FlowsFlowTablePostRequest{}
	return &this
}

// NewV1FlowsFlowTablePostRequestWithDefaults instantiates a new V1FlowsFlowTablePostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1FlowsFlowTablePostRequestWithDefaults() *V1FlowsFlowTablePostRequest {
	this := V1FlowsFlowTablePostRequest{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePostRequest) GetAppId() int32 {
	if o == nil || IsNil(o.AppId) {
		var ret int32
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePostRequest) GetAppIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePostRequest) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int32 and assigns it to the AppId field.
func (o *V1FlowsFlowTablePostRequest) SetAppId(v int32) {
	o.AppId = &v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePostRequest) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePostRequest) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePostRequest) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *V1FlowsFlowTablePostRequest) SetAppName(v string) {
	o.AppName = &v
}

// GetCursorRef returns the CursorRef field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePostRequest) GetCursorRef() V1AlarmHistoryGet200ResponseHistoryInnerTime {
	if o == nil || IsNil(o.CursorRef) {
		var ret V1AlarmHistoryGet200ResponseHistoryInnerTime
		return ret
	}
	return *o.CursorRef
}

// GetCursorRefOk returns a tuple with the CursorRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePostRequest) GetCursorRefOk() (*V1AlarmHistoryGet200ResponseHistoryInnerTime, bool) {
	if o == nil || IsNil(o.CursorRef) {
		return nil, false
	}
	return o.CursorRef, true
}

// HasCursorRef returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePostRequest) HasCursorRef() bool {
	if o != nil && !IsNil(o.CursorRef) {
		return true
	}

	return false
}

// SetCursorRef gets a reference to the given V1AlarmHistoryGet200ResponseHistoryInnerTime and assigns it to the CursorRef field.
func (o *V1FlowsFlowTablePostRequest) SetCursorRef(v V1AlarmHistoryGet200ResponseHistoryInnerTime) {
	o.CursorRef = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePostRequest) GetDeviceId() int64 {
	if o == nil || IsNil(o.DeviceId) {
		var ret int64
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePostRequest) GetDeviceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePostRequest) HasDeviceId() bool {
	if o != nil && !IsNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int64 and assigns it to the DeviceId field.
func (o *V1FlowsFlowTablePostRequest) SetDeviceId(v int64) {
	o.DeviceId = &v
}

// GetIsDia returns the IsDia field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePostRequest) GetIsDia() bool {
	if o == nil || IsNil(o.IsDia) {
		var ret bool
		return ret
	}
	return *o.IsDia
}

// GetIsDiaOk returns a tuple with the IsDia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePostRequest) GetIsDiaOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDia) {
		return nil, false
	}
	return o.IsDia, true
}

// HasIsDia returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePostRequest) HasIsDia() bool {
	if o != nil && !IsNil(o.IsDia) {
		return true
	}

	return false
}

// SetIsDia gets a reference to the given bool and assigns it to the IsDia field.
func (o *V1FlowsFlowTablePostRequest) SetIsDia(v bool) {
	o.IsDia = &v
}

// GetNumFlowRecords returns the NumFlowRecords field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePostRequest) GetNumFlowRecords() int32 {
	if o == nil || IsNil(o.NumFlowRecords) {
		var ret int32
		return ret
	}
	return *o.NumFlowRecords
}

// GetNumFlowRecordsOk returns a tuple with the NumFlowRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePostRequest) GetNumFlowRecordsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumFlowRecords) {
		return nil, false
	}
	return o.NumFlowRecords, true
}

// HasNumFlowRecords returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePostRequest) HasNumFlowRecords() bool {
	if o != nil && !IsNil(o.NumFlowRecords) {
		return true
	}

	return false
}

// SetNumFlowRecords gets a reference to the given int32 and assigns it to the NumFlowRecords field.
func (o *V1FlowsFlowTablePostRequest) SetNumFlowRecords(v int32) {
	o.NumFlowRecords = &v
}

// GetSelector returns the Selector field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePostRequest) GetSelector() V1FlowsFlowTablePostRequestSelector {
	if o == nil || IsNil(o.Selector) {
		var ret V1FlowsFlowTablePostRequestSelector
		return ret
	}
	return *o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePostRequest) GetSelectorOk() (*V1FlowsFlowTablePostRequestSelector, bool) {
	if o == nil || IsNil(o.Selector) {
		return nil, false
	}
	return o.Selector, true
}

// HasSelector returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePostRequest) HasSelector() bool {
	if o != nil && !IsNil(o.Selector) {
		return true
	}

	return false
}

// SetSelector gets a reference to the given V1FlowsFlowTablePostRequestSelector and assigns it to the Selector field.
func (o *V1FlowsFlowTablePostRequest) SetSelector(v V1FlowsFlowTablePostRequestSelector) {
	o.Selector = &v
}

// GetTimeWindow returns the TimeWindow field value if set, zero value otherwise.
func (o *V1FlowsFlowTablePostRequest) GetTimeWindow() V2NotificationlistPostRequestTimeWindow {
	if o == nil || IsNil(o.TimeWindow) {
		var ret V2NotificationlistPostRequestTimeWindow
		return ret
	}
	return *o.TimeWindow
}

// GetTimeWindowOk returns a tuple with the TimeWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FlowsFlowTablePostRequest) GetTimeWindowOk() (*V2NotificationlistPostRequestTimeWindow, bool) {
	if o == nil || IsNil(o.TimeWindow) {
		return nil, false
	}
	return o.TimeWindow, true
}

// HasTimeWindow returns a boolean if a field has been set.
func (o *V1FlowsFlowTablePostRequest) HasTimeWindow() bool {
	if o != nil && !IsNil(o.TimeWindow) {
		return true
	}

	return false
}

// SetTimeWindow gets a reference to the given V2NotificationlistPostRequestTimeWindow and assigns it to the TimeWindow field.
func (o *V1FlowsFlowTablePostRequest) SetTimeWindow(v V2NotificationlistPostRequestTimeWindow) {
	o.TimeWindow = &v
}

func (o V1FlowsFlowTablePostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1FlowsFlowTablePostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.AppName) {
		toSerialize["appName"] = o.AppName
	}
	if !IsNil(o.CursorRef) {
		toSerialize["cursorRef"] = o.CursorRef
	}
	if !IsNil(o.DeviceId) {
		toSerialize["deviceId"] = o.DeviceId
	}
	if !IsNil(o.IsDia) {
		toSerialize["isDia"] = o.IsDia
	}
	if !IsNil(o.NumFlowRecords) {
		toSerialize["numFlowRecords"] = o.NumFlowRecords
	}
	if !IsNil(o.Selector) {
		toSerialize["selector"] = o.Selector
	}
	if !IsNil(o.TimeWindow) {
		toSerialize["timeWindow"] = o.TimeWindow
	}
	return toSerialize, nil
}

type NullableV1FlowsFlowTablePostRequest struct {
	value *V1FlowsFlowTablePostRequest
	isSet bool
}

func (v NullableV1FlowsFlowTablePostRequest) Get() *V1FlowsFlowTablePostRequest {
	return v.value
}

func (v *NullableV1FlowsFlowTablePostRequest) Set(val *V1FlowsFlowTablePostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1FlowsFlowTablePostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1FlowsFlowTablePostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1FlowsFlowTablePostRequest(val *V1FlowsFlowTablePostRequest) *NullableV1FlowsFlowTablePostRequest {
	return &NullableV1FlowsFlowTablePostRequest{value: val, isSet: true}
}

func (v NullableV1FlowsFlowTablePostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1FlowsFlowTablePostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


