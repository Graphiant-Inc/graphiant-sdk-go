/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol{}

// V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol struct for V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol
type V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol struct {
	Metric *int32 `json:"metric,omitempty"`
	MetricType *string `json:"metricType,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol{}
	return &this
}

// NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocolWithDefaults instantiates a new V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocolWithDefaults() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol {
	this := V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol{}
	return &this
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) GetMetric() int32 {
	if o == nil || IsNil(o.Metric) {
		var ret int32
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) GetMetricOk() (*int32, bool) {
	if o == nil || IsNil(o.Metric) {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) HasMetric() bool {
	if o != nil && !IsNil(o.Metric) {
		return true
	}

	return false
}

// SetMetric gets a reference to the given int32 and assigns it to the Metric field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) SetMetric(v int32) {
	o.Metric = &v
}

// GetMetricType returns the MetricType field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) GetMetricType() string {
	if o == nil || IsNil(o.MetricType) {
		var ret string
		return ret
	}
	return *o.MetricType
}

// GetMetricTypeOk returns a tuple with the MetricType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) GetMetricTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MetricType) {
		return nil, false
	}
	return o.MetricType, true
}

// HasMetricType returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) HasMetricType() bool {
	if o != nil && !IsNil(o.MetricType) {
		return true
	}

	return false
}

// SetMetricType gets a reference to the given string and assigns it to the MetricType field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) SetMetricType(v string) {
	o.MetricType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) SetType(v string) {
	o.Type = &v
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metric) {
		toSerialize["metric"] = o.Metric
	}
	if !IsNil(o.MetricType) {
		toSerialize["metricType"] = o.MetricType
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol struct {
	value *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol
	isSet bool
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) Get() *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol {
	return v.value
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) Set(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol(val *V1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol {
	return &NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol{value: val, isSet: true}
}

func (v NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DevicesDeviceIdConfigPutRequestCoreCoreVrfOspfv2ProcessRedistributionValueProtocol) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


