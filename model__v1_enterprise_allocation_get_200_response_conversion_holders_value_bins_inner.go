/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner{}

// V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner struct for V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner
type V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner struct {
	AllocationUpperBound *float32 `json:"allocationUpperBound,omitempty"`
	CoreConversionFactor *float32 `json:"coreConversionFactor,omitempty"`
	CoreConversionRate *int32 `json:"coreConversionRate,omitempty"`
	GwConversionFactor *float32 `json:"gwConversionFactor,omitempty"`
	GwConversionRate *int32 `json:"gwConversionRate,omitempty"`
	IsPrivate *bool `json:"isPrivate,omitempty"`
}

// NewV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner instantiates a new V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner() *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner {
	this := V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner{}
	return &this
}

// NewV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInnerWithDefaults instantiates a new V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInnerWithDefaults() *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner {
	this := V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner{}
	return &this
}

// GetAllocationUpperBound returns the AllocationUpperBound field value if set, zero value otherwise.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetAllocationUpperBound() float32 {
	if o == nil || IsNil(o.AllocationUpperBound) {
		var ret float32
		return ret
	}
	return *o.AllocationUpperBound
}

// GetAllocationUpperBoundOk returns a tuple with the AllocationUpperBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetAllocationUpperBoundOk() (*float32, bool) {
	if o == nil || IsNil(o.AllocationUpperBound) {
		return nil, false
	}
	return o.AllocationUpperBound, true
}

// HasAllocationUpperBound returns a boolean if a field has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) HasAllocationUpperBound() bool {
	if o != nil && !IsNil(o.AllocationUpperBound) {
		return true
	}

	return false
}

// SetAllocationUpperBound gets a reference to the given float32 and assigns it to the AllocationUpperBound field.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) SetAllocationUpperBound(v float32) {
	o.AllocationUpperBound = &v
}

// GetCoreConversionFactor returns the CoreConversionFactor field value if set, zero value otherwise.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetCoreConversionFactor() float32 {
	if o == nil || IsNil(o.CoreConversionFactor) {
		var ret float32
		return ret
	}
	return *o.CoreConversionFactor
}

// GetCoreConversionFactorOk returns a tuple with the CoreConversionFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetCoreConversionFactorOk() (*float32, bool) {
	if o == nil || IsNil(o.CoreConversionFactor) {
		return nil, false
	}
	return o.CoreConversionFactor, true
}

// HasCoreConversionFactor returns a boolean if a field has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) HasCoreConversionFactor() bool {
	if o != nil && !IsNil(o.CoreConversionFactor) {
		return true
	}

	return false
}

// SetCoreConversionFactor gets a reference to the given float32 and assigns it to the CoreConversionFactor field.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) SetCoreConversionFactor(v float32) {
	o.CoreConversionFactor = &v
}

// GetCoreConversionRate returns the CoreConversionRate field value if set, zero value otherwise.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetCoreConversionRate() int32 {
	if o == nil || IsNil(o.CoreConversionRate) {
		var ret int32
		return ret
	}
	return *o.CoreConversionRate
}

// GetCoreConversionRateOk returns a tuple with the CoreConversionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetCoreConversionRateOk() (*int32, bool) {
	if o == nil || IsNil(o.CoreConversionRate) {
		return nil, false
	}
	return o.CoreConversionRate, true
}

// HasCoreConversionRate returns a boolean if a field has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) HasCoreConversionRate() bool {
	if o != nil && !IsNil(o.CoreConversionRate) {
		return true
	}

	return false
}

// SetCoreConversionRate gets a reference to the given int32 and assigns it to the CoreConversionRate field.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) SetCoreConversionRate(v int32) {
	o.CoreConversionRate = &v
}

// GetGwConversionFactor returns the GwConversionFactor field value if set, zero value otherwise.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetGwConversionFactor() float32 {
	if o == nil || IsNil(o.GwConversionFactor) {
		var ret float32
		return ret
	}
	return *o.GwConversionFactor
}

// GetGwConversionFactorOk returns a tuple with the GwConversionFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetGwConversionFactorOk() (*float32, bool) {
	if o == nil || IsNil(o.GwConversionFactor) {
		return nil, false
	}
	return o.GwConversionFactor, true
}

// HasGwConversionFactor returns a boolean if a field has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) HasGwConversionFactor() bool {
	if o != nil && !IsNil(o.GwConversionFactor) {
		return true
	}

	return false
}

// SetGwConversionFactor gets a reference to the given float32 and assigns it to the GwConversionFactor field.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) SetGwConversionFactor(v float32) {
	o.GwConversionFactor = &v
}

// GetGwConversionRate returns the GwConversionRate field value if set, zero value otherwise.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetGwConversionRate() int32 {
	if o == nil || IsNil(o.GwConversionRate) {
		var ret int32
		return ret
	}
	return *o.GwConversionRate
}

// GetGwConversionRateOk returns a tuple with the GwConversionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetGwConversionRateOk() (*int32, bool) {
	if o == nil || IsNil(o.GwConversionRate) {
		return nil, false
	}
	return o.GwConversionRate, true
}

// HasGwConversionRate returns a boolean if a field has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) HasGwConversionRate() bool {
	if o != nil && !IsNil(o.GwConversionRate) {
		return true
	}

	return false
}

// SetGwConversionRate gets a reference to the given int32 and assigns it to the GwConversionRate field.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) SetGwConversionRate(v int32) {
	o.GwConversionRate = &v
}

// GetIsPrivate returns the IsPrivate field value if set, zero value otherwise.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetIsPrivate() bool {
	if o == nil || IsNil(o.IsPrivate) {
		var ret bool
		return ret
	}
	return *o.IsPrivate
}

// GetIsPrivateOk returns a tuple with the IsPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) GetIsPrivateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrivate) {
		return nil, false
	}
	return o.IsPrivate, true
}

// HasIsPrivate returns a boolean if a field has been set.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) HasIsPrivate() bool {
	if o != nil && !IsNil(o.IsPrivate) {
		return true
	}

	return false
}

// SetIsPrivate gets a reference to the given bool and assigns it to the IsPrivate field.
func (o *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) SetIsPrivate(v bool) {
	o.IsPrivate = &v
}

func (o V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllocationUpperBound) {
		toSerialize["allocationUpperBound"] = o.AllocationUpperBound
	}
	if !IsNil(o.CoreConversionFactor) {
		toSerialize["coreConversionFactor"] = o.CoreConversionFactor
	}
	if !IsNil(o.CoreConversionRate) {
		toSerialize["coreConversionRate"] = o.CoreConversionRate
	}
	if !IsNil(o.GwConversionFactor) {
		toSerialize["gwConversionFactor"] = o.GwConversionFactor
	}
	if !IsNil(o.GwConversionRate) {
		toSerialize["gwConversionRate"] = o.GwConversionRate
	}
	if !IsNil(o.IsPrivate) {
		toSerialize["isPrivate"] = o.IsPrivate
	}
	return toSerialize, nil
}

type NullableV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner struct {
	value *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner
	isSet bool
}

func (v NullableV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) Get() *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner {
	return v.value
}

func (v *NullableV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) Set(val *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner(val *V1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) *NullableV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner {
	return &NullableV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner{value: val, isSet: true}
}

func (v NullableV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1EnterpriseAllocationGet200ResponseConversionHoldersValueBinsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


