/*
Graphiant APIs

**To use the APIs:**  1) Login using `/api/v1/auth/login`   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: `Bearer <your token>`   5) Click \"Authorize\"   6) All requests are now authorized.  **Token valid for 2 hours. If expired:**   - Login again, click \"Authorize\", paste new token.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package graphiant_sdk

import (
	"encoding/json"
)

// checks if the V1SitesSiteIdPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SitesSiteIdPostRequest{}

// V1SitesSiteIdPostRequest struct for V1SitesSiteIdPostRequest
type V1SitesSiteIdPostRequest struct {
	Site *V1SitesPostRequestSite `json:"site,omitempty"`
}

// NewV1SitesSiteIdPostRequest instantiates a new V1SitesSiteIdPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SitesSiteIdPostRequest() *V1SitesSiteIdPostRequest {
	this := V1SitesSiteIdPostRequest{}
	return &this
}

// NewV1SitesSiteIdPostRequestWithDefaults instantiates a new V1SitesSiteIdPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SitesSiteIdPostRequestWithDefaults() *V1SitesSiteIdPostRequest {
	this := V1SitesSiteIdPostRequest{}
	return &this
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *V1SitesSiteIdPostRequest) GetSite() V1SitesPostRequestSite {
	if o == nil || IsNil(o.Site) {
		var ret V1SitesPostRequestSite
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SitesSiteIdPostRequest) GetSiteOk() (*V1SitesPostRequestSite, bool) {
	if o == nil || IsNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *V1SitesSiteIdPostRequest) HasSite() bool {
	if o != nil && !IsNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given V1SitesPostRequestSite and assigns it to the Site field.
func (o *V1SitesSiteIdPostRequest) SetSite(v V1SitesPostRequestSite) {
	o.Site = &v
}

func (o V1SitesSiteIdPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SitesSiteIdPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	return toSerialize, nil
}

type NullableV1SitesSiteIdPostRequest struct {
	value *V1SitesSiteIdPostRequest
	isSet bool
}

func (v NullableV1SitesSiteIdPostRequest) Get() *V1SitesSiteIdPostRequest {
	return v.value
}

func (v *NullableV1SitesSiteIdPostRequest) Set(val *V1SitesSiteIdPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SitesSiteIdPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SitesSiteIdPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SitesSiteIdPostRequest(val *V1SitesSiteIdPostRequest) *NullableV1SitesSiteIdPostRequest {
	return &NullableV1SitesSiteIdPostRequest{value: val, isSet: true}
}

func (v NullableV1SitesSiteIdPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SitesSiteIdPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


